Problem Statement

An integer sequence b 1 , b 2 ,…, b n is good if mex( b 1 , b 2 ,…, b n )−( b 1 | b 2 |…| b n )=1 . Here, mex(c) denotes the MEX ∗ of the collection c , and | is the bitwise OR operator.
Shohag has an integer sequence a 1 , a 2 ,…, a n . He will perform the following q updates on a :
- i x  — increase a i by x .
After each update, help him find the length of the longest good subarray † † of a .
∗ The minimum excluded (MEX) of a collection of integers c 1 , c 2 ,…, c k is defined as the smallest non-negative integer y which does not occur in the collection c . † † An array d is a subarray of an array f if d can be obtained from f by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.

Footnote
∗ The minimum excluded (MEX) of a collection of integers c 1 , c 2 ,…, c k is defined as the smallest non-negative integer y which does not occur in the collection c .
† † An array d is a subarray of an array f if d can be obtained from f by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.

Input
Input
Each test contains multiple test cases. The first line contains the number of test cases t ( 1≤t≤ 10 4 ). The description of the test cases follows.
The first line of each test case contains two space-separated integers n and q ( 1≤n,q≤ 10 5 ).
The second line of each test case contains n integers a 1 , a 2 ,…, a n ( 0≤ a i ≤n ).
The next q lines of each test case are of the following form:
- i x ( 1≤i,x≤n ) — it means you should increase a i by x .
It is guaranteed that the sum of n over all test cases doesn't exceed 10 5 and the sum of q doesn't exceed 10 5 .

Output
Output
For each test case, output q lines — on the i -th line output the length of the longest good subarray of a after the i -th update.

Example
[{'input': ['6 3', '0 0 1 0 1 0', '6 1', '3 2'], 'output': '6'}, {'input': ['6 3', '3 1', '1 3 1', '1 1'], 'output': '3'}]

Note
Note
In the first test case, after the first update, the array becomes [0,0,1,0,1,1] , and here the whole array is good because mex([0,0,1,0,1,1])−(0|0|1|0|1|1)=2−1=1 .
After the second update, the array becomes [0,0,3,0,1,1] , and here the subarray [0,1,1] has the maximum length among all the good subarrays.
Finally, after the third update, the array becomes [0,0,3,0,1,4] , and here the subarrays [0,0] and [0,1] both have the maximum length among all the good subarrays.