Problem Title: B. Parity and Sum

time limit per test1 second
memory limit per test256 megabytes

Given an array a of n positive integers.
In one operation, you can pick any pair of indexes (i,j) such that ai and aj have distinct parity, then replace the smaller one with the sum of them. More formally: 
Find the minimum number of operations needed to make all elements of the array have the same parity.
The first line contains a single integer t (1≤t≤104) — the number of test cases.
The first line of each test case contains a single integer n (1≤n≤2⋅105).
The second line contains n integers a1,a2,…,an (1≤ai≤109) — the elements of array a.
It is guaranteed that the sum of n over all test cases does not exceed 2⋅105.
For each test case, output a single integer — the minimum number of operations required.
In the first test case, all integers already have the same parity. Therefore, no operation is needed.
In the third test case, we can perform two operations (1,2) and (1,3). The array a transforms as follows: a=[2,3,4]⟶[5,3,4]⟶[5,3,9].
In the fourth test case, an example of an optimal sequence of operations is (1,2), (1,3), (1,4), and (1,4). The array a transforms as follows: a=[3,2,2,8]⟶[3,5,2,8]⟶[3,5,5,8]⟶[11,5,5,8]⟶[11,5,5,19].