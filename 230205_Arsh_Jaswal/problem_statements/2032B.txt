Problem Title: B. Medians

time limit per test1 second
memory limit per test256 megabytes

You are given an array a=[1,2,…,n], where n is odd, and an integer k.
Your task is to choose an odd positive integer m and to split a into m subarrays† b1,b2,…,bm such that:
†A subarray of the array a of length n is the array [al,al+1,…,ar] for some integers 1≤l≤r≤n.
‡A median of the array of odd length is the middle element after the array is sorted in non-decreasing order. For example: median([1,2,5,4,3])=3, median([3,2,1])=2, median([2,1,2,1,2,2,2])=2.
Each test consists of multiple test cases. The first line contains a single integer t (1≤t≤5000) — the number of test cases. The description of the test cases follows.
The first line of each test case contains two integers n and k (1≤k≤n<2⋅105, n is odd) — the length of array a and the desired median of the array of medians of all subarrays.
It is guaranteed that the sum of n over all test cases does not exceed 2⋅105.
For each test case:
In detail, for a valid answer [p1,p2,…,pm]:
If there are multiple solutions, you can output any of them.
In the first test case, the given partition has m=1 and b1=[1]. It is obvious that median([median([1])])=median([1])=1.
In the second test case, the given partition has m=3 and:
Therefore, median([median([1]),median([2]),median([3])])=median([1,2,3])=2.
In the third test case, there is no valid partition for k=3.
In the fourth test case, the given partition has m=5 and:
Therefore, median([median([1,2,3]),median([4,5,6]),median([7,8,9]),median([10,11,12]),median([13,14,15])])=median([2,5,8,11,14])=8.