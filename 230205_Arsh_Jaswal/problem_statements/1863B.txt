Problem Title: B. Split Sort

time limit per test1 second
memory limit per test256 megabytes

You are given a permutation† p1,p2,…,pn of integers 1 to n.
You can change the current permutation by applying the following operation several (possibly, zero) times:
For example, if the permutation used to be [6,4,3,5,2,1] and you choose x=4, then you will first write down [3,2,1], then append this with [6,4,5]. So the initial permutation will be replaced by [3,2,1,6,4,5].
Find the minimum number of operations you need to achieve pi=i for i=1,2,…,n. We can show that it is always possible to do so.
† A permutation of length n is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [2,3,1,5,4] is a permutation, but [1,2,2] is not a permutation (2 appears twice in the array), and [1,3,4] is also not a permutation (n=3 but there is 4 in the array).
Each test contains multiple test cases. The first line contains the number of test cases t (1≤t≤1000). The description of the test cases follows.
The first line of each test case contains one integer n (1≤n≤100000).
The second line of each test case contains n integers p1,p2,…,pn (1≤pi≤n). It is guaranteed that p1,p2,…,pn is a permutation.
It is guaranteed that the sum of n over all test cases does not exceed 100000.
For each test case, output the answer on a separate line.
In the first test case, n=1 and p1=1, so there is nothing left to do.
In the second test case, we can choose x=2 and we immediately obtain p1=1, p2=2.
In the third test case, we can achieve the minimum number of operations in the following way: