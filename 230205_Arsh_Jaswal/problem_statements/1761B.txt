Problem Title: B. Elimination of a Ring

time limit per test1 second
memory limit per test256 megabytes

Define a cyclic sequence of size nn as an array ss of length nn, in which snsn is adjacent to s1s1.
Muxii has a ring represented by a cyclic sequence aa of size nn.
However, the ring itself hates equal adjacent elements. So if two adjacent elements in the sequence are equal at any time, one of them will be erased immediately. The sequence doesn't contain equal adjacent elements initially.
Muxii can perform the following operation until the sequence becomes empty:
For example, if ring is [1,2,4,2,3,2][1,2,4,2,3,2], and Muxii erases element 44, then ring would erase one of the elements equal to 22, and the ring will become [1,2,3,2][1,2,3,2].
Muxii wants to find the maximum number of operations he could perform.
Note that in a ring of size 11, its only element isn't considered adjacent to itself (so it's not immediately erased).
Each test contains multiple test cases. The first line contains a single integer tt (1≤t≤1001≤t≤100) — the number of test cases. The description of test cases follows.
The first line of each test case contains a single integer nn (1≤n≤1001≤n≤100) — the size of the cyclic sequence.
The second line of each test case contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤n1≤ai≤n) — the sequence itself.
It's guaranteed that ai≠ai+1ai≠ai+1 for 1≤i<n1≤i<n.
It's guaranteed that an≠a1an≠a1 when n>1n>1.
For each test case, output a single integer — the maximum number of operations Muxii can perform.
In the first test case, you can erase the second element first, then erase the remaining elements one by one in any order. In total, you can perform the operation 44 times. Note that if you erase the first element first, then the sequence will be turned into [2,3,2][2,3,2] and then immediately become [2,3][2,3].
In the second test case, you can erase the first element first, then the sequence becomes [2,1][2,1]. Then you can erase all remaining elements one by one in any order.