Problem Title: B. Make Array Good

time limit per test1 second
memory limit per test256 megabytes

An array b of m positive integers is good if for all pairs i and j (1≤i,j≤m), max(bi,bj) is divisible by min(bi,bj).
You are given an array a of n positive integers. You can perform the following operation:
You have to construct a sequence of at most n operations that will make a good. It can be proven that under the constraints of the problem, such a sequence of operations always exists.
Each test contains multiple test cases. The first line contains a single integer t (1≤t≤104) — the number of test cases. The description of the test cases follows.
The first line of each test case contains a single integer n (1≤n≤105) — the length of the array a.
The second line of each test case contains n space-separated integers a1,a2,…,an (1≤ai≤109) — representing the array a.
It is guaranteed that the sum of n over all test cases does not exceed 105.
For each test, output a single integer p (0≤p≤n) — denoting the number of operations in your solution. 
In each of the following p lines, output two space-separated integers — i and x.
You do not need to minimize the number of operations. It can be proven that a solution always exists.
In the first test case, array a becomes [5,5,5,5] after the operations. It is easy to see that [5,5,5,5] is good.
In the second test case, array a is already good.
In the third test case, after performing the operations, array a becomes [10,5,350,5,10], which is good.
In the fourth test case, after performing the operations, array a becomes [60,10,20], which is good.