Problem Title: B. AND Sorting

time limit per test1 second
memory limit per test256 megabytes

You are given a permutation pp of integers from 00 to n−1n−1 (each of them occurs exactly once). Initially, the permutation is not sorted (that is, pi>pi+1pi>pi+1 for at least one 1≤i≤n−11≤i≤n−1). 
The permutation is called XX-sortable for some non-negative integer XX if it is possible to sort the permutation by performing the operation below some finite number of times: 
Here && denotes the bitwise AND operation.
Find the maximum value of XX such that pp is XX-sortable. It can be shown that there always exists some value of XX such that pp is XX-sortable.
The input consists of multiple test cases. The first line contains a single integer tt (1≤t≤104)(1≤t≤104)  — the number of test cases. Description of test cases follows.
The first line of each test case contains a single integer nn (2≤n≤2⋅105)(2≤n≤2⋅105)  — the length of the permutation.
The second line of each test case contains nn integers p1,p2,...,pnp1,p2,...,pn (0≤pi≤n−10≤pi≤n−1, all pipi are distinct)  — the elements of pp. It is guaranteed that pp is not sorted.
It is guaranteed that the sum of nn over all cases does not exceed 2⋅1052⋅105.
For each test case output a single integer — the maximum value of XX such that pp is XX-sortable.
In the first test case, the only XX for which the permutation is XX-sortable are X=0X=0 and X=2X=2, maximum of which is 22.
Sorting using X=0X=0: 
Sorting using X=2X=2: 
In the second test case, we must swap p1p1 and p2p2 which is possible only with X=0X=0.