Problem Title: B. Count the Number of Pairs

time limit per test2 seconds
memory limit per test256 megabytes

Kristina has a string ss of length nn, consisting only of lowercase and uppercase Latin letters. For each pair of lowercase letter and its matching uppercase letter, Kristina can get 11 burl. However, pairs of characters cannot overlap, so each character can only be in one pair.
For example, if she has the string ss = "aAaaBACacbE", she can get a burl for the following character pairs: 
Kristina wants to get more burles for her string, so she is going to perform no more than kk operations on it. In one operation, she can:
For example, when kk = 2 and ss = "aAaaBACacbE" it can perform one operation: choose s3s3 = "a" and make it uppercase. Then she will get another pair of s3s3 = "A" and s8s8 = "a"
Find maximum number of burles Kristina can get for her string.
The first line of input data contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases.
The description of the test cases follows.
The first line of each test case contains two integers nn (1≤n≤2⋅1051≤n≤2⋅105) and kk (0≤k≤n0≤k≤n) — the number of characters in the string and the maximum number of operations that can be performed on it.
The second line of each test case contains a string ss of length nn, consisting only of lowercase and uppercase Latin letters.
It is guaranteed that the sum of nn over all test cases does not exceed 2⋅1052⋅105.
For each test case, print exactly one integer on a separate line: the maximum number of burles that Kristina can get for her string ss.
The first test case is explained in the problem statement.
In the second test case, it is not possible to get any pair by performing any number of operations.