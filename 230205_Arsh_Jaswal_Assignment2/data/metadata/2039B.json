{
    "title": "B. Shohag Loves Strings",
    "description": "For a string p, let f(p) be the number of distinct non-empty substrings∗ of p.\nShohag has a string s. Help him find a non-empty string p such that p is a substring of s and f(p) is even or state that no such string exists.\n∗A string a is a substring of a string b if a can be obtained from b by deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end.\nThe first line contains a single integer t (1≤t≤104) — the number of test cases.\nThe first and only line of each test case contains a string s (1≤|s|≤105) consisting of lowercase English letters.\nIt is guaranteed that the sum of the length of s over all test cases doesn't exceed 3⋅105.\nFor each test case, print a non-empty string that satisfies the conditions mentioned in the statement, or −1 if no such string exists. If there are multiple solutions, output any.\nIn the first test case, we can set p= abaa because it is a substring of s and the distinct non-empty substrings of p are a, b, aa, ab, ba, aba, baa and abaa, so it has a total of 8 distinct substrings which is even.\nIn the second test case, we can only set p= a but it has one distinct non-empty substring but this number is odd, so not valid.\nIn the third test case, the whole string contains 52 distinct non-empty substrings, so the string itself is a valid solution.",
    "time limit": "time limit per test1 second",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "strings",
        "*1000"
    ]
}