{
    "title": "B. K-Sort",
    "description": "You are given an array of integers a of length n. \nYou can apply the following operation any number of times (maybe, zero): \nFind the minimum number of coins needed to make a non-decreasing. That is, a1≤a2≤…≤an.\nEach test contains multiple test cases. The first line of input contains a single integer t (1≤t≤104) — the number of test cases. The description of the test cases follows.\nThe first line of each test case contains a single integer n (1≤n≤105) — the length of the array a.\nThe second line of each test case contains n integers a1,a2,…,an (1≤ai≤109) — the elements of the array a.\nIt is guaranteed that the sum of n over all test cases does not exceed 105.\nFor each test case, output a single integer — the minimum number of coins needed to make a non-decreasing.\nIn the first test case, a is already sorted, so you don't have to spend any coins.\nIn the second test case, the optimal sequence of operations is: ",
    "time limit": "time limit per test1 second",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "greedy",
        "*1000"
    ]
}