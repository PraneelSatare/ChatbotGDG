{
    "title": "D. Challenging Valleys",
    "description": "You are given an array a[0…n−1] of n integers. This array is called a \"valley\" if there exists exactly one subarray a[l…r] such that:\nHere are three examples:\nThe first image shows the array [3,2,2,1,2,2,3], it is a valley because only subarray with indices l=r=3 satisfies the condition.\nThe second image shows the array [1,1,1,2,3,3,4,5,6,6,6], it is a valley because only subarray with indices l=0,r=2 satisfies the codition.\nThe third image shows the array [1,2,3,4,3,2,1], it is not a valley because two subarrays l=r=0 and l=r=6 that satisfy the condition.\nYou are asked whether the given array is a valley or not.\nNote that we consider the array to be indexed from 0.\nThe first line contains a single integer t (1≤t≤104) — the number of test cases.\nThe first line of each test case contains a single integer n (1≤n≤2⋅105) — the length of the array.\nThe second line of each test case contains n integers ai (1≤ai≤109) — the elements of the array.\nIt is guaranteed that the sum of n over all test cases is smaller than 2⋅105.\nFor each test case, output \"YES\" (without quotes) if the array is a valley, and \"NO\" (without quotes) otherwise.\nYou can output the answer in any case (for example, the strings \"yEs\", \"yes\", \"Yes\" and \"YES\" will be recognized as a positive answer).\nThe first three test cases are explained in the statement.",
    "time limit": "time limit per test2 seconds",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "implementation",
        "two pointers",
        "*1000"
    ]
}