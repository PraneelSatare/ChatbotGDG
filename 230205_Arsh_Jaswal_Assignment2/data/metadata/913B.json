{
    "title": "B. Christmas Spruce",
    "description": "Consider a rooted tree. A rooted tree has one special vertex called the root. All edges are directed from the root. Vertex u is called a child of vertex v and vertex v is called a parent of vertex u if there exists a directed edge from v to u. A vertex is called a leaf if it doesn't have children and has a parent.\nLet's call a rooted tree a spruce if its every non-leaf vertex has at least 3 leaf children. You are given a rooted tree, check whether it's a spruce.\nThe definition of a rooted tree can be found here.\nThe first line contains one integer n — the number of vertices in the tree (3 ≤ n ≤ 1 000). Each of the next n - 1 lines contains one integer pi (1 ≤ i ≤ n - 1) — the index of the parent of the i + 1-th vertex (1 ≤ pi ≤ i).\nVertex 1 is the root. It's guaranteed that the root has at least 2 children.\nPrint \"Yes\" if the tree is a spruce and \"No\" otherwise.\nThe first example:\n\nThe second example:\n\nIt is not a spruce, because the non-leaf vertex 1 has only 2 leaf children.\nThe third example:\n",
    "time limit": "time limit per test1 second",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "implementation",
        "trees",
        "*1200"
    ]
}