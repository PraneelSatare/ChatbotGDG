{
    "title": "C. Yarik and Array",
    "description": "A subarray is a continuous part of array.\nYarik recently found an array aa of nn elements and became very interested in finding the maximum sum of a non empty subarray. However, Yarik doesn't like consecutive integers with the same parity, so the subarray he chooses must have alternating parities for adjacent elements.\nFor example, [1,2,3][1,2,3] is acceptable, but [1,2,4][1,2,4] is not, as 22 and 44 are both even and adjacent.\nYou need to help Yarik by finding the maximum sum of such a subarray.\nThe first line contains an integer tt (1≤t≤104)(1≤t≤104) — number of test cases. Each test case is described as follows.\nThe first line of each test case contains an integer nn (1≤n≤2⋅105)(1≤n≤2⋅105) — length of the array.\nThe second line of each test case contains nn integers a1,a2,…,ana1,a2,…,an (−103≤ai≤103)(−103≤ai≤103) — elements of the array.\nIt is guaranteed that the sum of nn for all test cases does not exceed 2⋅1052⋅105.\nFor each test case, output a single integer — the answer to the problem.",
    "time limit": "time limit per test1 second",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "dp",
        "greedy",
        "two pointers",
        "*1100"
    ]
}