{
    "title": "C. Train and Queries",
    "description": "Along the railroad there are stations indexed from 1 to 109. An express train always travels along a route consisting of n stations with indices u1,u2,…,un, where (1≤ui≤109). The train travels along the route from left to right. It starts at station u1, then stops at station u2, then at u3, and so on. Station un — the terminus.\nIt is possible that the train will visit the same station more than once. That is, there may be duplicates among the values u1,u2,…,un.\nYou are given k queries, each containing two different integers aj and bj (1≤aj,bj≤109). For each query, determine whether it is possible to travel by train from the station with index aj to the station with index bj.\nFor example, let the train route consist of 6 of stations with indices [3,7,1,5,1,4] and give 3 of the following queries: \nIt is possible to travel from station 3 to station 5 by taking a section of the route consisting of stations [3,7,1,5]. Answer: YES. \nYou cannot travel from station 1 to station 7 because the train cannot travel in the opposite direction. Answer: NO. \nIt is not possible to travel from station 3 to station 10 because station 10 is not part of the train's route. Answer: NO. \nThe first line of the input contains an integer t (1≤t≤104) —the number of test cases in the test.\nThe descriptions of the test cases follow.\nThe first line of each test case is empty.\nThe second line of each test case contains two integers: n and k (1≤n≤2⋅105,1≤k≤2⋅105) —the number of stations the train route consists of and the number of queries.\nThe third line of each test case contains exactly n integers u1,u2,…,un (1≤ui≤109). The values u1,u2,…,un are not necessarily different.\nThe following k lines contain two different integers aj and bj (1≤aj,bj≤109) describing the query with index j.\nIt is guaranteed that the sum of n values over all test cases in the test does not exceed 2⋅105. Similarly, it is guaranteed that the sum of k values over all test cases in the test also does not exceed 2⋅105\nFor each test case, output on a separate line:\nYou can output YES and NO in any case (for example, strings yEs, yes, Yes and YES will be recognized as a positive response).\nThe first test case is explained in the problem statement.",
    "time limit": "time limit per test3 seconds",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "data structures",
        "greedy",
        "*1100"
    ]
}