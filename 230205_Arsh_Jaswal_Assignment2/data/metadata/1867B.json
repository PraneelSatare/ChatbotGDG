{
    "title": "B. XOR Palindromes",
    "description": "You are given a binary string s of length n (a string that consists only of 0 and 1). A number x is good if there exists a binary string l of length n, containing x ones, such that if each symbol si is replaced by si⊕li (where ⊕ denotes the bitwise XOR operation), then the string s becomes a palindrome.\nYou need to output a binary string t of length n+1, where ti (0≤i≤n) is equal to 1 if number i is good, and 0 otherwise.\nA palindrome is a string that reads the same from left to right as from right to left. For example, 01010, 1111, 0110 are palindromes.\nEach test contains multiple test cases. The first line contains the number of test cases t (1≤t≤105). The description of the test cases follows.\nThe first line of each test case contains a single integer n (1≤n≤105).\nThe second line of each test case contains a binary string s of length n.\nIt is guaranteed that the sum of n over all test cases does not exceed 105.\nFor each test case, output a single line containing a binary string t of length n+1 - the answer to the problem.\nConsider the first example. ",
    "time limit": "time limit per test1 second",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "strings",
        "*1100"
    ]
}