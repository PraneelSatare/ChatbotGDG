{
    "title": "C. Differential Sorting",
    "description": "You are given an array a of n elements. \nYour can perform the following operation no more than n times: Select three indices x,y,z (1≤x<y<z≤n) and replace ax with ay−az. After the operation, |ax| need to be less than 1018.\nYour goal is to make the resulting array non-decreasing. If there are multiple solutions, you can output any. If it is impossible to achieve, you should report it as well.\nEach test contains multiple test cases. The first line will contain a single integer t (1≤t≤10000) — the number of test cases. Then t test cases follow.\nThe first line of each test case contains a single integer n (3≤n≤2⋅105) — the size of the array a.\nThe second line of each test case contains n integers a1,a2,…,an (−109≤ai≤109), the elements of a.\nIt is guaranteed that the sum of n over all test cases does not exceed 2⋅105.\nFor each test case, print −1 in a single line if there is no solution. Otherwise in the first line you should print a single integer m (0≤m≤n) — number of operations you performed.\nThen the i-th of the following m lines should contain three integers x,y,z (1≤x<y<z≤n)— description of the i-th operation.\nIf there are multiple solutions, you can output any. Note that you don't have to minimize the number of operations in this task.\nIn the first example, the array becomes \n[−6,−4,2,−1,2] after the first operation,\n[−6,−4,−3,−1,2] after the second operation.\nIn the second example, it is impossible to make the array sorted after any sequence of operations.\nIn the third example, the array is already sorted, so we don't need to perform any operations.",
    "time limit": "time limit per test2 seconds",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "constructive algorithms",
        "greedy",
        "*1200"
    ]
}