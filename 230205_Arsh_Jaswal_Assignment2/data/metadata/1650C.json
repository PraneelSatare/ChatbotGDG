{
    "title": "C. Weight of the System of Nested Segments",
    "description": "On the number line there are m points, i-th of which has integer coordinate xi and integer weight wi. The coordinates of all points are different, and the points are numbered from 1 to m.\nA sequence of n segments [l1,r1],[l2,r2],…,[ln,rn] is called system of nested segments if for each pair i,j (1≤i<j≤n) the condition li<lj<rj<ri is satisfied. In other words, the second segment is strictly inside the first one, the third segment is strictly inside the second one, and so on.\nFor a given number n, find a system of nested segments such that:\nFor example, let m=8. The given points are marked in the picture, their weights are marked in red, their coordinates are marked in blue. Make a system of three nested segments:\nThe first line of input data contains an integer t (1≤t≤104) —the number of input test cases.\nAn empty line is written before each test case.\nThe first line of each test case contains two positive integers n (1≤n≤105) and m (2⋅n≤m≤2⋅105). \nThe next m lines contain pairs of integers xi (−109≤xi≤109) and wi (−104≤wi≤104) — coordinate and weight of point number i (1≤i≤m) respectively. All xi are different.\nIt is guaranteed that the sum of m values over all test cases does not exceed 2⋅105.\nFor each test case, output n+1 lines: in the first of them, output the weight of the composed system, and in the next n lines output exactly two numbers  — the indices of the points which are the endpoints of the i-th segment (1≤i≤n). The order in which you output the endpoints of a segment is not important — you can output the index of the left endpoint first and then the number of the right endpoint, or the other way around.\nIf there are several ways to make a system of nested segments with minimal weight, output any of them.\nThe first test case coincides with the example from the condition. It can be shown that the weight of the composed system is minimal.\nThe second test case has only 6 points, so you need to use each of them to compose 3 segments.",
    "time limit": "time limit per test2 seconds",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "greedy",
        "hashing",
        "implementation",
        "sortings",
        "*1200"
    ]
}