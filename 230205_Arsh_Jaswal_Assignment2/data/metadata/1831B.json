{
    "title": "B. Array merging",
    "description": "You are given two arrays a and b both of length n.\nYou will merge† these arrays forming another array c of length 2⋅n. You have to find the maximum length of a subarray consisting of equal values across all arrays c that could be obtained.\n† A merge of two arrays results in an array c composed by successively taking the first element of either array (as long as that array is nonempty) and removing it. After this step, the element is appended to the back of c. We repeat this operation as long as we can (i.e. at least one array is nonempty).\nEach test contains multiple test cases. The first line of input contains a single integer t (1≤t≤104) — the number of test cases. The description of test cases follows.\nThe first line of each test case contains a single integer n (1≤n≤2⋅105) — the length of the array a and b.\nThe second line of each test case contains n integers a1,a2,…,an (1≤ai≤2⋅n) — the elements of array a.\nThe third line of each test case contains n integers b1,b2,…,bn (1≤bi≤2⋅n) — the elements of array b.\nIt is guaranteed that the sum of n across all test cases does not exceed 2⋅105.\nFor each test case, output the maximum length of a subarray consisting of equal values across all merges.\nIn the first test case, we can only make c=[2,2], thus the answer is 2.\nIn the second test case, since all values are distinct, the answer must be 1.\nIn the third test case, the arrays c we can make are [1,2,1,2], [1,2,2,1], [2,1,1,2], [2,1,2,1]. We can see that the answer is 2 when we choose c=[1,2,2,1]. ",
    "time limit": "time limit per test1 second",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "constructive algorithms",
        "greedy",
        "*1000"
    ]
}