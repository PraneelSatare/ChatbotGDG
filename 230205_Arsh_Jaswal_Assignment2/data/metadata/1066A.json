{
    "title": "A. Vova and Train",
    "description": "Vova plans to go to the conference by train. Initially, the train is at the point 1 and the destination point of the path is the point L. The speed of the train is 1 length unit per minute (i.e. at the first minute the train is at the point 1, at the second minute — at the point 2 and so on).\nThere are lanterns on the path. They are placed at the points with coordinates divisible by v (i.e. the first lantern is at the point v, the second is at the point 2v and so on).\nThere is also exactly one standing train which occupies all the points from l to r inclusive.\nVova can see the lantern at the point p if p is divisible by v and there is no standing train at this position (p∉[l;r]). Thus, if the point with the lantern is one of the points covered by the standing train, Vova can't see this lantern.\nYour problem is to say the number of lanterns Vova will see during the path. Vova plans to go to t different conferences, so you should answer t independent queries.\nThe first line of the input contains one integer t (1≤t≤104) — the number of queries.\nThen t lines follow. The i-th line contains four integers Li,vi,li,ri (1≤L,v≤109, 1≤l≤r≤L) — destination point of the i-th path, the period of the lantern appearance and the segment occupied by the standing train.\nPrint t lines. The i-th line should contain one integer — the answer for the i-th query.\nFor the first example query, the answer is 3. There are lanterns at positions 2, 4, 6, 8 and 10, but Vova didn't see the lanterns at positions 4 and 6 because of the standing train.\nFor the second example query, the answer is 0 because the only lantern is at the point 51 and there is also a standing train at this point.\nFor the third example query, the answer is 1134 because there are 1234 lanterns, but Vova didn't see the lanterns from the position 100 to the position 199 inclusive.\nFor the fourth example query, the answer is 0 because the standing train covers the whole path.",
    "time limit": "time limit per test1 second",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "math",
        "*1100"
    ]
}