{
    "title": "C. Update Queries",
    "description": "Let's consider the following simple problem. You are given a string s of length n, consisting of lowercase Latin letters, as well as an array of indices ind of length m (1≤indi≤n) and a string c of length m, consisting of lowercase Latin letters. Then, in order, you perform the update operations, namely, during the i-th operation, you set sindi=ci. Note that you perform all m operations from the first to the last.\nOf course, if you change the order of indices in the array ind and/or the order of letters in the string c, you can get different results. Find the lexicographically smallest string s that can be obtained after m update operations, if you can rearrange the indices in the array ind and the letters in the string c as you like.\nA string a is lexicographically less than a string b if and only if one of the following conditions is met:\nEach test consists of several sets of input data. The first line contains a single integer t (1≤t≤104) — the number of sets of input data. Then follows their description.\nThe first line of each set of input data contains two integers n and m (1≤n,m≤105) — the length of the string s and the number of updates.\nThe second line of each set of input data contains a string s of length n, consisting of lowercase Latin letters.\nThe third line of each set of input data contains m integers ind1,ind2,…,indm (1≤indi≤n) — the array of indices ind.\nThe fourth line of each set of input data contains a string c of length m, consisting of lowercase Latin letters.\nIt is guaranteed that the sum of n over all sets of input data does not exceed 2⋅105. Similarly, the sum of m over all sets of input data does not exceed 2⋅105.\nFor each set of input data, output the lexicographically smallest string s that can be obtained by rearranging the indices in the array ind and the letters in the string c as you like.\nIn the first set of input data, you can leave the array ind and the string c unchanged and simply perform all operations in that order.\nIn the second set of input data, you can set the array ind=[1,1,4,2] and c= \"zczw\". Then the string s will change as follows: meow→zeow→ceow→ceoz→cwoz.\nIn the third set of input data, you can leave the array ind unchanged and set c= \"admn\". Then the string s will change as follows: abacaba→abacaba→abdcaba→abdcmba→abdcmbn.",
    "time limit": "time limit per test2 seconds",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "data structures",
        "greedy",
        "sortings",
        "*1100"
    ]
}