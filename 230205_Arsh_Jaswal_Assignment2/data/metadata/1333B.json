{
    "title": "B. Kind Anton",
    "description": "Once again, Boris needs the help of Anton in creating a task. This time Anton needs to solve the following problem:\nThere are two arrays of integers a and b of length n. It turned out that array a contains only elements from the set {−1,0,1}.\nAnton can perform the following sequence of operations any number of times:\nFor example, if you are given array [1,−1,0], you can transform it only to [1,−1,−1], [1,0,0] and [1,−1,1] by one operation.\nAnton wants to predict if it is possible to apply some number (zero or more) of these operations to the array a so that it becomes equal to array b. Can you help him?\nEach test contains multiple test cases. \nThe first line contains the number of test cases t (1≤t≤10000). The description of the test cases follows.\nThe first line of each test case contains a single integer n (1≤n≤105)  — the length of arrays.\nThe second line of each test case contains n integers a1,a2,…,an (−1≤ai≤1)  — elements of array a. There can be duplicates among elements.\nThe third line of each test case contains n integers b1,b2,…,bn (−109≤bi≤109)  — elements of array b. There can be duplicates among elements.\nIt is guaranteed that the sum of n over all test cases doesn't exceed 105.\nFor each test case, output one line containing \"YES\" if it's possible to make arrays a and b equal by performing the described operations, or \"NO\" if it's impossible.\nYou can print each letter in any case (upper or lower).\nIn the first test-case we can choose (i,j)=(2,3) twice and after that choose (i,j)=(1,2) twice too. These operations will transform [1,−1,0]→[1,−1,−2]→[1,1,−2]\nIn the second test case we can't make equal numbers on the second position.\nIn the third test case we can choose (i,j)=(1,2) 41 times. The same about the fourth test case.\nIn the last lest case, it is impossible to make array a equal to the array b.",
    "time limit": "time limit per test1 second",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "greedy",
        "implementation",
        "*1100"
    ]
}