{
    "title": "B. Moamen and k-subarrays",
    "description": "Moamen has an array of n distinct integers. He wants to sort that array in non-decreasing order by doing the following operations in order exactly once:\nA sequence a is a subarray of a sequence b if a can be obtained from b by deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.\nCan you tell Moamen if there is a way to sort the array in non-decreasing order using the operations written above?\nThe first line contains a single integer t (1≤t≤103) — the number of test cases. The description of the test cases follows.\nThe first line of each test case contains two integers n and k (1≤k≤n≤105).\nThe second line contains n integers a1,a2,…,an (0≤|ai|≤109). It is guaranteed that all numbers are distinct.\nIt is guaranteed that the sum of n over all test cases does not exceed 3⋅105.\nFor each test case, you should output a single string.\nIf Moamen can sort the array in non-decreasing order, output \"YES\" (without quotes). Otherwise, output \"NO\" (without quotes).\nYou can print each letter of \"YES\" and \"NO\" in any case (upper or lower).\nIn the first test case, a=[6,3,4,2,1], and k=4, so we can do the operations as follows: \nIn the second test case, there is no way to sort the array by splitting it into only 2 subarrays.\nAs an example, if we split it into {[1,−4],[0,−2]}, we can reorder them into {[1,−4],[0,−2]} or {[0,−2],[1,−4]}. However, after merging the subarrays, it is impossible to get a sorted array.",
    "time limit": "time limit per test2 seconds",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "greedy",
        "sortings",
        "*1100"
    ]
}