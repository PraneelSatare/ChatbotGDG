{
    "title": "A. Competitive Programmer",
    "description": "Bob is a competitive programmer. He wants to become red, and for that he needs a strict training regime. He went to the annual meeting of grandmasters and asked n of them how much effort they needed to reach red.\n\"Oh, I just spent xi hours solving problems\", said the i-th of them. \nBob wants to train his math skills, so for each answer he wrote down the number of minutes (60⋅xi), thanked the grandmasters and went home. Bob could write numbers with leading zeroes — for example, if some grandmaster answered that he had spent 2 hours, Bob could write 000120 instead of 120.\nAlice wanted to tease Bob and so she took the numbers Bob wrote down, and for each of them she did one of the following independently: \nThis way, Alice generated n numbers, denoted y1, ..., yn.\nFor each of the numbers, help Bob determine whether yi can be a permutation of a number divisible by 60 (possibly with leading zeroes).\nThe first line contains a single integer n (1≤n≤418) — the number of grandmasters Bob asked.\nThen n lines follow, the i-th of which contains a single integer yi — the number that Alice wrote down.\nEach of these numbers has between 2 and 100 digits '0' through '9'. They can contain leading zeroes.\nOutput n lines.\nFor each i, output the following. If it is possible to rearrange the digits of yi such that the resulting number is divisible by 60, output \"red\" (quotes for clarity). Otherwise, output \"cyan\".\nIn the first example, there is one rearrangement that yields a number divisible by 60, and that is 360.\nIn the second example, there are two solutions. One is 060 and the second is 600.\nIn the third example, there are 6 possible rearrangments: 025, 052, 205, 250, 502, 520. None of these numbers is divisible by 60.\nIn the fourth example, there are 3 rearrangements: 228, 282, 822.\nIn the fifth example, none of the 24 rearrangements result in a number divisible by 60.\nIn the sixth example, note that 000…0 is a valid solution.",
    "time limit": "time limit per test1 second",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "chinese remainder theorem",
        "math",
        "*1000"
    ]
}