{
    "title": "C. OKEA",
    "description": "You work for a well-known department store that uses leading technologies and employs mechanistic work — that is, robots!\nThe department you work in sells n⋅k items. The first item costs 1 dollar, the second item costs 2 dollars, and so on: i-th item costs i dollars. The items are situated on shelves. The items form a rectangular grid: there are n shelves in total, and each shelf contains exactly k items. We will denote by ai,j the price of j-th item (counting from the left) on the i-th shelf, 1≤i≤n,1≤j≤k.\nOccasionally robots get curious and ponder on the following question: what is the mean price (arithmetic average) of items ai,l,ai,l+1,…,ai,r for some shelf i and indices l≤r? Unfortunately, the old robots can only work with whole numbers. If the mean price turns out not to be an integer, they break down.\nYou care about robots' welfare. You want to arrange the items in such a way that the robots cannot theoretically break. Formally, you want to choose such a two-dimensional array a that:\nFind out if such an arrangement is possible, and if it is, give any example of such arrangement.\nThe first line contains a single integer t (1≤t≤500) — the number of test cases.\nThe first and only line of each test case contains two integers n and k (1≤n,k≤500) — the number of shelves and length of each shelf, respectively.\nIt is guaranteed that the sum n over all test cases does not exceed 500 and the sum k over all test cases does not exceed 500.\nPrint the answer for each test case.\nIf such an arrangement exists, print \"YES\" on a single line. After that, print any example on n lines of k numbers each, one line per shelf. Each number from 1 to n⋅k must occur exactly once in the output.\nIf no good arrangement exists, print a single word \"NO\" on its own line.",
    "time limit": "time limit per test1 second",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "constructive algorithms",
        "*1000"
    ]
}