{
    "title": "C. Omkar and Waterslide",
    "description": "Omkar is building a waterslide in his water park, and he needs your help to ensure that he does it as efficiently as possible.\nOmkar currently has n supports arranged in a line, the i-th of which has height ai. Omkar wants to build his waterslide from the right to the left, so his supports must be nondecreasing in height in order to support the waterslide. In 1 operation, Omkar can do the following: take any contiguous subsegment of supports which is nondecreasing by heights and add 1 to each of their heights. \nHelp Omkar find the minimum number of operations he needs to perform to make his supports able to support his waterslide!\nAn array b is a subsegment of an array c if b can be obtained from c by deletion of several (possibly zero or all) elements from the beginning and several (possibly zero or all) elements from the end.\nAn array b1,b2,…,bn is called nondecreasing if bi≤bi+1 for every i from 1 to n−1.\nEach test contains multiple test cases. The first line contains the number of test cases t (1≤t≤100). Description of the test cases follows.\nThe first line of each test case contains an integer n (1≤n≤2⋅105) — the number of supports Omkar has.\nThe second line of each test case contains n integers a1,a2,...,an (0≤ai≤109) — the heights of the supports.\nIt is guaranteed that the sum of n over all test cases does not exceed 2⋅105.\nFor each test case, output a single integer — the minimum number of operations Omkar needs to perform to make his supports able to support his waterslide.\nThe subarray with which Omkar performs the operation is bolded.\nIn the first test case:\nFirst operation:\n[5,3,2,5]→[5,3,3,5]\nSecond operation:\n[5,3,3,5]→[5,4,4,5]\nThird operation:\n[5,4,4,5]→[5,5,5,5]\nIn the third test case, the array is already nondecreasing, so Omkar does 0 operations.",
    "time limit": "time limit per test2 seconds",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "greedy",
        "implementation",
        "*1200"
    ]
}