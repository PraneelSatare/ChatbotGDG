{
    "title": "B. Chip and Ribbon",
    "description": "There is a ribbon divided into n cells, numbered from 1 to n from left to right. Initially, an integer 0 is written in each cell.\nMonocarp plays a game with a chip. The game consists of several turns. During the first turn, Monocarp places the chip in the 1-st cell of the ribbon. During each turn except for the first turn, Monocarp does exactly one of the two following actions:\nAt the end of each turn, the integer written in the cell with the chip is increased by 1.\nMonocarp's goal is to make some turns so that the 1-st cell contains the integer c1, the 2-nd cell contains the integer c2, ..., the n-th cell contains the integer cn. He wants to teleport the chip as few times as possible.\nHelp Monocarp calculate the minimum number of times he has to teleport the chip. \nThe first line contains one integer t (1≤t≤104) — the number of test cases.\nEach test case consists of two lines: \nIt can be shown that under these constraints, it is always possible to make a finite amount of turns so that the integers in the cells match the sequence c1,c2,…,cn.\nAdditional constraint on the input: the sum of values of n over all test cases does not exceed 2⋅105.\nFor each test case, print one integer — the minimum number of times Monocarp has to teleport the chip.\nIn the first test case of the example, Monocarp can perform the turns as follows:",
    "time limit": "time limit per test2 seconds",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "greedy",
        "math",
        "*1100"
    ]
}