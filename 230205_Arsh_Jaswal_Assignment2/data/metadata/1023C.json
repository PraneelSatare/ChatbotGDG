{
    "title": "C. Bracket Subsequence",
    "description": "A bracket sequence is a string containing only characters \"(\" and \")\". A regular bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters \"1\" and \"+\" between the original characters of the sequence. For example, bracket sequences \"()()\" and \"(())\" are regular (the resulting expressions are: \"(1)+(1)\" and \"((1+1)+1)\"), and \")(\", \"(\" and \")\" are not.\nSubsequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements.\nYou are given a regular bracket sequence s and an integer number k. Your task is to find a regular bracket sequence of length exactly k such that it is also a subsequence of s.\nIt is guaranteed that such sequence always exists.\nThe first line contains two integers n and k (2≤k≤n≤2⋅105, both n and k are even) — the length of s and the length of the sequence you are asked to find.\nThe second line is a string s — regular bracket sequence of length n.\nPrint a single string — a regular bracket sequence of length exactly k such that it is also a subsequence of s.\nIt is guaranteed that such sequence always exists.",
    "time limit": "time limit per test2 seconds",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "greedy",
        "*1200"
    ]
}