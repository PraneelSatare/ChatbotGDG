{
    "title": "C. MAX-MEX Cut",
    "description": "A binary string is a string that consists of characters 0 and 1. A bi-table is a table that has exactly two rows of equal length, each being a binary string.\nLet MEX of a bi-table be the smallest digit among 0, 1, or 2 that does not occur in the bi-table. For example, MEX for [00111010] is 2, because 0 and 1 occur in the bi-table at least once. MEX for [111111] is 0, because 0 and 2 do not occur in the bi-table, and 0<2.\nYou are given a bi-table with n columns. You should cut it into any number of bi-tables (each consisting of consecutive columns) so that each column is in exactly one bi-table. It is possible to cut the bi-table into a single bi-table — the whole bi-table.\nWhat is the maximal sum of MEX of all resulting bi-tables can be?\nThe input consists of multiple test cases. The first line contains a single integer t (1≤t≤104) — the number of test cases. Description of the test cases follows.\nThe first line of the description of each test case contains a single integer n (1≤n≤105) — the number of columns in the bi-table.\nEach of the next two lines contains a binary string of length n — the rows of the bi-table.\nIt's guaranteed that the sum of n over all test cases does not exceed 105.\nFor each test case print a single integer — the maximal sum of MEX of all bi-tables that it is possible to get by cutting the given bi-table optimally.\nIn the first test case you can cut the bi-table as follows:\nThe sum of MEX is 8.",
    "time limit": "time limit per test1 second",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "dp",
        "greedy",
        "*1000"
    ]
}