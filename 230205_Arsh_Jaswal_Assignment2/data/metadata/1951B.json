{
    "title": "B. Battle Cows",
    "description": "There are n cows participating in a coding tournament. Cow i has a Cowdeforces rating of ai (all distinct), and is initially in position i. The tournament consists of n−1 matches as follows: \nYou are the owner of cow k. For you, winning the tournament is not important; rather, you want your cow to win in as many matches as possible. As an acquaintance of the tournament organizers, you can ask them to swap the position of your cow with another cow only once, or you can choose to do nothing.\nFind the maximum number of wins your cow can achieve.\nEach test contains multiple test cases. The first line contains an integer t (1≤t≤104) — the number of test cases. The description of the test cases follows.\nThe first line of each test case contains two integers n and k (2≤n≤105,1≤k≤n) — the number of cows and your cow's index.\nThe second line of each test case contains n integers a1,a2,…,an (1≤ai≤109) — the Cowdeforces rating of the cows. It is guaranteed that ai's are pairwise different.\nIt is guaranteed that the sum of n over all test cases does not exceed 105.\nFor each test case, print one integer: the maximum number of wins cow k can achieve if you choose to swap (or do nothing) optimally.\nIn the first test case, it is optimal to do nothing. Let a′ be the Cowdeforces rating of the cows in the original order (with your cow's rating bolded), then \nIn the second test case, it is optimal to swap your cow to position 3. Then, let a′ be the Cowdeforces rating of the cows in the order after the swap. ",
    "time limit": "time limit per test1 second",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "*1200"
    ]
}