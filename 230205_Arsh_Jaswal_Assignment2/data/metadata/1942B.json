{
    "title": "B. Bessie and MEX",
    "description": "Farmer John has a permutation p1,p2,…,pn, where every integer from 0 to n−1 occurs exactly once. He gives Bessie an array a of length n and challenges her to construct p based on a. \nThe array a is constructed so that ai = MEX(p1,p2,…,pi)−pi, where the MEX of an array is the minimum non-negative integer that does not appear in that array. For example, MEX(1,2,3)=0 and MEX(3,1,0)=2.\nHelp Bessie construct any valid permutation p that satisfies a. The input is given in such a way that at least one valid p exists. If there are multiple possible p, it is enough to print one of them.\nThe first line contains t (1≤t≤104) — the number of test cases.\nThe first line of each test case contains an integer n (1≤n≤2⋅105) — the lengths of p and a.\nThe second line of each test case contains n integers a1,a2,…,an (−n≤ai≤n) — the elements of array a.\nIt is guaranteed that there is at least one valid p for the given data.\nIt is guaranteed that the sum of n over all test cases does not exceed 2⋅105.\nFor each test case, output n integers on a new line, the elements of p.\nIf there are multiple solutions, print any of them.\nIn the first case, p=[0,1,4,2,3] is one possible output.\na will then be calculated as a1=MEX(0)−0=1, a2=MEX(0,1)−1=1, a3=MEX(0,1,4)−4=−2, a4=MEX(0,1,4,2)−2=1, a5=MEX(0,1,4,2,3)−3=2.\nSo, as required, a will be [1,1,−2,1,2].",
    "time limit": "time limit per test1.5 seconds",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "constructive algorithms",
        "math",
        "*1100"
    ]
}