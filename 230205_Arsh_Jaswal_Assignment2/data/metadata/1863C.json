{
    "title": "C. MEX Repetition",
    "description": "You are given an array a1,a2,…,ana1,a2,…,an of pairwise distinct integers from 00 to nn. Consider the following operation:\nHere MEXMEX of a collection of integers c1,c2,…,cmc1,c2,…,cm is defined as the smallest non-negative integer xx which does not occur in the collection cc. For example, MEX(0,2,2,1,4)=3MEX(0,2,2,1,4)=3 and MEX(1,2)=0MEX(1,2)=0.\nPrint the array after applying kk such operations.\nEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤1051≤t≤105). The description of the test cases follows.\nThe first line of each test case contains two integers nn and kk (1≤n≤1051≤n≤105, 1≤k≤1091≤k≤109).\nThe second line contains nn pairwise distinct integers a1,a2,…,ana1,a2,…,an (0≤ai≤n0≤ai≤n) representing the elements of the array before applying the operations.\nIt is guaranteed that the sum of nn over all test cases does not exceed 105105.\nFor each test case, print all nn elements of the array after applying kk operations.\nIn the first test case, here is the entire process:\nThus, the array becomes [1][1] after two operations.\nIn the second test case, the array changes as follows during one operation: [0_,1,3]→[2,1_,3]→[2,0,3_]→[2,0,1][0–,1,3]→[2,1–,3]→[2,0,3–]→[2,0,1].\nIn the third test case, the array changes as follows during one operation: [0_,2]→[1,2_]→[1,0][0–,2]→[1,2–]→[1,0]. And during the second operation: [1_,0]→[2,0_]→[2,1][1–,0]→[2,0–]→[2,1].",
    "time limit": "time limit per test2 seconds",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "implementation",
        "math",
        "*1100"
    ]
}