{
    "title": "B. Lost Array",
    "description": "Bajtek, known for his unusual gifts, recently got an integer array x0,x1,…,xk−1.\nUnfortunately, after a huge array-party with his extraordinary friends, he realized that he'd lost it. After hours spent on searching for a new toy, Bajtek found on the arrays producer's website another array a of length n+1. As a formal description of a says, a0=0 and for all other i (1≤i≤n) ai=x(i−1)modk+ai−1, where pmodq denotes the remainder of division p by q.\nFor example, if the x=[1,2,3] and n=5, then:\nSo, if the x=[1,2,3] and n=5, then a=[0,1,3,6,7,9].\nNow the boy hopes that he will be able to restore x from a! Knowing that 1≤k≤n, help him and find all possible values of k — possible lengths of the lost array.\nThe first line contains exactly one integer n (1≤n≤1000) — the length of the array a, excluding the element a0.\nThe second line contains n integers a1,a2,…,an (1≤ai≤106).\nNote that a0 is always 0 and is not given in the input.\nThe first line of the output should contain one integer l denoting the number of correct lengths of the lost array.\nThe second line of the output should contain l integers — possible lengths of the lost array in increasing order.\nIn the first example, any k is suitable, since a is an arithmetic progression.\nPossible arrays x:\nIn the second example, Bajtek's array can have three or five elements.\nPossible arrays x:\nFor example, k=4 is bad, since it leads to 6+x0=8 and 0+x0=1, which is an obvious contradiction.\nIn the third example, only k=n is good.\nArray [1,4,−2] satisfies the requirements.\nNote that xi may be negative.",
    "time limit": "time limit per test1 second",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "implementation",
        "*1200"
    ]
}