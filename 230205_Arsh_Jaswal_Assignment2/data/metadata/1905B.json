{
    "title": "B. Begginer's Zelda",
    "description": "You are given a tree†. In one zelda-operation you can do follows:\nDetermine the minimum number of zelda-operations required for the tree to have only one vertex.\n†A tree is a connected acyclic undirected graph.\nEach test consists of multiple test cases. The first line contains a single integer t (1≤t≤104) — the number of test cases. The description of the test cases follows.\nThe first line of each test case contains a single integer n (2≤n≤105) — the number of vertices.\ni-th of the next n−1 lines contains two integers ui and vi (1≤ui,vi≤n,ui≠vi) — the numbers of vertices connected by the i-th edge.\nIt is guaranteed that the given edges form a tree.\nIt is guaranteed that the sum of n over all test cases does not exceed 105.\nFor each test case, output a single integer — the minimum number of zelda-operations required for the tree to have only one vertex.\nIn the first test case, it's enough to perform one zelda-operation for vertices 2 and 4.\nIn the second test case, we can perform the following zelda-operations:",
    "time limit": "time limit per test1 second",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "greedy",
        "trees",
        "*1100"
    ]
}