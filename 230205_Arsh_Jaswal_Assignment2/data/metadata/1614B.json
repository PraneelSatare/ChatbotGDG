{
    "title": "B. Divan and a New Project",
    "description": "The company \"Divan's Sofas\" is planning to build n+1 different buildings on a coordinate line so that: \nLet xi be the coordinate of the i-th building. To get from the building i to the building j, Divan spends |xi−xj| minutes, where |y| is the absolute value of y.\nAll buildings that Divan is going to build can be numbered from 0 to n. The businessman will live in the building 0, the new headquarters of \"Divan's Sofas\". In the first ten years after construction Divan will visit the i-th building ai times, each time spending 2⋅|x0−xi| minutes for walking.\nDivan asks you to choose the coordinates for all n+1 buildings so that over the next ten years the businessman will spend as little time for walking as possible.\nEach test contains several test cases. The first line contains one integer number t (1≤t≤103) — the number of test cases.\nThe first line of each case contains an integer n (1≤n≤2⋅105) — the number of buildings that \"Divan's Sofas\" is going to build, apart from the headquarters.\nThe second line contains the sequence a1,a2,…,an (0≤ai≤106), where ai is the number of visits to the i-th building.\nIt is guaranteed that the sum of n over all test cases does not exceed 2⋅105.\nFor each test case, on the first line print the number T — the minimum time Divan will spend walking. \nOn the second line print the sequence x0,x1,…,xn of n+1 integers, where xi (−106≤xi≤106) is the selected coordinate of the i-th building. It can be shown that an optimal answer exists with coordinates not exceeding 106.\nIf there are multiple answers, print any of them.\nLet's look at the first example.\nDivan will visit the first building a1=1 times, the second a2=2 times and the third a3=3 times. Then one of the optimal solution will be as follows: \nIn total, Divan will spend 4+4+6=14 minutes. It can be shown that it is impossible to arrange buildings so that the businessman spends less time.\nAmong others, x=[1,3,2,0], x=[−5,−3,−6,−4] are also correct answers for the first example.",
    "time limit": "time limit per test1 second",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "constructive algorithms",
        "sortings",
        "*1000"
    ]
}