{
    "title": "B. Informatics in MAC",
    "description": "In the Master's Assistance Center, Nyam-Nyam was given a homework assignment in informatics.\nThere is an array a of length n, and you want to divide it into k>1 subsegments† in such a way that the MEX‡ on each subsegment is equal to the same integer.\nHelp Nyam-Nyam find any suitable division, or determine that it does not exist.\n†A division of an array into k subsegments is defined as k pairs of integers (l1,r1),(l2,r2),…,(lk,rk) such that li≤ri and for each 1≤j≤k−1, lj+1=rj+1, and also l1=1 and rk=n. These pairs represent the subsegments themselves.\n‡MEX of an array is the smallest non-negative integer that does not belong to the array.\nFor example: \nEach test consists of multiple test cases. The first line contains a single integer t (1≤t≤104) — the number of test cases. The description of the test cases follows.\nThe first line of each test case contains a single integer n (2≤n≤105) — the length of the array a.\nThe second line of each test case contains n integers a1,a2,…,an (0≤ai<n) — the elements of the array a.\nIt is guaranteed that the sum of n over all test cases does not exceed 105.\nFor each test case, output a single integer −1 if a suitable division does not exist.\nOtherwise, on the first line, output an integer k (2≤k≤n) — the number of subsegments in the division.\nThen output k lines — the division into subsegments. The i-th line should contain two integers li and ri (1≤li≤ri≤n) — the boundaries of the i-th subsegment.\nThe following conditions must be satisfied:\nIf there are multiple possible solutions, output any of them.\nIn the first test case, the array a can be divided into 2 subsegments with boundaries [1,1] and [2,2]: \nIn the second test case, it can be proven that the required division does not exist.\nIn the third test case, the array a can be divided into 3 subsegments with boundaries [1,3], [4,5], [6,8]: ",
    "time limit": "time limit per test1 second",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "constructive algorithms",
        "*1200"
    ]
}