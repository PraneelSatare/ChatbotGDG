{
    "title": "D. Turtle Tenacity: Continual Mods",
    "description": "Given an array a1,a2,…,an, determine whether it is possible to rearrange its elements into b1,b2,…,bn, such that b1modb2mod…modbn≠0.\nHere xmody denotes the remainder from dividing x by y. Also, the modulo operations are calculated from left to right. That is, xmodymodz=(xmody)modz. For example, 2024mod1000mod8=(2024mod1000)mod8=24mod8=0.\nThe first line of the input contains a single integer t (1≤t≤104) — the number of test cases.\nThe first line of each test case contains a single integer n (2≤n≤105).\nThe second line of each test case contains n integers a1,a2,…,an (1≤ai≤109).\nThe sum of n over all test cases does not exceed 2⋅105.\nFor each test case, output \"YES\" if it is possible, \"NO\" otherwise.\nYou can output the answer in any case (upper or lower). For example, the strings \"yEs\", \"yes\", \"Yes\", and \"YES\" will be recognized as positive responses.\nIn the first test case, rearranging the array into b=[1,2,3,4,5,6] (doing nothing) would result in 1mod2mod3mod4mod5mod6=1. Hence it is possible to achieve the goal.\nIn the second test case, the array b must be equal to [3,3,3,3,3], which would result in 3mod3mod3mod3mod3=0. Hence it is impossible to achieve the goal.\nIn the third test case, rearranging the array into b=[3,2,2] would result in 3mod2mod2=1. Hence it is possible to achieve the goal.",
    "time limit": "time limit per test2 seconds",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "number theory",
        "sortings",
        "*1200"
    ]
}