{
    "title": "B. Minimize Permutation Subarrays",
    "description": "You are given a permutation p of size n. You want to minimize the number of subarrays of p that are permutations. In order to do so, you must perform the following operation exactly once:\nFor example, if p=[5,1,4,2,3] and we choose i=2, j=3, the resulting array will be [5,4,1,2,3]. If instead we choose i=j=5, the resulting array will be [5,1,4,2,3].\nWhich choice of i and j will minimize the number of subarrays that are permutations?\nA permutation of length n is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [2,3,1,5,4] is a permutation, but [1,2,2] is not a permutation (2 appears twice in the array), and [1,3,4] is also not a permutation (n=3 but there is 4 in the array).\nAn array a is a subarray of an array b if a can be obtained from b by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.\nThe first line of the input contains a single integer t (1≤t≤104) — the number of test cases. The description of the test cases follows.\nThe first line of each test case contains a single integer n (3≤n≤2⋅105) — the size of the permutation.\nThe next line of each test case contains n integers p1,p2,…pn (1≤pi≤n, all pi are distinct) — the elements of the permutation p.\nIt is guaranteed that the sum of n over all test cases does not exceed 2⋅105.\nFor each test case, output two integers i and j (1≤i,j≤n)  — the indices to swap in p.\nIf there are multiple solutions, print any of them.\nFor the first test case, there are four possible arrays after the swap: \nFor the third sample case, after we swap elements at positions 2 and 5, the resulting array is [1,4,2,5,3]. The only subarrays that are permutations are [1] and [1,4,2,5,3]. We can show that this is minimal.",
    "time limit": "time limit per test2 seconds",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "constructive algorithms",
        "math",
        "*1100"
    ]
}