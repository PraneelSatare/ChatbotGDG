{
    "title": "B. Increase/Decrease/Copy",
    "description": "You are given two integer arrays: array aa of length nn and array bb of length n+1n+1.\nYou can perform the following operations any number of times in any order: \nYour task is to calculate the minimum number of aforementioned operations (possibly zero) required to transform the array aa into the array bb. It can be shown that under the constraints of the problem, it is always possible.\nThe first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases.\nEach test case consists of three lines:\nAdditional constraint on the input: the sum of nn over all test cases doesn't exceed 2⋅1052⋅105.\nFor each test case, print a single integer — the minimum number of operations (possibly zero) required to transform the array aa into the array bb.\nIn the first example, you can transform aa into bb as follows: [2]→[2,2]→[1,2]→[1,3][2]→[2,2]→[1,2]→[1,3].",
    "time limit": "time limit per test2 seconds",
    "memory limit": "memory limit per test256 megabytes",
    "tags": [
        "greedy",
        "implementation",
        "*1100"
    ]
}