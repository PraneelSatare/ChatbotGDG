Turbulent times are coming, so you decided to buy sugar in advance. There are n shops around that sell sugar: the i-th shop sells one pack of sugar for ai coins, but only one pack to one customer each day. So in order to buy several packs, you need to visit several shops.
Another problem is that prices are increasing each day: during the first day the cost is ai, during the second day cost is ai+1, during the third day — ai+2 and so on for each shop i.
On the contrary, your everyday budget is only x coins. In other words, each day you go and buy as many packs as possible with total cost not exceeding x. Note that if you don't spend some amount of coins during a day, you can't use these coins during the next days.
Eventually, the cost for each pack will exceed x, and you won't be able to buy even a single pack. So, how many packs will you be able to buy till that moment in total?
The first line contains a single integer t (1≤t≤1000) — the number of test cases. Next t cases follow.
The first line of each test case contains two integers n and x (1≤n≤2⋅105; 1≤x≤109) — the number of shops and your everyday budget.
The second line of each test case contains n integers a1,a2,…,an (1≤ai≤109) — the initial cost of one pack in each shop.
It's guaranteed that the total sum of n doesn't exceed 2⋅105.
For each test case, print one integer — the total number of packs you will be able to buy until prices exceed your everyday budget.
In the first test case, 
In the second test case, prices are too high even at the first day, so you can't buy anything.
In the third test case, you can buy only one pack at day one.
In the fourth test case, you can buy 2 packs first 500 days. At day 501 prices are [501,501], so you can buy only 1 pack the next 500 days. At day 1001 prices are [1001,1001] so can't buy anymore. In total, you bought 500⋅2+500⋅1=1500 packs.