{
    "solution": "1327B - Princesses and PrincesSimulate the process without adding the new entry. For this you can just maintain an array taken, i-th value of which is true if the i-th prince is married and false otherwise.Now observe that there are two possible outcomes:   Every daughter is married â€” the answer is optimal.  There is a daughter who isn't married. That means that there is a free prince as well. Marry them to each other because doing that won't affect any other marriages and add a new one to the answer. Overall complexity: O(n+m). Solution (pikmike)from sys import stdin, stdout\n\nt = int(stdin.readline())\nfor _ in range(t):\n    n = int(stdin.readline())\n    used = [False for i in range(n)]\n    v = -1\n    for i in range(n):\n        l = [int(x) - 1 for x in stdin.readline().split()][1:]\n        for j in l:\n            if not used[j]:\n                used[j] = True\n                break\n        else:\n            v = i\n    if v == -1:\n        stdout.write(\"OPTIMAL\\n\")\n    else:\n        u = used.index(False)\n        stdout.write(\"IMPROVE\\n\" + str(v + 1) + \" \" + str(u + 1) + \"\\n\")"
}