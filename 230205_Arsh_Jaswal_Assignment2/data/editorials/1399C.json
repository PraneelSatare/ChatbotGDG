{
    "solution": "1399C - Boats CompetitionThis is just an implementation problem. Firstly, let's fix s (it can be in range [2;2n]), find the maximum number of boats we can obtain with this s and choose the maximum among all found values.To find the number of pairs, let's iterate over the smallest weight in the team in range [1;⌊s+12⌋−1]. Let this weight be i. Then (because the sum of weights is s) the biggest weight is s−i. And the number of pairs we can obtain with such two weights and the total weight s is min(cnti,cnts−i), where cnti is the number of occurrences of i in w. And the additional case: if s is even, we need to add ⌊cnts22⌋. Don't forget that there is a case s−i>n, so you need to assume that these values cnt are zeros. Solution#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<int> cnt(n + 1);\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tint x;\n\t\t\tcin >> x;\n\t\t\t++cnt[x];\n\t\t}\n\t\tint ans = 0;\n\t\tfor (int s = 2; s <= 2 * n; ++s) {\n\t\t\tint cur = 0;\n\t\t\tfor (int i = 1; i < (s + 1) / 2; ++i) {\n\t\t\t\tif (s - i > n) continue;\n\t\t\t\tcur += min(cnt[i], cnt[s - i]);\n\t\t\t}\n\t\t\tif (s % 2 == 0) cur += cnt[s / 2] / 2;\n\t\t\tans = max(ans, cur);\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\t\n\treturn 0;\n}"
}