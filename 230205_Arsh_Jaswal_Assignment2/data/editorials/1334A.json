{
    "solution": "1334A - Level StatisticsLet's use the fact that initially the level has $$$0$$$ plays and $$$0$$$ clears. Call the differences before the previous stats and the current ones $$$\\Delta p$$$ and $$$\\Delta c$$$.The stats are given in chronological order, so neither the number of plays, nor the number of clears should decrease (i.e. $$$\\Delta p \\ge 0$$$ and $$$\\Delta c \\ge 0$$$).Finally, $$$\\Delta p$$$ should be greater or equal to $$$\\Delta c$$$. It's easy to show that if $$$\\Delta c$$$ players pass the level successfully and $$$\\Delta p - \\Delta c$$$ players just try the level then such deltas are achieved.So in implementation it's enough to check these three conditions between the consecutive pieces of data (including the initial ($$$0, 0$$$)).Overall complexity: $$$O(n)$$$. Solution (pikmike)#include <bits/stdc++.h>\n\n#define forn(i, n) for (int i = 0; i < int(n); i++)\n\nusing namespace std;\n\n\nint main() {\n\tint tc;\n\tscanf(\"%d\", &tc);\n\twhile (tc--){\n\t\tint n;\n\t\tscanf(\"%d\", &n);\n\t\tint p = 0, c = 0;\n\t\tbool fl = true;\n\t\tforn(i, n){\n\t\t\tint x, y;\n\t\t\tscanf(\"%d%d\", &x, &y);\n\t\t\tif (x < p || y < c || y - c > x - p)\n\t\t\t\tfl = false;\n\t\t\tp = x, c = y;\n\t\t}\n\t\tputs(fl ? \"YES\" : \"NO\");\n\t}\n\treturn 0;\n}"
}