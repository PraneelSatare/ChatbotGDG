{
    "solution": "1742E - ScuzaLet's compute the prefix sums of the array a: let bi=a1+⋯+ai. Rephrasing the problem: for each question containing an integer k, we need to find the largest ai such that a1,…,ai are all at most k, and then output bi. In other words, max(a1,…,ai)≤k.Let's make the prefix maximums of the array: let mi=max(a1,…,ai). Then we need to find the largest i such that mi≤k, which is doable using binary search, since the array m is non-decreasing. Once we find the index i, we simply need to output bi.The time complexity is O(nlogn) per testcase. Solution#include <bits/stdc++.h>\n\nusing namespace std;\n\nvoid solve()\n{\n    int n, q;\n    cin >> n >> q;\n    vector<long long> pref;\n    pref.push_back(0);\n    vector<int> prefmax;\n    for(int i = 0; i < n; i++)\n    {\n        int x;\n        cin >> x;\n        pref.push_back(pref.back()+x);\n        if(i == 0)\n        {\n            prefmax.push_back(x);\n        }\n        else\n        {\n            prefmax.push_back(max(prefmax.back(), x));\n        }\n    }\n    for(int i = 0; i < q; i++)\n    {\n        int k;\n        cin >> k;\n        int ind = upper_bound(prefmax.begin(), prefmax.end(), k)-prefmax.begin();\n        cout << pref[ind] << \" \";\n    }\n    cout << endl;\n}\n\nint main()\n{\n    int t;\n    cin >> t;\n    while(t--)\n    {\n        solve();\n    }\n}"
}