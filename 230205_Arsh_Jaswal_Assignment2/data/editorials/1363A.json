{
    "solution": "1363A - Odd SelectionKey Idea: The sum of x numbers can only be odd if we have an odd number of numbers which are odd. (An odd statement, indeed).Detailed Explanation: We first maintain two variables, num_odd and num_even, representing the number of odd and even numbers in the array, respectively. We then iterate over the number of odd numbers we can choose; which are 1,3,5,... upto min(num_odd,x), and see if num_even ≥x−i where i is the number of odd numbers we have chosen. Time complexity: O(N)Author of this problem was Ashishgup.  Relevant Meme Code for A#include <bits/stdc++.h>\nusing namespace std;\n \n#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n#define endl \"\\n\"\n#define int long long\n \nconst int N = 2e5 + 5;\n \nint n, x;\nint a[N], f[2];\n \nint32_t main()\n{\n\tIOS;\n\tint t;\n\tcin >> t;\n\twhile(t--)\n\t{\n\t    f[0] = f[1] = 0;\n    \tcin >> n >> x;\n    \tfor(int i = 1; i <= n; i++)\n    \t{\n    \t\tcin >> a[i];\n    \t\tf[a[i] % 2]++;\n    \t}\n    \tbool flag = 0;\n    \tfor(int i = 1; i <= f[1] && i <= x; i += 2) //Fix no of odd\n    \t{\n    \t\tint have = f[0], need = x - i;\n    \t\tif(need <= f[0])\n    \t        flag = 1;\n    \t}\n    \tif(flag)\n    \t    cout << \"Yes\" << endl;\n    \telse\n    \t    cout << \"No\" << endl;\n\t}\n\treturn 0;\n} "
}