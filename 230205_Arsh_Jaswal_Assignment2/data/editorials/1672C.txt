1672C - Unequal ArrayAuthor: maomao90 HintsHint 1If the array is a=[1,1,…,1]. We will need 0 moves if n≤2 and will need max(n−3,1) moves. Hint 2The only way to reduce the number of i such that ai=ai+1 is when ai=ai+1 and ai+2=ai+3, and you apply the operation on ai+1 and ai+2. TutorialSuppose l is the smallest index where al=al+1 and r is the largest index where ar=ar+1. If l=r or l and r does not exist, the condition is already satisfied and we can do 0 operations. Otherwise, the answer is max(1,r−l−1). The proof is as follows:  Suppose l+1=r, then, there are 3 elements that are adjacent to each other. Hence, we can just do one operation with i=l and x=∞ to make the equality of the array 1. Suppose otherwise, then the array will look something like [...,X,X,...,Y,Y,...], with r−l−2 elements between the second X and the first Y. Then, we can do operations on i=l+1,l+2,…,r−2,r−1 to make the equality of the array 1. To see why we need at least r−l−1 operations, observe that each operation will cause r−l to decrease by at most 1. This is because if we do not do an operation on i∈{l−1,l+1,r−1,r+1}, then both al=al+1 and ar=ar+1 will still hold. We see that r−l only decreases when do we an operation on i∈l+1,r−1 and it is not too hard to show that it only decreases by 1 in those cases while r−l>2Hence, we keep doing the operation until r−l=2, which will only require 1 operation to change both pairs and make the equality 1. Solution#include <bits/stdc++.h> 
using namespace std;

template <class T>
inline bool mnto(T& a, T b) {return a > b ? a = b, 1 : 0;}
template <class T>
inline bool mxto(T& a, T b) {return a < b ? a = b, 1: 0;}
#define REP(i, s, e) for (int i = s; i < e; i++)
#define RREP(i, s, e) for (int i = s; i >= e; i--)
typedef long long ll;
typedef long double ld;
#define MP make_pair
#define FI first
#define SE second
typedef pair<int, int> ii;
typedef pair<ll, ll> pll;
#define MT make_tuple
typedef tuple<int, int, int> iii;
#define ALL(_a) _a.begin(), _a.end()
#define pb push_back
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<ii> vii;

#ifndef DEBUG
#define cerr if (0) cerr
#endif

#define INF 1000000005
#define LINF 1000000000000000005ll
#define MAXN 200005

int t;
int n;
int a[MAXN];

int main() {
#ifndef DEBUG
    ios::sync_with_stdio(0), cin.tie(0);
#endif
    cin >> t;
    while (t--) {
        cin >> n;
        REP (i, 0, n) {
            cin >> a[i];
        }
        int mn = -1, mx = -1;
        REP (i, 1, n) {
            if (a[i] == a[i - 1]) {
                if (mn == -1) {
                    mn = i;
                }
                mx = i;
            }
        }
        if (mn == mx) {
            cout << 0 << '\n';
        } else {
            cout << max(1, mx - mn - 1) << '\n';
        }
    }
    return 0;
}