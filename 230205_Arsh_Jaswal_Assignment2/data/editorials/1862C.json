{
    "solution": "1862C - Flower City FenceObviously, if a1≠n, then this fence is not symmetric, because the fence a has a length of n, while the horizontally laid fence has a length of a1≠n.Now let's build a fence b using horizontal boards that would match the original fence a. And let's check if the arrays a and b are equal. If they are equal, then the fence is symmetric; otherwise, it is not. There won't be any memory issues since all ai≤n, which means the length of array b does not exceed n. Solution#include <iostream>\n#include <vector>\n \nusing namespace std;\n \nint main() {\n    int t;\n    cin >> t;\n    while (t--) {\n        int n;\n        cin >> n;\n        vector<int> a(n + 1);\n        for (int i = 1; i <= n; i++) {\n            cin >> a[i];\n        }\n        if (a[1] != n) {\n            cout << \"NO\" << '\\n';\n            continue;\n        }\n        vector<int> b;\n        for (int i = n; i >= 1; i--) {\n            while (b.size() < a[i]) {\n                b.push_back(i);\n            }\n        }\n        bool meow = true;\n        for (int i = 1; i <= n; i++) {\n            if (a[i] != b[i - 1]) {\n                cout << \"NO\" << '\\n';\n                meow = false;\n                break;\n            }\n        }\n        if (meow) {\n            cout << \"YES\" << '\\n';\n        }\n    }\n    return 0;\n} Rate the problem Didn't solve \n\n    \n\n\n130\n\n\n\n Good task \n\n    \n\n\n532\n\n\n\n Average task \n\n    \n\n\n49\n\n\n\n Bad task \n\n    \n\n\n126\n\n\n\n "
}