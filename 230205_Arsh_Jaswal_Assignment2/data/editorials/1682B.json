{
    "solution": "1682B â€” AND Sorting HintsHint 1You must have to make at least one swap on the elements which are not at their correct positions initially. So X must be a submask of all elements which are not at their correct positions. Hint 2What is the maximum possible value of X from Hint 1? It is the bitwise AND of all elements which are not at their correct positions. It turns out that this value is achievable too. TutorialWe always have to make at least one swap for the elements which are not at their correct positions. Hence an upper bound of answer would be the bitwise AND of those elements. Let the value be X. It turns out that the given permutation is X-sortable. Proof:First, notice that X would always be present in p. Let posx be the position of X in p initially. Let's say at some point we want to swap two values pi and pj, then pi and pj would always be a supermask of X i.e. pi & X=X and pj & X=X. We can make the following moves to swap pi and pj without disturbing any other element.  Swap values at indices i and posx. Swap values at indices i and j. Swap values at indices j and posx. It can be seen that in every swap the bitwise AND of two values which we are swapping is always X. Hence we can swap any two values which were not at their correct positions, therefore we can sort the permutation p.Overall Complexity: O(n). Solution#include<bits/stdc++.h>\nusing namespace std ;\n\n#define ll              long long \n#define pb              push_back\n#define all(v)          v.begin(),v.end()\n#define sz(a)           (ll)a.size()\n#define F               first\n#define S               second\n#define INF             2000000000000000000\n#define popcount(x)     __builtin_popcountll(x)\n#define pll             pair<ll,ll>\n#define pii             pair<int,int>\n#define ld              long double\n\ntemplate<typename T, typename U> static inline void amin(T &x, U y){ if(y < x) x = y; }\ntemplate<typename T, typename U> static inline void amax(T &x, U y){ if(x < y) x = y; }\n\n#ifdef LOCAL\n#define debug(...) debug_out(#__VA_ARGS__, __VA_ARGS__)\n#else\n#define debug(...) 2401\n#endif\n\n\nint _runtimeTerror_()\n{\n    int n;\n    cin >> n;\n    int ans = (1 << 30) - 1;\n    for(int i=0;i<n;++i) {\n    \tint x;\n    \tcin >> x;\n    \tif(x != i) {\n    \t\tans &= x;\n    \t}\n    }\n    cout << ans << \"\\n\";\n    return 0;\n}\n\nint main()\n{\n    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n    #ifdef runSieve\n        sieve();\n    #endif\n    #ifdef NCR\n        initncr();\n    #endif\n    int TESTS = 1;\n    cin >> TESTS;\n    while(TESTS--) {\n        _runtimeTerror_();\n    }\n    return 0;\n}"
}