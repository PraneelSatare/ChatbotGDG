{
    "solution": "1118B - Tanya and CandiesLet's maintain four variables oddPref, evenPref, oddSuf and evenSuf, which will mean the sum of ai with odd i on prefix, even i on prefix, odd i on suffix and even i on suffix. Initially, oddPref and evenPref are 0, oddSuf equals to the sum of ai with odd i in a whole array and evenSuf equals to the sum of ai with even i in a whole array.Let's iterate from left to right over all elements of the array. Let's consider the current element ai. If i is even, then set evenSuf:=evenSuf−ai, otherwise let's set oddSuf:=oddSuf−ai. Then let's consider we give the current candy to dad. Then we have to increase the answer if oddPref=evenSuf and evenPref=oddSuf. Then if i is even then let's set evenPref:=evenPref+ai, otherwise let's set oddPref:=oddPref+ai. Solution#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\n\tint n;\n\tcin >> n;\n\t\n\tvector<int> a(n);\n\t\n\tint ePref = 0, oPref = 0, eSuf = 0, oSuf = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> a[i];\n\t\tif (i & 1) eSuf += a[i];\n\t\telse oSuf += a[i];\n\t}\n\t\n\tint ans = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (i & 1) eSuf -= a[i];\n\t\telse oSuf -= a[i];\n\t\tif (ePref + oSuf == oPref + eSuf) {\n\t\t\t++ans;\n\t\t}\n\t\tif (i & 1) ePref += a[i];\n\t\telse oPref += a[i];\n\t}\n\t\n\tcout << ans << endl;\n\t\n\treturn 0;\n}"
}