1401B - Троичная последовательностьWe can find the kind of the value of ci is three (−2,0,2). And ci is −2 only if ai is 1 and bi is 2, and ci is 2 only if ai is 2 and bi is 1. Otherwise ci is 0. So we have to make (ai,bi) pair (1,2) as little as possible, and pair (2,1) as much as possible. To do this, first we can make (1,0) pair, (0,2) pair, and (2,1) pair as much as possible. After that, pairing the remaining values doesn't affect the sum of ci. (It ai in which value is 1 and bi in which value is 2 are all left, we have to pair them although the sum decreases.)Time complexity : O(1) Solution Code#include<bits/stdc++.h>

#define endl '\n'

using namespace std;

main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    int t;

    cin >> t;
    for(;t--;)
    {
	int m, sum = 0, x0, x1, x2, y0, y1, y2;

	cin >> x0 >> x1 >> x2 >> y0 >> y1 >> y2;

	m = min(x0, y2);
	x0 -= m;
	y2 -= m;

	m = min(x1, y0);
	x1 -= m;
	y0 -= m;

	m = min(x2, y1);
	x2 -= m;
	y1 -= m;
	sum += 2 * m;

	sum -= 2 * min(x1, y2);

	cout << sum << endl;
    }
} Behind StoryOne tester suggested to swap A and B but I and adedalic thought it is not good idea, so the order didn't changed.