{
    "solution": "1574B - Combinatorics HomeworkLet's start with a simple assumption. For some fixed values a,b,c, the values of m that the answers exist for, make up a range. So there's the smallest possible number of adjacent equal pairs one can construct and the largest one — everything in-between exists as well.The largest number is simple — put all A's, then all B's, then all C's. So this value is (a−1)+(b−1)+(c−1).The smallest number is trickier. Let's instead investigate when it's equal to 0. WLOG, assume a≤b≤c. Imagine the following construction. There are c letters C which separate blocks of letters A and B. There are c−1 (c+1 if you consider the ones to the sides of all letters C, but we want the smallest value, so we shouldn't consider them) such blocks, thus it's possible that each block contains no more than one letter A and no more than one letter B. So letters A and B will never produce adjacent pairs.If there are empty blocks, then there are adjacent letters C. So the condition to still have no empty blocks is to have at least c−1 letters A and B in total. If c−1>a+b, then any extra letter C can only be put adjacent to another letter C, thus producing an extra pair (at least one extra pair, but since we are examining the lower bound, we can always do exactly one). That means that the lower bound is c−1−(a+b).Now for the proof of the fact that every value in-between is also achievable. Since we have a construction for m=0, let's try modifying it. Let's reduce the test to m=0 the following way. While m>0, decrease the count of the letter that appears the most by 1 and decrease m by 1. Now build the string for m=0 with the reduced values. After that put the letters back, placing them next to the last occurrence of the same letter (there is at least one occurrence of each letter, the proof is trivial). That increases m by 1 and the count of this letter by 1. Thus, we'll return to the initial test.Overall complexity: O(1) per testcase. Solution (awoo)for _ in range(int(input())):\n\ta, b, c, m = map(int, input().split())\n\ta, b, c = sorted([a, b, c])\n\tprint(\"YES\" if c - (a + b + 1) <= m <= a + b + c - 3 else \"NO\")"
}