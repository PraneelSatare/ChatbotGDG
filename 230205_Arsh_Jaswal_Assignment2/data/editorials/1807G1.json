{
    "solution": "1807G1 - Subsequence Addition (Easy Version)Idea: flamestorm TutorialTutorial is loading... Solution#include \"bits/stdc++.h\"\nusing namespace std;\n \n#define ll long long\n \n#define          all(v)              v.begin(), v.end()\n#define         rall(v)              v.rbegin(),v.rend()\n \n#define            pb                push_back\n#define          sz(a)               (int)a.size()\n \nvoid solve() {\n    int n; cin >> n;\n    vector<int> a(n);\n    for(int i = 0; i < n; ++i) {\n        cin >> a[i];\n    }\n    sort(all(a));\n    if(a[0] != 1) {\n        cout << \"NO\\n\";\n        return;\n    }\n    vector<int> dp(5005, 0);\n    dp[1] = 1;\n    for(int i = 1; i < n; ++i) {\n        if(!dp[a[i]]) {\n            cout << \"NO\\n\";\n            return;\n        }\n        for(int j = 5000; j >= a[i]; --j) {\n            dp[j] |= dp[j - a[i]];\n        }\n    }\n    cout << \"YES\\n\";\n}\n \nint32_t main() {\n    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n    int t = 1;\n    cin >> t;\n    while(t--) {\n        solve();\n    }\n}\n\n"
}