{
    "solution": "1293A - КоннеР и A.R.C. Markland-NAuthor: xuanquang1999Development: xuanquang1999, AkiLotusEditorialist: xuanquang1999, AkiLotus  TutorialTutorial is loading... Solution (Akikaze, C++)Submission link: 69149995 Source code in plain text#pragma GCC optimize(\"Ofast\")\n \n#include <bits/stdc++.h>\nusing namespace std;\n \n#define endl '\\n'\n \nint n, s, k;\nvector<int> a;\n \nvoid Input() {\n\tcin >> n >> s >> k; a.clear(); a.resize(k);\n\tfor (auto &z: a) cin >> z;\n}\n \nvoid Solve() {\n\tfor (int i=0; i<=k; i++) {\n\t\tif (s-i >= 1 && find(a.begin(), a.end(), s-i) == a.end()) {cout << i << endl; return;}\n\t\tif (s+i <= n && find(a.begin(), a.end(), s+i) == a.end()) {cout << i << endl; return;}\n\t}\n\tassert(false); // if reached this line, the solution failed to find a free floor\n}\n \nint main(int argc, char* argv[]) {\n\tios_base::sync_with_stdio(0); cin.tie(NULL);\n\tint T; cin >> T; while (T--) {Input(); Solve();} return 0;\n} Solution (Akikaze, Java 8)Submission link: 69150848 Source code in plain textimport java.io.*;\nimport java.util.*;\n\npublic class Akisolution {\n\tpublic static Scanner sc = new Scanner(System.in);\n\tpublic static PrintWriter out = new PrintWriter(System.out, true);\n\tpublic static int n, s, k;\n\tpublic static int[] a;\n\n\tpublic static boolean exist(int[] arr, int x) {\n\t\tfor (int i=0; i<arr.length; i++) {\n\t\t\tif (arr[i] == x) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static void Input() {\n\t\tn = sc.nextInt(); s = sc.nextInt(); k = sc.nextInt();\n\t\ta = new int[k];\n\t\tfor (int i=0; i<k; i++) a[i] = sc.nextInt();\n\t}\n\n\tpublic static void Solve() {\n\t\tfor (int i=0; i<=k; i++) {\n\t\t\tif (s-i >= 1 && !exist(a, s-i)) {out.println(i); return;}\n\t\t\tif (s+i <= n && !exist(a, s+i)) {out.println(i); return;}\n\t\t}\n\t\tassert false; // if reached this line, the solution failed to find a free floor\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tint t = sc.nextInt();\n\t\twhile (t-- > 0) {Input(); Solve();}\n\t}\n} Solution (Akikaze, Python 3)Submission link: 69150816 Source code in plain textT = int(input())\nfor test_no in range(T):\n\tn, s, k = map(int, input().split())\n\ta = list(map(int, input().split()))\n\n\tfor i in range(0, k+1):\n\t\tif s-i >= 1 and not s-i in a: \n\t\t\tprint(i); break\n\t\tif s+i <= n and not s+i in a:\n\t\t\tprint(i); break\n\telse: assert(False) # if reached this line, the solution failed to find a free floor"
}