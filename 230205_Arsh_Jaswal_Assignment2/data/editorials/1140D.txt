1140D - Minimum TriangulationYou can use straightforward way and calculate answer with "l-r-dp" with O(n3).But there is a easier claim: it's optimal to split n-gon with diagonals coming from 1, so answer is n−1∑i=2i⋅(i+1).Proof: let's look at the triange which contains edge 1−n. Let's name it 1−n−x. If x=n−1, we can delete this triangle and go to (n−1)-gon.Otherwise, 1<x<n−1. Let's look at triangle n−x−k. It always exists and x<k<n. Finally, if we change pair of triangles (1−n−x, n−x−k) to (1−n−k, 1−k−x), answer will decrease since nx>kx and nxk>nk, that's why nx+nxk>nk+kx.Note, that triangle 1−n−x changes to 1−n−k and k>x, so repeating this step will eventually lead us to situation x=n−1.As a result, we can morph any triangulation into one mentioned above and its weight won't increase. Solution (adedalic)#include<bits/stdc++.h>
using namespace std;

int main() {
	int n; cin >> n;

	long long ans = 0;
	for(int id = 2; id < n; id++)
		ans += 1ll * id * (id + 1);
	
	cout << ans << endl;
}