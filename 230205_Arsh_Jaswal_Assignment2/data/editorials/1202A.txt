1202A - You Are Given Two Binary Strings...Multiplying by power of 2 is "shift left" binary operation (you, probably, should know it). Reverse x and y for the simplicity and look at leftmost 1 in y (let's denote its position as posy).If you move it to 0 in x then you make the revk lexicographically bigger than the reverse of x. So you should move it to 1 in x too. You can choose any 1 with position ≥posy.Let posx be the minimum position of 1 in x, such that posx≥posy. You must move posy to posx, otherwise the 1 in posx still be present in revk and it will be not optimal.So, the solution is next: reverse x and y, find posy, find posx≥posy, print posx−posy. Solution (adedalic)fun main(args: Array<String>) {
    val T = readLine()!!.toInt()
    for (tc in 1..T) {
        val x = readLine()!!.reversed()
        val y = readLine()!!.reversed()

        val posY = y.indexOf('1')
        val posX = x.indexOf('1', posY)
        println(posX - posY)
    }
}