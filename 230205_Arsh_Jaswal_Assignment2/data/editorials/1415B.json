{
    "solution": "1415B - Repainting StreetIf we want to paint every house on the street with color x, it is easy to see that we need to change every house with color different from x, and not necessarily repaint houses already painted in color x. We can do the following greedy algorithm to minimize the number of days: Find leftmost house not painted in color x. Assume this is in position i. Then we will paint [i,i+k−1] with color x. Repeat this until all houses are painted in color x. Why is this optimal? When we find the leftmost house not painted in x, we know we need to change it, and as it is the leftmost one, everything before it is painted in x. To maximize our chances of changing other houses that need repainting, we choose this as the leftmost position in our painting range. This can be implemented easily with a linear pass. However, we don't know the color x that we will have at the end. Limit of colors are small enough, so we can try all of them and just keep the smallest answer.Time complexity: O(n⋅max(c))Space complexity: O(n) "
}