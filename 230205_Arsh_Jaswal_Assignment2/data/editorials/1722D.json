{
    "solution": "1722D - РядFor each person, let's calculate how much the value will change if they turn around. For example, in the line LRRLL, if the i-th person turns around, then the value of the line will change by +4, −2, 0, −2, −4, respectively. (For instance, if the second person turns around, they see 3 people before and 1 person after, so the value of the line changes by −2 if they turn around.)Now note that if a person turns around, it doesn't affect anyone else's value. So the solution is a greedy one: let's sort the array of values in increasing order. Afterwards, we should go from the left to the right, and see if the value will increase if this person turns around; if it does, we should add it to the current total and continue.The time complexity of this solution is O(nlogn) per testcase. Solution#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int MAX = 200007;\nconst int MOD = 1000000007;\n\nvoid solve() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tlong long tot = 0;\n\tvector<long long> v;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (s[i] == 'L') {\n\t\t\tv.push_back((n - 1 - i) - i);\n\t\t\ttot += i;\n\t\t}\n\t\telse {\n\t\t\tv.push_back(i - (n - 1 - i));\n\t\t\ttot += n - 1 - i;\n\t\t}\n\t}\n\tsort(v.begin(), v.end(), greater<int>());\n\tfor (int i = 0; i < n; i++) {\n\t\tif (v[i] > 0) {tot += v[i];}\n\t\tcout << tot << ' ';\n\t}\n\tcout << '\\n';\n}\n\nint main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\tint tt; cin >> tt; for (int i = 1; i <= tt; i++) {solve();}\n\t// solve();\n}"
}