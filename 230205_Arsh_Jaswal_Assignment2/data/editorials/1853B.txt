1853B - FibonaccharsisProblem Credits: ntarsis30, cryAnalysis: cry Hint 1Can a sequence involving n, which is up to 105, really have up to 109 terms?  SolutionThe terms of the fibonacci sequence will increase exponentially. This is quite intuitive, but mathematically, fibonnaci-like sequences will increase at a rate of phi to the power of n, where phi (the golden ratio) is about 1.618. Thus, the maximum number of terms a sequence can have before it reaches 109, or the maximum value of n, is pretty small (around logn). Instead of trying to fix the first two elements of the sequence and counting how many sequences s will have sk=n, note that we already have n fixed. If we loop over the k−1th element of the sequence, the sequence is still fixed. If we know the xth element and x−1th element of s, we can find that sx−2=sx−sx−1. Thus, we can just go backwards and simulate for k iterations in O(logn) since k is small, breaking at any point if the current sequence is not fibonnaci-like (there are negative elements or it is not strictly increasing). Otherwise, we add 1 to our answer. The time complexity is O(n⋅logn). Code (C++)#include <bits/stdc++.h>
using namespace std;
 
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    
    int T; cin >> T;
    
    while (T--) {
 
        int n; int k;
        cin >> n >> k;
     
        int ans = 0;
     
        for (int i = 1; i <= n; i++) {
            int second = n; //xth element where x is k
            int first = i; //fixing x-1th element where x is k-1
            bool valid_seq = true;
            for (int j = 0; j < k - 2; j++) {
                //for s_x and s_x-1, s_x-2 = s_x - s_x-1
                int fx = first;
                first = second - fx;
                second = fx;
                valid_seq &= first <= second;
                valid_seq &= min(first, second) >= 0;
                if (!valid_seq) break; //break if the sequence is not fibonacci-like
            }
            if (valid_seq) ans++;
        }
 
        cout << ans << endl;
    }
 
}Bonus: Solve for n,k≤109 Bonus SolutionAnalysis by awesomeguy856f[k]=Fk−2f[0]+Fk−1f[1]By the Extended Euclidean Algorithm, we can find one integral solution for this equation, since gcd(Fk−2,Fk−1)=1|f[k]. Let this solution be (f[0],f[1])=(x,y). Then all other integral solutions are in the form (x+cFk−1,y−cFk−2), for c∈Z so we can find all valid solutions by binary search on Unable to parse markup [type=CF_MATHJAX] and f[1]>f[0], or just by some calculations. 