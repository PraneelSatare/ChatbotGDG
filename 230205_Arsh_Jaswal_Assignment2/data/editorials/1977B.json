{
    "solution": "1977B - Binary Colouring TutorialWe will iterate over the prefix of i bits and construct a correct answer for the number formed by the prefix bits of the number x. We are interested in considering only the one bits, as they are the only ones that affect the value of the number x.If we have already placed a one at position i in the answer, we need to somehow add 2i to the number. To do this, we simply zero out the i-th bit in the answer and set it at i+1 — this will add 2⋅2i=2i+1.Now, the i-th position in the answer holds 0.Let's consider what we placed at position i−1 in the answer. If it's 0, then everything is fine; we just place 1 at position i. If it's 1, we have a situation of [1 1], which we correct by making it [-1 0 1] — placing −1 at i−1, leaving 0 at i, and placing 1 at i+1. This will add 2i to the sum because 2i+2i−1=2i+1−2i−1. The remaining case is when i−1 holds −1, but this is impossible because our forward operations only place ones, and −1 is placed behind.The final time complexity is O(log(x)) per test case. Author's code#include \"bits/stdc++.h\"\n\n#define all(a) a.begin(), a.end()\n#define pb push_back\ntypedef long long ll;\nusing namespace std;\nmt19937 rnd(std::chrono::high_resolution_clock::now().time_since_epoch().count());\n \n/// Actual code starts here\nconst int N = 100005;\n \nvoid solve() {\n    ll x;\n    cin >> x;\n    vector<int> res(31, 0);\n    for (int i = 0; i < 30; i++) {\n        if (1ll & (x >> i)) {\n            if (res[i]) {\n                res[i + 1] = 1;\n                res[i] = 0;\n            } else if (i > 0) {\n                if (res[i - 1] == 1) {\n                    res[i + 1] = 1;\n                    res[i - 1] = -1;\n                } else {\n                    res[i] = 1;\n                }\n            } else if (i == 0) {\n                res[i] = 1;\n            }\n        }\n    }\n    cout << 31 << '\\n';\n    for (int i = 0; i <= 30; i++) {\n        cout << res[i] << ' ';\n    }\n    cout << '\\n';\n}\n \nsigned main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    int tt = 1;\n    cin >> tt;\n    while (tt--)\n        solve();\n}\n Feedback Good problem \n\n    \n\n\n344\n\n\n\n Average problem \n\n    \n\n\n25\n\n\n\n Bad problem \n\n    \n\n\n209\n\n\n\n "
}