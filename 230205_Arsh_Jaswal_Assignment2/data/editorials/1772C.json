{
    "solution": "1772C - Different DifferencesWe can transform the problem as follows. Let di=ai+1−ai. We need to find an array [d1,d2,…,dk−1] so that the sum of elements in it is not greater than n−1, all elements are positive integers, and the number of different elements is the maximum possible.Suppose we need f different elements in d. What can be the minimum possible sum of elements in d? It's easy to see that d should have the following form: [2,3,4,…,f,1,1,1,…,1]. This array contains exactly f different elements, these different elements are as small as possible (so their sum is as small as possible), and all duplicates are 1's. So, if the sum of this array is not greater than n−1, then it is possible to have the number of different elements in d equal to f.The rest is simple. We can iterate on f, find the maximum possible f, construct the difference array, and then use it to construct the array a itself. Solution (BledDest)def construct(f, k):\n    return [(i + 2 if i < f - 1 else 1) for i in range(k)]\n\nt = int(input())\nfor i in range(t):\n    k, n = map(int, input().split())\n    ans = 1\n    for f in range(1, k):\n        d = construct(f, k - 1)\n        if sum(d) <= n - 1:\n            ans = f\n    res = [1]\n    d = construct(ans, k - 1)\n    for x in d:\n        res.append(res[-1] + x)\n    print(*res)"
}