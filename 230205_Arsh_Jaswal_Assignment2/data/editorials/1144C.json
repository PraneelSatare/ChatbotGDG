{
    "solution": "1144C - Two Shuffled SequencesLet's count the number of occurrences of each element in the array cnt. Because the maximum possible element is 2⋅105, it can be done without any data structures.Then let's check if cnti is greater than 2 for some i from 0 to 2⋅105, and if it is, then the answer is \"NO\", because this element should occur at least twice in one of the sequences.Now let's output the increasing sequence. The number of elements in it is the number of elements i such that cnti=2. Let's iterate from left to right, print the suitable elements and decrease their cnt.The number of elements in the decreasing sequence is just the number of elements with non-zero cnt. So let's iterate from right to left and just print suitable elements. Solution#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n;\n\tcin >> n;\n\tvector<int> cnt(200 * 1000 + 1);\n\tfor (int i = 0; i < n; ++i) {\n\t\tint x;\n\t\tcin >> x;\n\t\t++cnt[x];\n\t\tif (cnt[x] > 2) {\n\t\t\tcout << \"NO\" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\t\n\tcout << \"YES\" << endl << count(cnt.begin(), cnt.end(), 2) << endl;\n\tfor (int i = 0; i <= 200 * 1000; ++i) {\n\t\tif (cnt[i] == 2) {\n\t\t\tcout << i << \" \";\n\t\t\t--cnt[i];\n\t\t}\n\t}\n\tcout << endl << count(cnt.begin(), cnt.end(), 1) << endl;\n\tfor (int i = 200 * 1000; i >= 0; --i) {\n\t\tif (cnt[i] == 1) {\n\t\t\tcout << i << \" \";\n\t\t\t--cnt[i];\n\t\t}\n\t}\n\tcout << endl;\n\t\n\tassert(count(cnt.begin(), cnt.end(), 0) == 200 * 1000 + 1);\n\t\n\treturn 0;\n}"
}