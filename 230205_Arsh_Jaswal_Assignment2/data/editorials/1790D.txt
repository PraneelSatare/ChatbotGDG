1790D - MatryoshkasFirst, for each size, let's count cnts — the number of dolls of this size.Then, let's create a set, in which for each doll of size s we add the numbers s and s+1. This will allow you to process all the segments, as well as the dimensions adjacent to them.We will iterate over the set in ascending order of size. Let x be the number of matryoshkas of the current size, y — of the previous one considered (0 at the beginning). If the numbers do not match, then you need to close (if x<y), or open (if x>y) |x−y| segments. It is enough to add only the opening of the segments to the answer. Solution#include <iostream>
#include <vector>
#include <queue>
#include <map>
#include <set>

using namespace std;

void solve() {
    int n;
    cin >> n;
    vector<int> a(n);
    map<int, int> cnt;
    set<int> b;
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
        cnt[a[i]]++;
        b.insert(a[i]);
        b.insert(a[i] + 1);
    }
    int last = 0;
    int res = 0;
    for (auto x: b) {
        int c = cnt[x];
        res += max(0, c - last);
        last = c;
    }
    cout << res << '\n';
}

int main(int argc, char* argv[]) {
    int t;
    cin >> t;
    for (int i = 0; i < t; ++i) {
        solve();
    }
}