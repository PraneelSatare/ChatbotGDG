{
    "solution": "1015B - Obtaining the StringThis problem can be solved using the next greedy approach: let's iterate over all i from 1 to n. If si=ti, go further. Otherwise let's find any position j>i such that sj=ti and move the character from the position j to the position i. If there is no such position in s, the answer is \"-1\".Upper bound on time complexity (and the size of the answer) of this solution is O(n2). Solution (Vovuh)#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n;\n\tstring s, t;\n\tcin >> n >> s >> t;\n\t\n\tvector<int> ans;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (s[i] == t[i]) continue;\n\t\tint pos = -1;\n\t\tfor (int j = i + 1; j < n; ++j) {\n\t\t\tif (s[j] == t[i]) {\n\t\t\t        pos = j;\n\t\t\t        break;\n\t\t\t}\n\t\t}\n\t\tif (pos == -1) {\n\t\t\tcout << -1 << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tfor (int j = pos - 1; j >= i; --j) {\n\t\t\tswap(s[j], s[j + 1]);\n\t\t\tans.push_back(j);\n\t\t}\n\t}\n\t\n\tassert(s == t);\n\t\n\tcout << ans.size() << endl;\n\tfor (auto it : ans) cout << it + 1 << \" \";\n\tcout << endl;\n\t\n\treturn 0;\n}"
}