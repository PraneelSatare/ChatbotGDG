{
    "solution": "1471B - Strange ListSolution 1. Let's represent each element ai as xbi⋅ci, where bi is the maximal possible. Let's take minimum over all values bi, and let's assume it's attained at position j. The robot will add each element to the array bj times (element at position j will be the first one, which will stop being divisible by x). However, we should not forget about the prefix before position j: each of those number is divisible by a higher power of x, and this prefix will count towards the total sum. The final answer is (bj+1)⋅∑ni=1ai+∑j−1i=1aiIn this solution we divide each number ai by x to generate the array b1,b2,…,bn, and then it takes O(n) to compute both sums. The final complexity of the solution is O(nlogA), where A denotes the maximum possible element of the array.Solution 2. Let's maintain the list of pairs {ai,cnti} — it indicates a range of cnti elements equal to ai. Then we can easily implement the operation performed by the robot: if we consider pair {a,cnt}, we either append the array with a pair {ax,cnt⋅x}, or terminate the process. The answer to the problem equals to sum of values ai⋅cnti.Each number ai will be copied to the end of the array at most O(logA) times, since each time ai is divided by x. Since there are n elements in the array initially, the total complexity of this solution is O(nlogA). "
}