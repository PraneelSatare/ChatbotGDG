{
    "solution": "1102C - Doors Breaking and RepairingLet's consider two cases:If x>y then the answer is n because we can make opposite moves to the Slavik's moves and it always will reduce durability of some door (so at some point we will reach the state when all doors will have durability 0).Otherwise x≤y and we have to realize the optimal strategy for us. If we have some door with durability z≤x then let's break it immediately (why shouldn't we do this?). If we don't do it then Slavik will repair this door during his move. So what Slavik will do now? He will repair some door. Which door he has to repair? Of course the one with durability z≤x because otherwise we will break it during our next move. So we can realize that doors with durability z>x are not interesting for us because Slavik will make opposite moves to our moves. And what is the answer if the number of doors with durability z≤x equals to cnt? It is ⌈cnt2⌉. Solution#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n, x, y;\n\tcin >> n >> x >> y;\n\tint cnt = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\tint cur;\n\t\tcin >> cur;\n\t\tif (cur <= x) {\n\t\t\t++cnt;\n\t\t}\n\t}\n\t\n\tif (x > y) {\n\t\tcout << n << endl;\n\t} else {\n\t\tcout << (cnt + 1) / 2 << endl;\n\t}\n\t\n\treturn 0;\n}"
}