{
    "solution": "1027B - Numbers on the ChessboardLet's see the following fact: if we will decrease ⌈n22⌉ from all numbers written in cells with an odd sum of coordinates and write out the numbers obtained on the board from left to right from top to bottom, the sequence will looks like 1,1,2,2,…,⌈n22⌉,⌈n22⌉ for even n (for odd n there is only one number ⌈n22⌉ at the end of the sequence, but, in general, it does not matter).Let's try to find out the answer for some query (x,y). Let cnt=(x−1)⋅n+y (1-indexed). There cnt is the position of our cell in order of the written sequence. The first approximation of the answer is ⌈cnt2⌉. But now we are remember that we decreased ⌈n22⌉ from all numbers written in cells with an odd sum of coordinates. So if x+y is even then the answer is ⌈cnt2⌉, otherwise the answer is ⌈cnt2⌉+⌈n22⌉. Note that you should be careful with integer overflow in C++, Java or similar languages. 64-bit datatype is quite enough.Time complexity: O(q). Solution (Vovuh)import sys\n\nlst = sys.stdin.readlines()\nn, q = map(int, lst[0].split())\n\nfor i in range(q):\n    x, y = map(int, lst[i + 1].split())\n    cnt = (x - 1) * n + y\n    ans = (cnt + 1) // 2\n    if ((x + y) % 2 == 1): ans += (n * n + 1) // 2\n    sys.stdout.write(str(ans) + '\\n')"
}