{
    "solution": "1975B - 378QAQ and Mocha's ArrayIdea: Bazoka13 Solution: Bazoka13 Prepared by: Bazoka13 Hint 1How to solve the problem if we only need to find a number i(1≤i≤n) such that ak is divisible by ai for all k(1≤k≤n)? Hint 2We only need to check whether all elements are divisible by the minimum element of the array. SolutionRead the hints.Suppose the minimum element of a is x. Then we iterate over a, if an element is not divisible by x, then we add it to b (b is initially empty).If b is still empty after iterating a, the answer is yes. If b isn't empty, we check whether all elements of b are divisible by the minimum element of b. If so, the answer is yes. Otherwise, the answer is no. Code#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int N = 1e5+10;\nint a[N];\nint main(){\n    int t;\n    cin>>t;\n    while(t--){\n        int n;\n        cin>>n;\n        int fl=0;\n        for(int i=1;i<=n;i++){\n            cin>>a[i];\n            if(a[i]==1)fl=1;\n        }\n        if(fl)cout<<\"Yes\\n\";\n        else{\n            sort(a+1,a+1+n);\n            vector<int> b;\n            for(int i=2;i<=n;i++){\n                if(a[i]%a[1])b.push_back(a[i]);\n            }\n            sort(b.begin(),b.end());\n            n = b.size();\n            for(int j=1;j<n;j++){\n                if(b[j]%b[0]){\n                    fl=1;\n                    break;\n                }\n            }\n            if(!fl)cout<<\"Yes\\n\";\n            else cout<<\"No\\n\";\n        }\n\n    }\n}"
}