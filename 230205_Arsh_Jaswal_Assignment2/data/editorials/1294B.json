{
    "solution": "1294B - Collecting PackagesIt is obvious that if there is a pair of points (xi,yi) and (xj,yj) such that xi<xj and yi>yj then the answer is \"NO\". It means that if the answer is \"YES\" then there is some ordering of points such that xi1≤xi2≤⋯≤xin and yi1≤yi2≤⋯≤yin because we can only move right or up. But what is this ordering? it is just sorted order of points (firstly by xi then by yi).So we can sort all points, check if this ordering is valid and traverse among all these points. For each k from 2 to n firstly do xik−xik−1 moves to the right then do yik−yik−1 moves to the up (because this order minimizing the answer lexicographically).Time complexity: O(nlogn) or O(n2). Solution#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n    int t;\n    cin >> t;\n    \n    for (int tt = 0; tt < t; tt++) {\n     \tint n;\n    \tcin >> n;\n    \tvector<pair<int, int>> a(n);\n    \tfor (int i = 0; i < n; ++i) {\n    \t\tcin >> a[i].first >> a[i].second;\n    \t}\n    \tsort(a.begin(), a.end());\n    \tpair<int, int> cur = make_pair(0, 0);\n    \tstring ans;\n    \tbool ok = true;\n    \tfor (int i = 0; i < n; ++i) {\n    \t\tint r = a[i].first - cur.first;\n    \t\tint u = a[i].second - cur.second;\n    \t\tif (r < 0 || u < 0) {\n    \t\t\tcout << \"NO\" << endl;\n    \t\t\tok = false;\n    \t\t\tbreak;\n    \t\t}\n    \t\tans += string(r, 'R');\n    \t\tans += string(u, 'U');\n    \t\tcur = a[i];\n    \t}\n    \t\n    \tif (ok)\n    \t    cout << \"YES\" << endl << ans << endl;\n   }\n\n\treturn 0;\n}"
}