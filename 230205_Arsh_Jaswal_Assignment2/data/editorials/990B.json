{
    "solution": "990B - Micro-WorldIt can be proved that the optimal answer equals to a number of bacteria which can't be eaten by any other bacteria. So for each bacteria i you need to check existence of any bacteria j satisfying condition ai<aj≤ai+K.There plenty of ways to check this condition. One of them is to sort array a and for each i find minimal aj>ai with upper_bound or with two-pointers technique. Or you can use the fact that ai≤106 and build solution around it.Result complexity is O(nlogn). Solution (adedalic)#include<bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 200 * 1000 + 555;\nint n, k, a[N];\n\ninline bool read() {\n\tif(!(cin >> n >> k))\n\t\treturn false;\n\tfor(int i = 0; i < n; i++)\n\t\tassert(scanf(\"%d\", &a[i]) == 1);\n\treturn true;\n}\n\ninline void solve() {\n\tsort(a, a + n);\n\ta[n++] = int(2e9);\n\t\n\tint ans = 0, u = 0;\n\tfor(int i = 0; i < n - 1; i++) {\n\t\twhile(u < n && a[i] == a[u])\n\t\t\tu++;\n\t\tif(a[u] - a[i] > k)\n\t\t\tans++;\n\t}\n\tcout << ans << endl;\n}\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n\tint tt = clock();\n#endif\n\n\tif(read()) {\n\t\tsolve();\n#ifdef _DEBUG\n\t\tcerr << \"TIME = \" << clock() - tt << endl;\n#endif\n\t}\n\treturn 0;\n}"
}