{
    "solution": "2002B — Removals Gameidea & solution: xcyle HintFind some conditions that Bob need to win. TutorialA general idea is that it is very difficult for Bob to win. We make some observations regarding the case where Bob wins. It is intuitive to see that for any subarray [Al,Al+1,⋯,Ar], the elements' positions in B must also form an interval. If A[l:r] does not form an interval in B, Alice can simply remove elements until only A[l:r] is left, no matter how Bob plays, there must now be an element in A but not in B because of our previous condition. Alice can then remove everything other than this element to win.From here, it is easy to prove by induction that for Bob to win, either A=B or A=rev(B).Time complexity: O(n). Solution#include <bits/stdc++.h>\n#define ll long long\n#define lc(x) ((x) << 1)\n#define rc(x) ((x) << 1 | 1)\n#define ru(i, l, r) for (int i = (l); i <= (r); i++)\n#define rd(i, r, l) for (int i = (r); i >= (l); i--)\n#define mid ((l + r) >> 1)\n#define pii pair<int, int>\n#define mp make_pair\n#define fi first\n#define se second\n#define sz(s) (int)s.size()\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\n#define ordered_set tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>\nusing namespace std;\nmt19937 Rand(chrono::steady_clock::now().time_since_epoch().count());\nint read() {\n    int x = 0, w = 0;\n    char ch = getchar();\n\n    while (!isdigit(ch))\n        w |= ch == '-', ch = getchar();\n\n    while (isdigit(ch))\n        x = x * 10 + ch - '0', ch = getchar();\n\n    return w ? -x : x;\n}\nint main() {\n    int T = read();\n\n    while (T--) {\n        int n = read();\n        vector<int> a, b;\n        ru(i, 1, n) a.push_back(read());\n        ru(i, 1, n) b.push_back(read());\n\n        if (a == b) {\n            printf(\"Bob\\n\");\n            continue;\n        }\n\n        reverse(a.begin(), a.end());\n\n        if (a == b) {\n            printf(\"Bob\\n\");\n            continue;\n        }\n\n        printf(\"Alice\\n\");\n    }\n\n    return 0;\n}"
}