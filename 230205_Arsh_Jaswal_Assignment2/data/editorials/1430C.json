{
    "solution": "1430C - Numbers on WhiteboardIt's easy to see that we can't get the result less than 2, because, if we merge two positive numbers, and at least one of them is 2 or greater, the new number is always greater than 1. So we can't get rid of all numbers greater than 1.To always achieve 2, we can use a greedy algorithm: always merge two maximum numbers. During the first step, we merge n and n−1, get n; then we merge n and n−2, get n−1; then we merge n−1 and n−3, get n−2; and it's easy to see that the last operation is merging 3 and 1, so the result is 2. Solution (fcspartakm)#include <iostream>\n#include <sstream>\n#include <cstdio>\n#include <vector>\n#include <cmath>\n#include <queue>\n#include <string>\n#include <cstring>\n#include <cassert>\n#include <iomanip>\n#include <algorithm>\n#include <set>\n#include <map>\n#include <ctime>\n#include <cmath>\n\n#define forn(i, n) for(int i=0;i<n;++i)\n#define fore(i, l, r) for(int i = int(l); i <= int(r); ++i)\n#define sz(v) int(v.size())\n#define all(v) v.begin(), v.end()\n#define pb push_back\n#define mp make_pair\n#define x first\n#define y1 ________y1\n#define y second\n#define ft first\n#define sc second\n#define pt pair<int, int>\n\ntemplate<typename X> inline X abs(const X& a) { return a < 0? -a: a; }\ntemplate<typename X> inline X sqr(const X& a) { return a * a; }\n\ntypedef long long li;\ntypedef long double ld;\n\nusing namespace std;\n\nconst int INF = 1000 * 1000 * 1000;\nconst ld EPS = 1e-9;\nconst ld PI = acos(-1.0);\n\nint n;\n\ninline void read() {\t\n\tcin >> n;\n}\n\ninline void solve() {\n\tmultiset<int> was;\n\tfor (int i = 1; i <= n; i++) {\n\t\twas.insert(i);\n\t}\n\tvector<pair<int, int> > ans;\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tauto it = was.end();\n\t\tit--;\n\t\tint a = *it;\n\t\twas.erase(it);\n\t\tit = was.end();\n\t\tit--;\n\t\tint b = *it;\n\t\twas.erase(it);\n\t\twas.insert((a + b + 1) / 2);\n\t\tans.pb(mp(a, b));\n\t}\n\tcout << *was.begin() << endl;\n\tfor (int i = 0; i < sz(ans); i++) {\n\t\tcout << ans[i].ft << ' ' << ans[i].sc << endl;\n\t}\t\n}\n\nint main () {\n#ifdef fcspartakm\n    freopen(\"input.txt\", \"r\", stdin);\n    //freopen(\"output.txt\", \"w\", stdout);\n#endif\n    cerr << setprecision(10) << fixed;\n    \n    int t; cin >> t;\n    while(t--) {\n    \tread();\n    \tsolve();\n    }\n    //cerr << \"TIME: \" << clock() << endl;\n}\n"
}