1970A1 - Balanced Shuffle (Easy)The problem statement describes exactly what needs to be done, so we just need to implement it carefully, using a O(nlogn) sorting algorithm from the standard library.If you're using Python for this problem, the time limit can be a bit tight so you might need to optimize a bit. For example, tuples are much faster than custom classes in Python, so the following passes in 0.5s:s = input()a = []b = 0for i in range(len(s)):  a.append((b, -i, s[i]))  if s[i] == '(':    b += 1  else:    b -= 1a.sort()print(".join(x[2] for x in a)) A2 - Balanced Unshuffle (Medium)