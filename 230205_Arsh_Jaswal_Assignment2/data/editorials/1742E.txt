1742E - ScuzaLet's compute the prefix sums of the array a: let bi=a1+⋯+ai. Rephrasing the problem: for each question containing an integer k, we need to find the largest ai such that a1,…,ai are all at most k, and then output bi. In other words, max(a1,…,ai)≤k.Let's make the prefix maximums of the array: let mi=max(a1,…,ai). Then we need to find the largest i such that mi≤k, which is doable using binary search, since the array m is non-decreasing. Once we find the index i, we simply need to output bi.The time complexity is O(nlogn) per testcase. Solution#include <bits/stdc++.h>

using namespace std;

void solve()
{
    int n, q;
    cin >> n >> q;
    vector<long long> pref;
    pref.push_back(0);
    vector<int> prefmax;
    for(int i = 0; i < n; i++)
    {
        int x;
        cin >> x;
        pref.push_back(pref.back()+x);
        if(i == 0)
        {
            prefmax.push_back(x);
        }
        else
        {
            prefmax.push_back(max(prefmax.back(), x));
        }
    }
    for(int i = 0; i < q; i++)
    {
        int k;
        cin >> k;
        int ind = upper_bound(prefmax.begin(), prefmax.end(), k)-prefmax.begin();
        cout << pref[ind] << " ";
    }
    cout << endl;
}

int main()
{
    int t;
    cin >> t;
    while(t--)
    {
        solve();
    }
}