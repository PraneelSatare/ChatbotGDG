{
    "solution": "1846D - Rudolph and Christmas TreeLet's consider the triangles in ascending order of yi. Let the current triangle have index i. There are two cases:  The triangle does not intersect with the (i+1)-th triangle (yi+1−yi≥h). In this case, we simply add the area of the triangle to the answer. The area will be d⋅h2. The triangle intersects with the (i+1)-th triangle (yi+1−yi<h). We can add to the answer the area of the figure that does not belong to the intersection and move on to the next triangle. Note that this figure is a trapezoid with a lower base d and height h′=yi+1−yi. The upper base can be found based on the similarity of triangles. The heights of the triangles are in the ratio k=h−h′h. Then the upper base dtop=d⋅k. The area of the trapezoid is h′⋅d+dtop2. Time complexity is O(n). Solution#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    cout.precision(10); cout.setf(ios::fixed);\n    int ttt;\n    cin >> ttt;\n    while (ttt--) {\n        int n, d, h;\n        cin >> n >> d >> h;\n        vector<int> y(n);\n        for(int i = 0; i < n; i++){\n            cin >> y[i];\n        }\n        long double ans = (long double)d * h / 2.0;\n        for (int i = 0; i + 1 < n; ++i) {\n            if (y[i + 1] >= y[i] + h) ans += (long double)d * h / 2.0;\n            else{\n                long double d2 = (long double)d * (y[i] + h - y[i + 1]) / h;\n                long double nh = y[i + 1] - y[i];\n                ans += (d + d2) / 2.0 * nh;\n            }\n        }\n        cout << ans << '\\n';\n    }\n    return 0;\n}\n Rate the problem Didn't solve \n\n    \n\n\n17\n\n\n\n Good task \n\n    \n\n\n324\n\n\n\n Average task \n\n    \n\n\n48\n\n\n\n Bad task \n\n    \n\n\n94\n\n\n\n "
}