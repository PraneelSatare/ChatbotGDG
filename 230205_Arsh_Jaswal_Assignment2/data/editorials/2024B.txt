2024B - Buying LemonadeLet's make a few simple observations about the optimal strategy of actions. First, if after pressing a certain button, no cans have been obtained, there is no point in pressing that button again. Second, among the buttons that have not yet resulted in a failure, it is always advantageous to press the button that has been pressed the least number of times. This can be loosely justified by the fact that the fewer times a button has been pressed, the greater the chance that the next press will be successful, as we have no other information to distinguish these buttons from one another. From this, our strategy clearly emerges: let's sort the array, let a1≤a2≤…an. In the first action, we will press all buttons a1 times. It is clear that all these presses will yield cans, and in total, we will collect a1⋅n cans. If k≤a1⋅n, no further presses are needed. However, if k>a1⋅n, we need to make at least one more press. Since all buttons are still indistinguishable to us, it may happen that this press will be made on the button corresponding to a1 and will be unsuccessful. Next, we will press all remaining buttons a2−a1 times; these presses will also be guaranteed to be successful. After that, again, if k does not exceed the number of cans already collected, we finish; otherwise, we need to make at least one more press, which may hit an empty cell a2. And so on. In total, the answer to the problem will be k+x, where x is the smallest number from 0 to n−1 such that the following holds: ∑i=0x(ai+1−ai)⋅(n−i)≥k (here we consider a0=0). O(nlogn). 