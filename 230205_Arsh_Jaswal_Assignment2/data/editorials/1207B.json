{
    "solution": "1207B - Square FillingIt is quite obvious that we can't choose any submatrix that contains at least one zero in A. The contrary is also true — if a submatrix of A consists of only ones, then there's no reason not to choose it (suppose there is an answer that does not choose it — then choosing this submatrix won't affect it).So we may perform an operation on every submatrix of B such that the corresponding submatrix in A is filled with 1's, and check if our answer is correct. Solution (BledDest)n, m = map(int, input().split())\na = [[] for i in range(n)]\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\n\nans = []\nfor i in range(n - 1):\n    for j in range(m - 1):\n        if(a[i][j] * a[i][j + 1] * a[i + 1][j] * a[i + 1][j + 1] > 0):\n            a[i][j] = 2\n            a[i + 1][j] = 2\n            a[i][j + 1] = 2\n            a[i + 1][j + 1] = 2\n            ans.append([i, j])\n\ncnt1 = 0\nfor i in range(n):\n    for j in range(m):\n        if(a[i][j] == 1):\n            cnt1 += 1\n\nif(cnt1 != 0):\n    print(-1)\nelse:\n    print(len(ans))\n    for x in ans:\n        print(x[0] + 1, x[1] + 1)"
}