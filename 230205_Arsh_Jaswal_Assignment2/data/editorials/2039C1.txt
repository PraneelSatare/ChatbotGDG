2039C1 - Shohag Loves XOR (Easy Version)THOUGHT: Here x>0 and y>0. So x⊕y is neither equal to x nor y. So x⊕y is a divisor of x or y and x⊕y<x or x⊕y<y.OBSERVATION: Any divisor d of p such that d<p we know that d≤⌊p2⌋. Also, the highest bits of d and p are different when d≤⌊p2⌋.THOUGHT: Wait but x⊕y has the same highest bit as y if y≥2⋅x.CONCLUSION: So if y≥2⋅x, then x⊕y can not be a divisor of y.THOUGHT: But can it be a divisor of x?OBSERVATION: If y≥2⋅x, then x⊕y>x because the highest bit in x⊕y is greater than that in x. So x⊕y can not be a divisor of x.CONCLUSION: If y≥2⋅x, then x⊕y can not be a divisor of x or y. So no solution in this case.THOUGHT: Now we need to consider the case when y<2⋅x. But x is small in this problem, making it feasible to iterate over all possible values of y.ACTION: Iterate over all possible values of y<2⋅x and check if x⊕y is a divisor of either x or y.Time Complexity: O(x). Code#include<bits/stdc++.h>
using namespace std;

using ll = long long;

void solve() {
  int x; ll m; cin >> x >> m;

  int ans = 0;
  for (int y = 1; y <= min(2LL * x, m); y++) {
    if (x != y and ((x % (x ^ y)) == 0 or (y % (x ^ y) == 0))) {
      ++ans;
    }
  }
  cout << ans << '\n';
}

int32_t main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  int t = 1;
  cin >> t;
  while (t--) {
    solve();
  }
  return 0;
} Rate the Problem Amazing problem: 

    


264



 Good problem: 

    


81



 Average problem: 

    


37



 Bad problem: 

    


58



 Didn't solve: 

    


29



 