1263A - Sweet ProblemSort the values of r, g, b such that r≥g≥b. Now consider two cases.If r≥g+b, then Tanya can take g candies from piles r and g, and then — b candies from piles r and b. After that there may be a bunch of candies left in the pile r that Tanya won't be able to eat, so the answer is g+b.Otherwise, we need to achieve the equality of the piles r, g, b. First, we make equal r and g by eating r−g from the piles r and b (this can always be done since r<g+b). Then we make equal the piles g, b by eating g−b from the piles r and g. After that, r=g=b, and we can get three different cases.  r=g=b=0 — nothing needs to be done, Tanya has already eaten all the sweets;  r=g=b=1 — you can take candy from any of two piles so in the end there will always be one candy left;  r=g=b≥2 — we reduce all the piles by 2, taking, for example, a candy from piles r and g, g and b, r and b. With such actions, Tanya eventually reaches the two previous cases, since the sizes of the piles are reduced by 2. Since with this strategy we always have 0 or 1 candy at the end, Tanya will be able to eat candies for ⌊r+g+b2⌋ days. Solution (MikeMirzayanov)#include <bits/stdc++.h>

using namespace std;

#define forn(i, n) for (int i = 0; i < int(n); i++)

int main() {
    int t;
    cin >> t;
    forn(tt, t) {   
        int a[3];
        cin >> a[0] >> a[1] >> a[2];
        sort(a, a + 3);
        if (a[2] <= a[0] + a[1])
            cout << (a[0] + a[1] + a[2]) / 2 << endl;
        else
            cout << a[0] + a[1] << endl;
    }
}