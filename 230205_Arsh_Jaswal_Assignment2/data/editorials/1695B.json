{
    "solution": "1695B - Circle GameNote that since all piles are initially nonempty, the game will not end for the first n turns, because on each of those turns, a player will be removing from a nonempty pile. If n is odd, Mike can remove all of the stones from the first pile. Then, on the n+1th turn (the first turn where the game can end), Joe will be forced to remove from the first pile, which is empty. So Mike can always win if n is odd.If n is even, then Mike will only ever remove from the odd piles, and Joe will only ever remove from the even piles. So each player has n/2 piles, and neither can remove from the other's piles. Therefore, it is optimal for each player to remove the minimal possible number of stones at each step, so that they stay in the game for as long as possible.So on each turn, a player removes exactly one stone, and the first pile to become empty will be the pile with the minimal number of stones. If there are multiple minimal piles, it will be the leftmost such pile. So if this pile is on an odd position, Mike will lose (and therefore Joe will win), and otherwise Joe will lose (and Mike will win).Complexity: O(n) Solution#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n    int num_tests;\n    cin >> num_tests;\n\n    for (int test = 0; test < num_tests; ++test) {\n\n        int n; cin >> n;\n        vector<int> a(n);\n        for (int i = 0; i < n; ++i)\n            cin >> a[i];\n\n        if (n % 2 == 1) {\n            cout << \"Mike\\n\";\n            continue;\n        }\n\n        int smallest = 0;\n        for (int i = 0; i < n; ++i)\n            if (a[i] < a[smallest])\n                smallest = i;\n\n        if (smallest % 2 == 0) cout << \"Joe\\n\";\n        else cout << \"Mike\\n\";\n    }\n} "
}