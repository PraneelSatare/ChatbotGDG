{
    "solution": "1850E - Cardboard for PicturesThe key idea is to binary search on the answer. If you don't know what that is, you should read this Codeforces EDU article. Let's make a function f(x), which tells us the total area of cardboard if we use a width of x. Then you can see that we can calculate f(x) in O(n) time as (a1+2x)2+(a2+2x)2+⋯+(an+2x)2, because the side length of the i-th cardboard is ai+2x.So this means that now we can binary search on the answer: let's find the largest w so that f(w)≤c. The maximum theoretical value of w can be seen not to exceed 109, since c is not more than 1018 (you can set an even lower bound).A quick note about implementation: the value of f(x) can exceed 64-bit numbers, so you need to exit the function as soon as you get a value greater than c, or else you risk overflow.So the time complexity is O(nlog(109)) per test case, which is equal to O(n) with some constant factor. It's not that big to make it fail.You can also use the quadratic formula, but be careful about implementation of square root and precision issues. Solution#include \"bits/stdc++.h\"\nusing namespace std;\n \n#define ll long long\n \n#define          all(v)              v.begin(), v.end()\n#define         rall(v)              v.rbegin(),v.rend()\n \n#define            pb                push_back\n#define          sz(a)               (int)a.size()\n \n#define int long long\n \nvoid solve() {\n    int n, c; cin >> n >> c;\n    vector<int> a(n);\n    for(int i = 0; i < n; ++i) cin >> a[i];\n    int l = 1, r = 1e9;\n    while(l <= r) {\n        int mid = l + (r - l) / 2;\n        int sumall = 0;\n        for(int i = 0; i < n; ++i) {\n            sumall += (a[i] + 2 * mid) * (a[i] + 2 * mid);\n            if(sumall > c) break;\n        }\n        if(sumall == c) {\n            cout << mid << \"\\n\";\n            return;\n        }\n        if(sumall > c) {\n            r = mid - 1;\n        } else {\n            l = mid + 1;\n        }\n    }\n}   \n \nint32_t main() {\n    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n    int t = 1;\n    cin >> t;\n    while(t--) {\n        solve();\n    }\n}\n\n"
}