{
    "solution": "1077B - Disturbed PeopleThe first observation is that we are interested only in patterns of kind \"101\". All other patterns don't make sense at all.So, let's build a greedy approach. Let's iterate over the given array from the left to the right and maintain that the prefix of the given answer is already correct. If now we are at some position i, ai−1=ai+1=1 and ai=0 (and the prefix from 1 to i−2 is already correct) then which one 1 we have to replace? When we replace the left one then we cannot do better in the future, but when we replace the right one then we can fix some on the suffix of the array.The easiest example is \"1101011\". If now we are at the position 3 then we will do better if we will set a4:=0. Solution#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n;\n\tcin >> n;\n\tvector<int> a(n);\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> a[i];\n\t}\n\t\n\tint ans = 0;\n\tfor (int i = 1; i < n - 1; ++i) {\n\t\tif (a[i] == 0 && a[i - 1] == 1 && a[i + 1] == 1) {\n\t\t\t++ans;\n\t\t\ta[i + 1] = 0;\n\t\t}\n\t}\n\tcout << ans << endl;\n\t\n\treturn 0;\n}"
}