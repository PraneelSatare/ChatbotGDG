{
    "solution": "1082A - Vasya and BookIt is easy to understand that the optimal answer is achieved in one of three cases:   Vasya is trying to visit page y without visiting pages 1 and n;  Vasya first goes to the page 1, and then to the page y;  Vasya first goes to the n page, and then to the y page. In the first case, Vasya can go directly to the y page from the x page if |x−y| is divided by d.In the second case, Vasya can get to page y through page 1, if y−1 is divided by d. The required number of actions will be equal to ⌈x−1d⌉+y−1d.Similarly, in the third case, Vasya can go to the page y through the page n if n−y is divided by d. The required number of actions will be equal to ⌈n−xd⌉+n−yd.If none of the three options described above is appropriate, then there is no answer. Solution (Ajosteen)#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int INF = int(2e9) + 99;\n\nint n, x, y, d;\n\nint dist(int x, int y){\n\treturn (abs(x - y) + (d - 1)) / d;\n}\n\nint main() {\n\t\n\tint t;\n\tcin >> t;\n\tfor(int i = 0; i < t; ++i){\n    \tcin >> n >> x >> y >> d;\n    \t\n    \tint len = abs(x - y);\n    \tint res = INF;\n    \t\n    \tif(len % d == 0) \n    \t\tres = min(res, dist(x, y));\n    \t\n    \tlen = y - 1;\n    \tif(len % d == 0)\n    \t\tres = min(res, dist(x, 1) + dist(1, y));\n    \t\n    \tlen = n - y;\n    \tif(len % d == 0)\n    \t\tres = min(res, dist(x, n) + dist(n, y));\n    \t\t\n    \tif(res == INF)\n    \t\tres = -1;\n    \t\n    \tcout << res << endl;\n\t}\n\t\n\treturn 0;\n}"
}