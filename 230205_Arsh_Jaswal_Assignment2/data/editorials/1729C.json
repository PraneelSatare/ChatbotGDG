{
    "solution": "1729C - Jumping on TilesIdea: MikeMirzayanov, Aris TutorialTutorial is loading... Solution#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\n#define forn(i, n) for (int i = 0; i < int(n); i++)\n\nvoid solve() {\n\n    string s;\n    cin >> s;\n\n    int n = s.size();\n    map<char, vector<int>> let_to_ind;\n\n    for (int i = 0; i < n; ++i) {\n        let_to_ind[s[i]].push_back(i);\n    }\n\n    int direction = (s[0] < s[n - 1]) ? 1 : -1;\n    vector<int> ans;\n\n    for (char c = s[0]; c != s[n - 1] + direction; c += direction) {\n        for (auto now : let_to_ind[c]) {\n            ans.push_back(now);\n        }\n    }\n\n    int cost = 0;\n    for (int i = 1; i < ans.size(); i++)\n        cost += abs(s[ans[i]] - s[ans[i - 1]]);\n\n    cout << cost << \" \" << ans.size() << '\\n';\n    for (auto now : ans) {\n        cout << now + 1 << \" \";\n    }\n    cout << '\\n';\n}\nint main() {\n    int tests;\n    cin >> tests;\n    forn(tt, tests) {\n        solve();\n    }\n}"
}