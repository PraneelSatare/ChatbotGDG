{
    "solution": "1527B1 - Palindrome Game (easy version)If the count of zeros in the string s is even then Bob always winProof   Bob can restrict Alice from performing operation 2 by making string s palindrome (if Alice changes s[i] to '1' then Bob will change s[nâˆ’i+1] to '1'). However, when the last '0' is remaining, Bob will reverse the string, eventually forcing Alice to perform the operation 1. This way Alice will spend 2 dollars more than Bob resulting in Bob's win.  If the count of zeros in the string s is odd then Alice always win except for the case of one '0'Proof   Alice will change s[n/2] from '0' to '1' and play with the same strategy as Bob did in the above case. This way Bob will spend 1 dollar more than Alice resulting in Alice's win.  Solution (DenOMINATOR) #include<bits/stdc++.h>\nusing namespace std;\n\n\nvoid solve(){\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tbool is_palindrome=1;\n\tint cnt_0 = 0;\n\tfor(int i=0;i<n;i++){\n\t\tcnt_0 += s[i]=='0';\n\t}\n\tif(cnt_0 == 1){\n\t\tcout << \"BOB\\n\";\n\t\treturn;\n\t}\n\tif(cnt_0%2){\n\t\tcout << \"ALICE\\n\";\n\t\treturn;\n\t}\n\tcout << \"BOB\\n\";\n\treturn;\n}\n\nsigned main()\n{\n\tint t;\n\tcin >> t;\n\twhile(t--){\n\t\tsolve();\n\t}\n    return 0;\n} Solution (shikhar7s) #include<bits/stdc++.h>\nusing namespace std;\n#define int long long int\n#define mp(a,b) make_pair(a,b)\n#define vi vector<int>\n#define mii map<int,int>\n#define mpi map<pair<int,int>,int>\n#define vp vector<pair<int,int> >\n#define pb(a) push_back(a)\n#define fr(i,n) for(i=0;i<n;i++)\n#define rep(i,a,n) for(i=a;i<n;i++)\n#define F first\n#define S second\n#define endl \"\\n\"\n#define fast std::ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n#define mod 1000000007\n#define dom 998244353\n#define sl(a) (int)a.length()\n#define sz(a) (int)a.size()\n#define all(a) a.begin(),a.end()\n#define pii pair<int,int> \n#define mini 2000000000000000000\n#define time_taken 1.0 * clock() / CLOCKS_PER_SEC\n//const long double pi = acos(-1);\n//mt19937_64 mt(chrono::steady_clock::now().time_since_epoch().count());\n//primes for hashing 937, 1013\ntemplate<typename T, typename U> static inline void amin(T &x, U y) \n{ \n    if (y < x) \n        x = y; \n}\ntemplate<typename T, typename U> static inline void amax(T &x, U y) \n{ \n    if (x < y) \n        x = y; \n}\nvoid shikhar7s(int cas)\n{\n    int n,i;\n    cin>>n;\n    string s;\n    cin>>s;\n    int f=1,z=0;\n    fr(i,n)\n    {\n        if(s[i]=='0')\n            z++;\n    }\n    int x=0;\n    fr(i,n/2)\n    {\n        if(s[i]!=s[n-1-i])\n        {\n            f=0;\n            x++;\n        }\n    }\n    if(f)\n    {\n        if(z==1||z%2==0)\n            cout<<\"BOB\"<<endl;\n        else\n            cout<<\"ALICE\"<<endl;\n    }\n    else\n    {\n        if(x==1&&z==2)\n            cout<<\"DRAW\"<<endl;\n        else\n            cout<<\"ALICE\"<<endl;\n    }\n}\nsigned main()\n{\n    fast;\n    //freopen(\"input.txt\", \"rt\", stdin);\n    //freopen(\"output.txt\", \"wt\", stdout);\n    int t=1;\n    cin>>t;\n    int cas=1;\n    while(cas<=t)\n    {\n    //cout<<\"Case #\"<<cas<<\": \";\n    shikhar7s(cas);\n    cas++;\n    }\n    return 0;\n}"
}