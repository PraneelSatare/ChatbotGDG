{
    "solution": "1894B - Two Out of ThreeBy symmetry, it doesn't matter which two conditions are satisfied. Let's assume it's the conditions (1,2) and (1,3). Then the elements with bi=2 and the elements with bi=3 should not intersect. Therefore, it is sufficient to assign bi=2 and bi=3 to only one element that is common with the elements of the form bi=1 in order to satisfy the conditions (1,2) and (1,3). And these elements must be distinct in order to not satisfy the condition (2,3). Thus, we obtain the necessary condition for the existence of an answer: the array must have at least two elements that occur more than once. It is easy to see that this condition is also sufficient by constructing an example: let x,y be two numbers that occur more than once in the array. Then we can assign ai=x→bi=2 to one of the occurrences, ai=y→bi=3 to one of the occurrence, and assign bi=1 to all other numbers, and this will be a suitable answer. Solution231849397 #include <bits/stdc++.h>\n \nusing namespace std;\nconst int N = 100;\n \nvoid solve() {\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  vector<int> b(n, 1);\n  vector<vector<int>> inds(N + 1);\n  for (int i = 0; i < n; i++) {\n    inds[a[i]].push_back(i);\n  }\n  int k = 2;\n  for (int x = 1; x <= N; x++) {\n    if ((int) inds[x].size() >= 2) {\n      b[inds[x][0]] = k;\n      k++;\n      if (k > 3) {\n        break;\n      }\n    }\n  }\n  if (k <= 3) {\n    cout << \"-1\\n\";\n  } else {\n    for (int i = 0; i < n; i++) {\n      cout << b[i] << ' ';\n    }\n    cout << '\\n';\n  }\n}\n \nsigned main() {\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n} Rate the problem Didnt solve \n\n    \n\n\n63\n\n\n\n Good problem \n\n    \n\n\n352\n\n\n\n Average problem \n\n    \n\n\n141\n\n\n\n Bad problem \n\n    \n\n\n117\n\n\n\n "
}