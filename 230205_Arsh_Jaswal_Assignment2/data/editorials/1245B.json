{
    "solution": "1245B - Restricted RPSLet A, B, C be the number of rocks, papers, and scissors in Bob's sequence, respectively. It is easy to see that Alice can win at most w:=min(A,b)+min(B,c)+min(C,a) hands.So if 2w<n, Alice can't win.Otherwise, Alice can always win. One way to construct a winning sequence of hands for Alice is as follows:   Create a sequence of length n.   For Bob's first min(A,b) rock hands, put a paper hand in the corresponding position in our sequence.   For Bob's first min(B,c) paper hands, put a scissors hand in the corresponding position in our sequence.   For Bob's first min(C,a) scissors hands, put a rock hand in the corresponding position in our sequence.   Just fill in the other elements of the sequence by the remaining hands that Alice has. By construction, Alice uses exactly a rock hands, b paper hands, and c scissors hands. Also, Alice beats Bob exactly w times. Since 2wâ‰¥n, Alice wins. Solution#include <vector>\n#include <string>\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\nusing namespace std;\n\nint main()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    \n    int q;\n    for (cin >> q; q--;)\n    {\n        int n;\n        cin >> n;\n        int a, b, c;\n        cin >> a >> b >> c;\n        string s;\n        cin >> s;\n        \n        vector<int> count(26);\n        for (char x : s)\n        \tcount[x - 'A']++;\n        \n        int wins = min(a, count['S' - 'A']) + min(b, count['R' - 'A']) + min(c, count['P' - 'A']);\n        \n        if (2 * wins < n)\n        {\n        \tcout << \"NO\" << '\\n';continue;\n        }\n        \n        cout << \"YES\" << '\\n';\n        string t;\n        for (int i = 0; i != n; ++i)\n        {\n        \tif (s[i] == 'S' && a)\n        \t{\n        \t\tt += 'R';\n        \t\ta--;\n        \t}\n        \telse if (s[i] == 'R' && b)\n        \t{\n        \t\tt += 'P';\n        \t\tb--;\n        \t}\n        \telse if (s[i] == 'P' && c)\n        \t{\n        \t\tt += 'S';\n        \t\tc--;\n        \t}\n        \telse\n        \t\tt += '_';\n        }\n        for (int i = 0; i != n; ++i)\n        {\n        \tif (t[i] != '_')\n        \t\tcontinue;\n        \t\n        \tif (a)\n        \t{\n        \t\tt[i] = 'R';\n        \t\ta--;\n        \t}\n        \telse if (b)\n        \t{\n        \t\tt[i] = 'P';\n        \t\tb--;\n        \t}\n        \telse\n        \t{\n        \t\tt[i] = 'S';\n        \t\tc--;\n        \t}\n        }\n        cout << t << '\\n';\n    }\n    \n    return 0;\n}"
}