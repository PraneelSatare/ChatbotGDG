1966B - Rectangle FillingIf either pair of opposite corners is the same color, then we can choose those corners to make everything the same color in one operation.Otherwise, we have four cases for the colors of the corners:  Notice that these are all essentially rotations of each other, so we can only consider the first case by symmetry:  If any of the squares in the first row are black, then we can color everything black in two operations:  In the same way, if any of the squares in the last row are white, then we can color everything white in two operations.Otherwise, the grid looks like this:  Notice that no matter how many operations we do, all squares in the top row will remain white, and all squares in the bottom row will remain black, so we can never make everything the same color.So, considering the four cases from earlier, the solution is:NO if all squares in the top row are the same color, all squares in the bottom row are the same color, and these two colors are differentNO if all squares in the leftmost column are the same color, all squares in the rightmost column are the same color, and these two colors are differentYES otherwiseComplexity: O(nm) Codet = int(input())

for tc in range(t):
    n, m = map(int, input().split())
    gr = []

    for i in range(n):
        gr.append(input())

    ans = "YES"

    if gr[0][0] != gr[n - 1][m - 1]:

        impossible = True
        for j in range(m - 1):
            if gr[0][j] != gr[0][j + 1] or gr[n - 1][j] != gr[n - 1][j + 1]:
                impossible = False

        if impossible:
            ans = "NO"

        impossible = True
        for i in range(n - 1):
            if gr[i][0] != gr[i + 1][0] or gr[i][m - 1] != gr[i + 1][m - 1]:
                impossible = False

        if impossible:
            ans = "NO"

    print(ans)