{
    "solution": "1195A - Drinks ChoosingIdea: budalnikPreparation: budalnik TutorialTutorial is loading... Solution// Created by Nikolay Budin\n\n#ifdef LOCAL\n#  define _GLIBCXX_DEBUG\n#else\n#  define cerr __get_ce\n#endif\n#include <bits/stdc++.h>\n#define ff first\n#define ss second\n#define szof(x) ((int)x.size())\n\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef unsigned long long ull;\nint const INF = (int)1e9 + 1e3;\nll const INFL = (ll)1e18 + 1e6;\n#ifdef LOCAL\n\tmt19937 tw(9450189);\n#else\n\tmt19937 tw(chrono::high_resolution_clock::now().time_since_epoch().count());\n#endif\nuniform_int_distribution<ll> ll_distr;\nll rnd(ll a, ll b) { return ll_distr(tw) % (b - a + 1) + a; }\n\n\nvoid solve() {\n\tint n, k;\n\tcin >> n >> k;\n\tmap<int, int> have;\n\tfor (int i = 0; i < n; ++i) {\n\t\tint num;\n\t\tcin >> num;\n\t\thave[num]++;\n\t}\n\tint cnt = 0;\n\tint ans = 0;\n\tfor (pii p : have) {\n\t\tcnt += p.ss % 2;\n\t\tans += p.ss / 2 * 2;\n\t}\n\tans += (cnt + 1) / 2;\n\tcout << ans << \"\\n\";\n}\n\n\nint main() {\n#ifdef LOCAL\n\tauto start_time = clock();\n\tcerr << setprecision(3) << fixed;\n#endif\n\tcout << setprecision(15) << fixed;\n\tios::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\n\tint test_count = 1;\n\t// cin >> test_count;\n\tfor (int test = 1; test <= test_count; ++test) {\n\t\tsolve();\n\t}\n\t\n#ifdef LOCAL\n\tauto end_time = clock();\n\tcerr << \"Execution time: \" << (end_time - start_time) * (int)1e3 / CLOCKS_PER_SEC << \" ms\\n\";\n#endif\n}"
}