{
    "solution": "1473B - String LCMWe should notice that if some string x is a multiple of string y, then |x| is a multiple of |y|. This fact leads us to the conclusion that |LCM(s,t)| should be a common multiple of |s| and |t|. Since we want to minimize the length of the string LCM(s,t), then its length is LCM(|s|,|t|).So we have to check that LCM(|s|,|t|)|s| copies of the string s equal to LCM(|s|,|t|)|t| copies of the string t. If such strings are equal, print them, otherwise, there is no solution. Solution (Neon)#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  auto mul = [](string s, int k) -> string {\n    string res = \"\";\n    while (k--) res += s;\n    return res;\n  };\n  \n  int tc;\n  cin >> tc;\n  while (tc--) {\n    string s, t;\n    cin >> s >> t;\n    int n = s.length(), m = t.length();\n    int g = __gcd(n, m);\n    if (mul(s, m / g) == mul(t, n / g))\n      cout << mul(s, m / g) << endl;\n    else\n      cout << \"-1\" << endl;\n  }\n}"
}