{
    "solution": "1864B-Swap and ReverseIdea : Amir_Parsa, chromate00 TutorialBy the first kind of operation, we already know that every odd index (same for the even ones) can be swapped with each other freely. Therefore, let us write down the values of the indices modulo 2. For example, if n is 10, the indices modulo 2 are [1,0,1,0,1,0,1,0,1,0]. Now, we consider the two cases.  When k is odd. We can find out that after reversing any subarray of length k, the indices modulo 2 do not change. So in this case, any series of the second operation is identical to some series of the first operation. Therefore, you should sort the odd indices and the even indices separately, and output the result of merging them into one string.  When k is even. Let us observe how we can swap two adjacent indices in this case. First, reverse [i,i+kâˆ’1], and then reverse [i+1,i+k]. If we do this on [1,0,1,0,1,0,1,0,1,0], assuming i=1 and k=6, the indices modulo 2 turn into [0,1,0,1,0,1,1,0,1,0], and then [0,1,1,0,1,0,1,0,1,0]. Using these two steps and some series of the first operation, we can see that we can swap any two adjacent indices as a result. And such a series of operation is always possible, as k<n. Therefore, we can sort the entire string, and output the result. solution#include <bits/stdc++.h>\n\n#define all(a) (a).begin(), (a).end()\n#define sz(a) (int)(a).size()\n#define pb push_back\n#define mp make_pair\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\n\nint main() {\n\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    \n    int tt;\n    cin >> tt;\n    while (tt--) {\n        int n, k;\n        cin >> n >> k;\n        string s;\n        cin >> s;\n        vector<char> odd, even;\n        for (int i = 0; i < n; ++i) {\n            if (i % 2 == 0) {\n                even.pb(s[i]);\n            } else {\n                odd.pb(s[i]);\n            }\n        }\n        sort(all(even));\n        sort(all(odd));\n        string ans1 = \"\";\n        for (int i = 0, j = 0; i < sz(even) || j < sz(odd); ++i, ++j) {\n            if (i < sz(even)) {\n                ans1 += even[i];\n            }\n            if (j < sz(odd)) {\n                ans1 += odd[i];\n            }\n        }\n        if (k % 2 == 0) {\n            sort(all(s));\n            cout << s << \"\\n\";\n            continue;\n        }\n        cout << ans1 << \"\\n\";\n    }\n\n}\n\n bonusTry to solve the problem if n=k was allowed."
}