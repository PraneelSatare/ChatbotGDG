{
    "solution": "1790D - MatryoshkasFirst, for each size, let's count cnts — the number of dolls of this size.Then, let's create a set, in which for each doll of size s we add the numbers s and s+1. This will allow you to process all the segments, as well as the dimensions adjacent to them.We will iterate over the set in ascending order of size. Let x be the number of matryoshkas of the current size, y — of the previous one considered (0 at the beginning). If the numbers do not match, then you need to close (if x<y), or open (if x>y) |x−y| segments. It is enough to add only the opening of the segments to the answer. Solution#include <iostream>\n#include <vector>\n#include <queue>\n#include <map>\n#include <set>\n\nusing namespace std;\n\nvoid solve() {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    map<int, int> cnt;\n    set<int> b;\n    for (int i = 0; i < n; ++i) {\n        cin >> a[i];\n        cnt[a[i]]++;\n        b.insert(a[i]);\n        b.insert(a[i] + 1);\n    }\n    int last = 0;\n    int res = 0;\n    for (auto x: b) {\n        int c = cnt[x];\n        res += max(0, c - last);\n        last = c;\n    }\n    cout << res << '\\n';\n}\n\nint main(int argc, char* argv[]) {\n    int t;\n    cin >> t;\n    for (int i = 0; i < t; ++i) {\n        solve();\n    }\n}"
}