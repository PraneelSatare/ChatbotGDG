1870B - Friendly Arrays TutorialNote that after performing the operation on bj, which has some bit set to 1, this bit will become 1 for all numbers in a (and will remain so, as a bit cannot change from 1 to 0 in the result of an OR operation). If n is even, then in the final XOR, this bit will become 0, as it will be equal to the XOR of an even number of ones. If n is odd, then this bit will be 1 in the final XOR.Therefore, if n is even, by performing the operation on bj, we set all the bits that are 1 in bj to 0 in the final XOR. If n is odd, we do the opposite and set these bits to 1. So, if n is even, the XOR does not increase when applying the operation, which means that to obtain the minimum possible XOR, we need to apply the operation to all the numbers in b, and the maximum XOR will be the original XOR. For odd n, it is the opposite: the minimum is the original XOR, and the maximum is obtained after applying the operation to all elements in b.To apply the operation to all elements in b, it is sufficient to calculate their bitwise OR and apply the operation to the array a with it.