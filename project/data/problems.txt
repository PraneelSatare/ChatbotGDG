
[Problem A - contest/2055]
Roaming through the alligator-infested Everglades, Florida Man encounters a most peculiar showdown.There are nn lilypads arranged in a row, numbered from 11 to nn from left to right. Alice and Bob are frogs initially positioned on distinct lilypads, aa and bb, respectively. They take turns jumping, starting with Alice. During a frog's turn, it can jump either one space to the left or one space to the right, as long as the destination lilypad exists. For example, on Alice's first turn, she can jump to either lilypad a−1a−1 or a+1a+1, provided these lilypads are within bounds. It is important to note that each frog must jump during its turn and cannot remain on the same lilypad.However, there are some restrictions:  The two frogs cannot occupy the same lilypad. This means that Alice cannot jump to a lilypad that Bob is currently occupying, and vice versa.  If a frog cannot make a valid jump on its turn, it loses the game. As a result, the other frog wins. Determine whether Alice can guarantee a win, assuming that both players play optimally. It can be proven that the game will end after a finite number of moves if both players play optimally.
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤5001≤t≤500). The description of the test cases follows. The first and only line of each test case contains three integers nn, aa, and bb (2≤n≤1002≤n≤100, 1≤a,b≤n1≤a,b≤n, a≠ba≠b) — the number of lilypads, and the starting positions of Alice and Bob, respectively.Note that there are no constraints on the sum of nn over all test cases.
OutputFor each test case, print a single line containing either "YES" or "NO", representing whether or not Alice has a winning strategy. You can output the answer in any case (upper or lower). For example, the strings "yEs", "yes", "Yes", and "YES" will be recognized as positive responses.
InputCopy52 1 23 3 14 2 35 2 47 6 2
InputCopy
Copy
5
2 1 2
3 3 1
4 2 3
5 2 4
7 6 2
OutputCopyNO
YES
NO
YES
YES

OutputCopy
Copy


[Problem B - contest/2055]
 As you'd expect, Florida is home to many bizarre magical forces, and Florida Man seeks to tame them.There are nn different types of magical materials, numbered from 11 to nn. Initially, you have aiai units of material ii for each ii from 11 to nn. You are allowed to perform the following operation:  Select a material ii (where 1≤i≤n1≤i≤n). Then, spend 11 unit of every other material jj (in other words, j≠ij≠i) to gain 11 unit of material ii. More formally, after selecting material ii, update array aa as follows: ai:=ai+1ai:=ai+1, and aj:=aj−1aj:=aj−1 for all jj where j≠ij≠i and 1≤j≤n1≤j≤n. Note that all ajaj must remain non-negative, i.e. you cannot spend resources you do not have. You are trying to craft an artifact using these materials. To successfully craft the artifact, you must have at least bibi units of material ii for each ii from 11 to nn. Determine if it is possible to craft the artifact by performing the operation any number of times (including zero).
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤1041≤t≤104). The description of the test cases follows. The first line of each test case contains a single integer nn (2≤n≤2⋅1052≤n≤2⋅105) — the number of types of materials.The second line of each test case contains nn integers a1,a2,…,ana1,a2,…,an (0≤ai≤1090≤ai≤109) — the amount of each material ii that you currently hold.The third line of each test case contains nn integers b1,b2,…,bnb1,b2,…,bn (0≤bi≤1090≤bi≤109) — the amount of each material ii needed to produce the artifact.It is guaranteed that the sum of nn over all test cases does not exceed 2⋅1052⋅105. 
OutputFor each test case, print a single line containing either "YES" or "NO", representing whether or not the artifact can be crafted.You can output the answer in any case (upper or lower). For example, the strings "yEs", "yes", "Yes", and "YES" will be recognized as positive responses.
InputCopy340 5 5 11 4 4 031 1 32 2 121 103 3
InputCopy
Copy
3
4
0 5 5 1
1 4 4 0
3
1 1 3
2 2 1
2
1 10
3 3
OutputCopyYES
NO
YES

OutputCopy
Copy


[Problem C - contest/2055]
 There are no mountains in Florida, and Florida Man cannot comprehend their existence. As such, he really needs your help with this one.In the wilderness lies a region of mountainous terrain represented as a rectangular grid with nn rows and mm columns. Each cell in the grid is identified by its position (i,j)(i,j), where ii is the row index and jj is the column index. The altitude of cell (i,j)(i,j) is denoted by ai,jai,j.However, this region has been tampered with. A path consisting of n+m−1n+m−1 cells, starting from the top-left corner (1,1)(1,1) and ending at the bottom-right corner (n,m)(n,m), has been cleared. For every cell (i,j)(i,j) along this path, the altitude ai,jai,j has been set to 00. The path moves strictly via downward (DD) or rightward (RR) steps.To restore the terrain to its original state, it is known that the region possessed a magical property before it was tampered with: all rows and all columns shared the same sum of altitudes. More formally, there exists an integer xx such that ∑mj=1ai,j=x∑j=1mai,j=x for all 1≤i≤n1≤i≤n, and ∑ni=1ai,j=x∑i=1nai,j=x for all 1≤j≤m1≤j≤m.Your task is to assign new altitudes to the cells on the path such that the above magical property is restored. It can be proven that a solution always exists. If there are multiple solutions that satisfy the property, any one of them may be provided.
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤1041≤t≤104). The description of the test cases follows. The first line of each test case contains two integers nn and mm (2≤n,m≤10002≤n,m≤1000) — the number of rows and columns in the grid.The second line of each test case contains a string ss of length n+m−2n+m−2 (si=Dsi=D or si=Rsi=R) — the steps the path makes from (1,1)(1,1) to (n,m)(n,m). The character DD represents a downward step, and RR represents a rightward step.The ii-th of the next nn lines each contain mm integers ai,1,ai,2,…,ai,mai,1,ai,2,…,ai,m (−106≤ai,j≤106−106≤ai,j≤106) — the altitude of each cell in the grid. It is guaranteed that if a cell (i,j)(i,j) lies on the path, then ai,j=0ai,j=0.It is guaranteed that the sum of n⋅mn⋅m over all test cases does not exceed 106106. 
OutputFor each test case, output nn lines of mm integers representing the restored grid of altitudes bi,jbi,j. The altitudes must satisfy −1015≤bi,j≤1015−1015≤bi,j≤1015, and additionally ai,j=bi,jai,j=bi,j if (i,j)(i,j) is not on the path. If multiple solutions exist, output any of them.
InputCopy43 3DRRD0 2 30 0 03 1 04 5DRRRRDD0 1 0 2 30 0 0 0 0-1 0 -3 -3 00 0 0 -1 02 3RRD0 0 00 1 05 5DDDDRRRR0 25 2 9 110 6 13 20 220 17 24 1 80 3 10 12 190 0 0 0 0
InputCopy
Copy
4
3 3
DRRD
0 2 3
0 0 0
3 1 0
4 5
DRRRRDD
0 1 0 2 3
0 0 0 0 0
-1 0 -3 -3 0
0 0 0 -1 0
2 3
RRD
0 0 0
0 1 0
5 5
DDDDRRRR
0 25 2 9 11
0 6 13 20 22
0 17 24 1 8
0 3 10 12 19
0 0 0 0 0
OutputCopy1 2 3
2 3 1
3 1 2
-6 1 0 2 3
7 -1 3 2 -11
-1 0 -3 -3 7
0 0 0 -1 1
0 -1 1
0 1 -1
18 25 2 9 11
4 6 13 20 22
15 17 24 1 8
21 3 10 12 19
7 14 16 23 5

OutputCopy
Copy


[Problem D - contest/2055]
 At his orange orchard, Florida Man receives yet another spam letter, delivered by a crow. Naturally, he's sending it back in the most inconvenient manner possible.A crow is sitting at position 00 of the number line. There are nn scarecrows positioned at integer coordinates a1,a2,…,ana1,a2,…,an along the number line. These scarecrows have been enchanted, allowing them to move left and right at a speed of 11 unit per second.The crow is afraid of scarecrows and wants to stay at least a distance of kk ahead of the nearest scarecrow positioned at or before it. To do so, the crow uses its teleportation ability as follows:  Let xx be the current position of the crow, and let yy be the largest position of a scarecrow such that y≤xy≤x. If x−y<kx−y<k, meaning the scarecrow is too close, the crow will instantly teleport to position y+ky+k. This teleportation happens instantly and continuously. The crow will keep checking for scarecrows positioned at or to the left of him and teleport whenever one gets too close (which could happen at non-integral times). Note that besides this teleportation ability, the crow will not move on its own.Your task is to determine the minimum time required to make the crow teleport to a position greater than or equal to ℓℓ, assuming the scarecrows move optimally to allow the crow to reach its goal. For convenience, you are asked to output twice the minimum time needed for the crow to reach the target position ℓℓ. It can be proven that this value will always be an integer.Note that the scarecrows can start, stop, or change direction at any time (possibly at non-integral times).
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤1041≤t≤104). The description of the test cases follows. The first line of each test case contains three integers n,k,ℓn,k,ℓ (1≤n≤2⋅1051≤n≤2⋅105, 1≤k≤ℓ≤1081≤k≤ℓ≤108) — the number of scarecrows, the teleportation distance, and the target position of the crow, respectively.The second line of each test case contains nn integers a1,a2,…,ana1,a2,…,an (0≤a1≤a2≤…≤an≤ℓ) — the initial positions of the n scarecrows.It is guaranteed that the sum of n over all test cases does not exceed 2⋅105. 
OutputFor each test case, output a single integer representing the twice the minimum time required for the crow to teleport to a position greater than or equal to ℓ.
InputCopy91 3 503 2 52 5 51 10 101010 1 100 1 2 3 4 5 6 7 8 92 1 20 02 1 20 22 1 30 22 2 41 19 12 543 3 8 24 25 27 29 34 53
InputCopy
Copy
9
1 3 5
0
3 2 5
2 5 5
1 10 10
10
10 1 10
0 1 2 3 4 5 6 7 8 9
2 1 2
0 0
2 1 2
0 2
2 1 3
0 2
2 2 4
1 1
9 12 54
3 3 8 24 25 27 29 34 53
OutputCopy4
5
20
0
2
1
2
2
7

OutputCopy
Copy


[Problem E - contest/2055]
 On the next new moon, the universe will reset, beginning with Florida. It's up to Florida Man to stop it, but he first needs to find an important item.There are n haystacks labelled from 1 to n, where haystack i contains ai haybales. One of the haystacks has a needle hidden beneath it, but you do not know which one. Your task is to move the haybales so that each haystack is emptied at least once, allowing you to check if the needle is hidden under that particular haystack.However, the process is not that simple. Once a haystack i is emptied for the first time, it will be assigned a height limit and can no longer contain more than bi haybales. More formally, a move is described as follows:  Choose two haystacks i and j. If haystack i has not been emptied before, or haystack i contains strictly less than bi haybales, you may move exactly 1 haybale from haystack j to haystack i. Note: Before a haystack is emptied, it has no height limit, and you can move as many haybales as you want onto that haystack.Compute the minimum number of moves required to ensure that each haystack is emptied at least once, or report that it is impossible.
InputEach test contains multiple test cases. The first line contains the number of test cases t (1≤t≤104). The description of the test cases follows. The first line of each test case contains a single integer n (2≤n≤5⋅105) — the number of haystacks.The i-th of the next n lines contains two integers ai and bi (1≤ai,bi≤109) — the initial number of haybales in the i-th haystack, and the height limit that it is assigned after it is emptied for the first time.It is guaranteed that the sum of n over all test cases does not exceed 5⋅105. 
OutputFor each test case, print a single integer — the minimum number of moves required to ensure that each haystack is emptied at least once. If it is not possible to empty each haystack at least once, output -1.
InputCopy723 52 4210 11 1031 34 31 135 42 41 1062 13 35 41 51 61 853 21 21 11 36 525 107 12
InputCopy
Copy
7
2
3 5
2 4
2
10 1
1 10
3
1 3
4 3
1 1
3
5 4
2 4
1 10
6
2 1
3 3
5 4
1 5
1 6
1 8
5
3 2
1 2
1 1
1 3
6 5
2
5 10
7 12
OutputCopy8
-1
8
9
14
15
19

OutputCopy
Copy


[Problem F - contest/2055]
 With the artifact in hand, the fabric of reality gives way to its true master — Florida Man.A polyomino is a connected∗ figure constructed by joining one or more equal 1×1 unit squares edge to edge. A polyomino is convex if, for any two squares in the polyomino that share the same row or the same column, all squares between them are also part of the polyomino. Below are four polyominoes, only the first and second of which are convex.  You are given a convex polyomino with n rows and an even area. For each row i from 1 to n, the unit squares from column li to column ri are part of the polyomino. In other words, there are ri−li+1 unit squares that are part of the polyomino in the i-th row: (i,li),(i,li+1),…,(i,ri−1),(i,ri).Two polyominoes are congruent if and only if you can make them fit exactly on top of each other by translating the polyominoes. Note that you are not allowed to rotate or reflect the polyominoes. Determine whether it is possible to partition the given convex polyomino into two disjoint connected polyominoes that are congruent to each other. The following examples illustrate a valid partition of each of the two convex polyominoes shown above:  The partitioned polyominoes do not need to be convex, and each unit square should belong to exactly one of the two partitioned polyominoes.∗A polyomino is connected if and only if for every two unit squares u≠v that are part of the polyomino, there exists a sequence of distinct squares s1,s2,…,sk, such that s1=u, sk=v, si are all part of the polyomino, and si,si+1 share an edge for each 1≤i≤k−1.
InputEach test contains multiple test cases. The first line contains the number of test cases t (1≤t≤104). The description of the test cases follows. The first line of each test case contains a single integer n (1≤n≤2⋅105) — the number of rows of the polyomino.The i-th of the next n lines contains two integers li and ri (1≤li≤ri≤109) — the range of columns that are part of the polyomino in the i-th row.It is guaranteed that the area of the polyomino is even. In other words, ∑ni=1ri−li+1≡0(mod2).It is guaranteed that the sum of n over all test cases does not exceed 2⋅105. 
OutputFor each test case, print a single line containing either "YES" or "NO", representing whether or not the polyomino can be partitioned as described in the problem.You can output the answer in any case (upper or lower). For example, the strings "yEs", "yes", "Yes", and "YES" will be recognized as positive responses.
InputCopy721 22 344 42 41 41 231 21 22 321 33 321 32 231 21 31 348 96 86 85 6
InputCopy
Copy
7
2
1 2
2 3
4
4 4
2 4
1 4
1 2
3
1 2
1 2
2 3
2
1 3
3 3
2
1 3
2 2
3
1 2
1 3
1 3
4
8 9
6 8
6 8
5 6
OutputCopyYES
YES
NO
NO
NO
NO
YES

OutputCopy
Copy


[Problem A - contest/2057]
One day, the schoolboy Mark misbehaved, so the teacher Sasha called him to the whiteboard.Sasha gave Mark a table with nn rows and mm columns. His task is to arrange the numbers 0,1,…,n⋅m−10,1,…,n⋅m−1 in the table (each number must be used exactly once) in such a way as to maximize the sum of MEX∗∗ across all rows and columns. More formally, he needs to maximize n∑i=1mex({ai,1,ai,2,…,ai,m})+m∑j=1mex({a1,j,a2,j,…,an,j}), where ai,j is the number in the i-th row and j-th column.Sasha is not interested in how Mark arranges the numbers, so he only asks him to state one number — the maximum sum of MEX across all rows and columns that can be achieved.∗The minimum excluded (MEX) of a collection of integers c1,c2,…,ck is defined as the smallest non-negative integer x which does not occur in the collection c. For example:   mex([2,2,1])=0, since 0 does not belong to the array.  mex([3,1,0,1])=2, since 0 and 1 belong to the array, but 2 does not.  mex([0,3,1,2])=4, since 0, 1, 2, and 3 belong to the array, but 4 does not. 
InputEach test contains multiple test cases. The first line contains a single integer t (1≤t≤1000) — the number of test cases. The description of the test cases follows.The first line of each test case contains two integers n and m (1≤n,m≤109) — the number of rows and columns in the table, respectively.
OutputFor each test case, output the maximum possible sum of mex across all rows and columns.
InputCopy31 12 23 5
InputCopy
Copy
3
1 1
2 2
3 5
OutputCopy2
3
6

OutputCopy
Copy


[Problem B - contest/2057]
Due to a shortage of teachers in the senior class of the "T-generation", it was decided to have a huge male gorilla conduct exams for the students. However, it is not that simple; to prove his competence, he needs to solve the following problem.For an array bb, we define the function f(b)f(b) as the smallest number of the following operations required to make the array bb empty:   take two integers ll and rr, such that l≤rl≤r, and let xx be the min(bl,bl+1,…,br)min(bl,bl+1,…,br); then  remove all such bibi that l≤i≤rl≤i≤r and bi=xbi=x from the array, the deleted elements are removed, the indices are renumerated. You are given an array aa of length nn and an integer kk. No more than kk times, you can choose any index ii (1≤i≤n1≤i≤n) and any integer pp, and replace aiai with pp.Help the gorilla to determine the smallest value of f(a)f(a) that can be achieved after such replacements.
InputEach test contains multiple test cases. The first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases. The description of the test cases follows.The first line of each set of input data contains two integers nn and kk (1≤n≤1051≤n≤105, 0≤k≤n0≤k≤n) — the length of the array aa and the maximum number of changes, respectively.The second line of each set of input data contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤1091≤ai≤109) — the array aa itself.It is guaranteed that the sum of the values of nn across all sets of input data does not exceed 105105.
OutputFor each set of input data, output a single integer on a separate line — the smallest possible value of f(a)f(a).
InputCopy61 0488433 12 3 25 31 2 3 4 57 04 7 1 3 2 4 111 43 2 1 4 4 3 4 2 1 3 35 51 2 3 4 5
InputCopy
Copy
6
1 0
48843
3 1
2 3 2
5 3
1 2 3 4 5
7 0
4 7 1 3 2 4 1
11 4
3 2 1 4 4 3 4 2 1 3 3
5 5
1 2 3 4 5
OutputCopy1
1
2
5
2
1

OutputCopy
Copy


[Problem C - contest/2057]
In the upcoming year, there will be many team olympiads, so the teachers of "T-generation" need to assemble a team of three pupils to participate in them. Any three pupils will show a worthy result in any team olympiad. But winning the olympiad is only half the battle; first, you need to get there...Each pupil has an independence level, expressed as an integer. In "T-generation", there is exactly one student with each independence levels from ll to rr, inclusive. For a team of three pupils with independence levels aa, bb, and cc, the value of their team independence is equal to (a⊕b)+(b⊕c)+(a⊕c)(a⊕b)+(b⊕c)+(a⊕c), where ⊕⊕ denotes the bitwise XOR operation. Your task is to choose any trio of students with the maximum possible team independence.
InputEach test contains multiple test cases. The first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases. The description of the test cases follows.The first line of each test case set contains two integers ll and rr (0≤l,r<2300≤l,r<230, r−l>1r−l>1) — the minimum and maximum independence levels of the students.
OutputFor each test case set, output three pairwise distinct integers a,ba,b, and cc, such that l≤a,b,c≤rl≤a,b,c≤r and the value of the expression (a⊕b)+(b⊕c)+(a⊕c)(a⊕b)+(b⊕c)+(a⊕c) is maximized. If there are multiple triples with the maximum value, any of them can be output.
InputCopy80 20 81 36 22128 13769 98115 1270 1073741823
InputCopy
Copy
8
0 2
0 8
1 3
6 22
128 137
69 98
115 127
0 1073741823
OutputCopy1 2 0
8 7 1
2 1 3
7 16 11
134 132 137
98 85 76
123 121 118
965321865 375544086 12551794

OutputCopy
Copy


[Problem D - contest/2057]
"T-Generation" has decided to purchase gifts for various needs; thus, they have nn different sweaters numbered from 11 to nn. The ii-th sweater has a size of aiai. Now they need to send some subsegment of sweaters to an olympiad. It is necessary that the sweaters fit as many people as possible, but without having to take too many of them.They need to choose two indices ll and rr (1≤l≤r≤n1≤l≤r≤n) to maximize the convenience equal to max(al,al+1,…,ar)−min(al,al+1,…,ar)−(r−l),max⁡(al,al+1,…,ar)−min⁡(al,al+1,…,ar)−(r−l), that is, the range of sizes minus the number of sweaters.Sometimes the sizes of the sweaters change; it is known that there have been qq changes, in each change, the size of the pp-th sweater becomes xx. Help the "T-Generation" team and determine the maximum convenience among all possible pairs (l,r)(l,r) initially, as well as after each size change.
InputEach test consists of several test cases. The first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases. The description of the test cases follows.The first line of each test case contains two integers nn and qq (1≤n,q≤2⋅1051≤n,q≤2⋅105) — the number of sweaters and the number of size changes.The second line of each test case contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤1091≤ai≤109) — the sizes of the sweaters.Each of the following qq lines of each test case contains two integers pp and xx (1≤p≤n1≤p≤n, 1≤x≤1091≤x≤109) — the next size change.It is guaranteed that the sum of the values of nn and the sum of the values of qq across all test cases do not exceed 2⋅1052⋅105.
OutputFor each test case, output the maximum value of convenience among all possible pairs (l,r)(l,r) before any actions, as well as after each size change.
InputCopy32 21 101 102 25 31 2 3 4 53 71 45 28 57 4 2 4 8 2 1 45 41 103 28 117 7
InputCopy
Copy
3
2 2
1 10
1 10
2 2
5 3
1 2 3 4 5
3 7
1 4
5 2
8 5
7 4 2 4 8 2 1 4
5 4
1 10
3 2
8 11
7 7
OutputCopy8
0
7
0
4
4
4
5
3
6
6
9
7

OutputCopy
Copy


[Problem E1 - contest/2057]
This is the easy version of the problem. The difference between the versions is that in this version, there is an additional constraint on mm. You can hack only if you solved all versions of this problem. Recently, the instructors of "T-generation" needed to create a training contest. They were missing one problem, and there was not a single problem on graphs in the contest, so they came up with the following problem.You are given a connected weighted undirected graph with nn vertices and mm edges, which does not contain self-loops or multiple edges.There are qq queries of the form (a,b,k)(a,b,k): among all paths from vertex aa to vertex bb, find the smallest kk-th maximum weight of edges on the path††.The instructors thought that the problem sounded very interesting, but there is one catch. They do not know how to solve it. Help them and solve the problem, as there are only a few hours left until the contest starts.†† Let w1≥w2≥…≥whw1≥w2≥…≥wh be the weights of all edges in a path, in non-increasing order. The kk-th maximum weight of the edges on this path is wkwk.
InputEach test contains multiple test cases. The first line contains a single integer tt (1≤t≤1001≤t≤100) — the number of test cases. The description of the test cases follows.The first line of each set of test case contains three integers n,mn,m and qq (2≤n≤4002≤n≤400, n−1≤m≤min(400,n⋅(n−1)2)n−1≤m≤min⁡(400,n⋅(n−1)2), 1≤q≤3⋅1051≤q≤3⋅105) — the number of vertices, the number of edges, and the number of questions, respectively.Each of the following mm lines of each set of test case contains three integers v,uv,u and ww (1≤v,u≤n1≤v,u≤n, 1≤w≤1091≤w≤109) — the ends of the next edge of the graph and its weight, respectively. It is guaranteed that the graph does not contain self-loops and multiple edges.Each of the following qq lines of each set of test case contains three integers a,ba,b and kk (1≤a,b≤n1≤a,b≤n, k≥1k≥1) — the next question. It is guaranteed that any path from vertex aa to vertex bb contains at least kk edges.It is guaranteed that the sum of the values of nn across all sets of test cases does not exceed 400400.It is guaranteed that the sum of the values of mm across all sets of test cases does not exceed 400400.It is guaranteed that the sum of the values of qq across all sets of test cases does not exceed 3⋅1053⋅105.
OutputFor each test case, output the answers to all questions.
InputCopy34 4 21 2 22 4 21 3 43 4 11 4 22 3 16 7 31 2 102 3 33 4 94 5 25 6 12 4 104 6 101 6 31 6 22 4 111 17 101 4 51 3 191 2 103 2 134 5 14 6 113 5 93 6 182 7 175 8 155 10 86 9 47 10 207 8 168 11 39 11 610 11 143 11 13 11 31 11 11 11 41 11 38 2 210 4 13 9 23 9 16 7 3
InputCopy
Copy
3
4 4 2
1 2 2
2 4 2
1 3 4
3 4 1
1 4 2
2 3 1
6 7 3
1 2 10
2 3 3
3 4 9
4 5 2
5 6 1
2 4 10
4 6 10
1 6 3
1 6 2
2 4 1
11 17 10
1 4 5
1 3 19
1 2 10
3 2 13
4 5 1
4 6 11
3 5 9
3 6 18
2 7 17
5 8 15
5 10 8
6 9 4
7 10 20
7 8 16
8 11 3
9 11 6
10 11 14
3 11 1
3 11 3
1 11 1
1 11 4
1 11 3
8 2 2
10 4 1
3 9 2
3 9 1
6 7 3
OutputCopy1 2
2 9 9
11 3 11 1 3 10 8 4 11 4

OutputCopy
Copy


[Problem E2 - contest/2057]
This is the hard version of the problem. The difference between the versions is that in this version, there is no additional constraint on mm. You can hack only if you solved all versions of this problem. Recently, the instructors of "T-generation" needed to create a training contest. They were missing one problem, and there was not a single problem on graphs in the contest, so they came up with the following problem.You are given a connected weighted undirected graph with nn vertices and mm edges, which does not contain self-loops or multiple edges.There are qq queries of the form (a,b,k)(a,b,k): among all paths from vertex aa to vertex bb, find the smallest kk-th maximum weight of edges on the path††.The instructors thought that the problem sounded very interesting, but there is one catch. They do not know how to solve it. Help them and solve the problem, as there are only a few hours left until the contest starts.†† Let w1≥w2≥…≥whw1≥w2≥…≥wh be the weights of all edges in a path, in non-increasing order. The kk-th maximum weight of the edges on this path is wkwk.
InputEach test contains multiple test cases. The first line contains a single integer tt (1≤t≤1001≤t≤100) — the number of test cases. The description of the test cases follows.The first line of each set of test case contains three integers n,mn,m and qq (2≤n≤4002≤n≤400, n−1≤m≤n⋅(n−1)2n−1≤m≤n⋅(n−1)2, 1≤q≤3⋅1051≤q≤3⋅105) — the number of vertices, the number of edges, and the number of questions, respectively.Each of the following mm lines of each set of test case contains three integers v,uv,u and ww (1≤v,u≤n1≤v,u≤n, 1≤w≤1091≤w≤109) — the ends of the next edge of the graph and its weight, respectively. It is guaranteed that the graph does not contain self-loops and multiple edges.Each of the following qq lines of each set of test case contains three integers a,ba,b and kk (1≤a,b≤n1≤a,b≤n, k≥1k≥1) — the next question. It is guaranteed that any path from vertex aa to vertex bb contains at least kk edges.It is guaranteed that the sum of the values of nn across all sets of test cases does not exceed 400400.It is guaranteed that the sum of the values of qq across all sets of test cases does not exceed 3⋅1053⋅105.
OutputFor each set of test case, output the answers to all questions.
InputCopy34 4 21 2 22 4 21 3 43 4 11 4 22 3 16 7 31 2 102 3 33 4 94 5 25 6 12 4 104 6 101 6 31 6 22 4 111 17 101 4 51 3 191 2 103 2 134 5 14 6 113 5 93 6 182 7 175 8 155 10 86 9 47 10 207 8 168 11 39 11 610 11 143 11 13 11 31 11 11 11 41 11 38 2 210 4 13 9 23 9 16 7 3
InputCopy
Copy
3
4 4 2
1 2 2
2 4 2
1 3 4
3 4 1
1 4 2
2 3 1
6 7 3
1 2 10
2 3 3
3 4 9
4 5 2
5 6 1
2 4 10
4 6 10
1 6 3
1 6 2
2 4 1
11 17 10
1 4 5
1 3 19
1 2 10
3 2 13
4 5 1
4 6 11
3 5 9
3 6 18
2 7 17
5 8 15
5 10 8
6 9 4
7 10 20
7 8 16
8 11 3
9 11 6
10 11 14
3 11 1
3 11 3
1 11 1
1 11 4
1 11 3
8 2 2
10 4 1
3 9 2
3 9 1
6 7 3
OutputCopy1 2
2 9 9
11 3 11 1 3 10 8 4 11 4

OutputCopy
Copy


[Problem F - contest/2057]
One day, the teachers of "T-generation" decided to instill discipline in the pupils, so they lined them up and made them calculate in order. There are a total of nn pupils, the height of the ii-th pupil in line is aiai. The line is comfortable, if for each ii from 11 to n−1n−1, the following condition holds: ai⋅2≥ai+1ai⋅2≥ai+1. Initially, the line is comfortable.The teachers do not like that the maximum height in the line is too small, so they want to feed the pupils pizza. You know that when a pupil eats one pizza, their height increases by 11. One pizza can only be eaten by only one pupil, but each pupil can eat an unlimited number of pizzas. It is important that after all the pupils have eaten their pizzas, the line is comfortable.The teachers have qq options for how many pizzas they will order. For each option kiki, answer the question: what is the maximum height max(a1,a2,…,an)max(a1,a2,…,an) that can be achieved if the pupils eat at most kiki pizzas.
InputEach test contains multiple test cases. The first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases. The description of the test cases follows.The first line of each set of test case contains two integers nn and qq (1≤n,q≤5⋅1041≤n,q≤5⋅104) — the number of pupils and the number of options for how many pizzas the teachers will order.The second line of each set of test case contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤1091≤ai≤109) — the heights of the pupils.It is guaranteed that initially, the line is comfortable.Each of the following qq lines of each set of input data contains one integer kiki (1≤ki≤1091≤ki≤109) — the next limit for how many pizzas the pupils can eat.It is guaranteed that the sum of the values of nn across all sets of input data does not exceed 5⋅1045⋅104.It is guaranteed that the sum of the values of qq across all sets of input data does not exceed 5⋅1045⋅104.
OutputFor each test case, for each limit for how many pizzas the pupils can eat, output the maximum value max(a1,a2,…,an)max(a1,a2,…,an) that can be achieved while ensuring that the line is comfortable.
InputCopy32 110 20106 73 1 2 4 5 6124816326410 41 2 4 8 16 32 64 128 256 51210100100010000
InputCopy
Copy
3
2 1
10 20
10
6 7
3 1 2 4 5 6
1
2
4
8
16
32
64
10 4
1 2 4 8 16 32 64 128 256 512
10
100
1000
10000
OutputCopy26
7 8 10 12 19 35 67
513 560 1011 10001

OutputCopy
Copy


[Problem G - contest/2057]
Every Saturday, Alexander B., a teacher of parallel X, writes a secret message to Alexander G., a teacher of parallel B, in the evening. Since Alexander G. is giving a lecture at that time and the message is very important, Alexander B. has to write this message on an interactive online board.The interactive online board is a grid consisting of nn rows and mm columns, where each cell is 1×11×1 in size. Some cells of this board are already filled in, and it is impossible to write a message in them; such cells are marked with the symbol ".", while the remaining cells are called free and are marked with the symbol "#".Let us introduce two characteristics of the online board:  ss is the number of free cells.  pp is the perimeter of the grid figure formed by the union of free cells. Let AA be the set of free cells. Your goal is to find a set of cells S⊆AS⊆A that satisfies the following properties:  |S|≤15⋅(s+p)|S|≤15⋅(s+p).  Any cell from AA either lies in SS or shares a side with some cell from SS. We can show that at least one set SS satisfying these properties exists; you are required to find any suitable one.
InputThe first line contains the number tt (1≤t≤800001≤t≤80000) — the number of test cases.In the first line of each test case, the numbers nn and mm (1≤n,m≤2⋅1061≤n,m≤2⋅106) — the dimensions of the grid are given.The following nn lines contain the description of the grid.It is guaranteed that the sum of n⋅mn⋅m across all test cases does not exceed 2⋅1062⋅106.
OutputFor each test case, output nn lines consisting of mm symbols, where each symbol encodes the state of the cell:  "#" — the cell is in AA but not in SS;  "S" — the cell is in both AA and SS;  "." — the cell is neither in AA nor in SS. 
InputCopy33 3.#.###.#.2 6############3 7###....#.#.######....
InputCopy
Copy
3
3 3
.#.
###
.#.
2 6
######
######
3 7
###....
#.#.###
###....
OutputCopy.#.
#S#
.#.
#S##S#
#S##S#
S#S....
#.#.S#S
S#S....

OutputCopy
Copy


[Problem H - contest/2057]
There are very long classes in the T-Generation. In one day, you need to have time to analyze the training and thematic contests, give a lecture with new material, and, if possible, also hold a mini-seminar. Therefore, there is a break where students can go to drink coffee and chat with each other.There are a total of n+2n+2 coffee machines located in sequentially arranged rooms along a long corridor. The coffee machines are numbered from 00 to n+1n+1, and immediately after the break starts, there are aiai students gathered around the ii-th coffee machine.The students are talking too loudly among themselves, and the teachers need to make a very important announcement. Therefore, they want to gather the maximum number of students around some single coffee machine. The teachers are too lazy to run around the corridors and gather the students, so they came up with a more sophisticated way to manipulate them:  At any moment, the teachers can choose room ii (1≤i≤n1≤i≤n) and turn off the lights there;  If there were xx students in that room, then after turning off the lights, ⌊12x⌋⌊12x⌋ students will go to room (i−1)(i−1), and ⌊12x⌋⌊12x⌋ other students will go to room (i+1)(i+1).  If xx was odd, then one student remains in the same room.  After that, the lights in room ii are turned back on. The teachers have not yet decided where they will gather the students, so for each ii from 11 to nn, you should determine what is the maximum number of students that can be gathered around the ii-th coffee machine.The teachers can turn off the lights in any rooms at their discretion, in any order, possibly turning off the lights in the same room multiple times.Note that the values of a0a0 and an+1an+1 do not affect the answer to the problem, so their values will not be given to you.
InputThe first line contains a single integer tt (1≤t≤100001≤t≤10000) — the number of test cases.In the first line of each test case, there is an integer nn (1≤n≤1061≤n≤106).In the second line of each test case, there are integers a1,…,ana1,…,an (0≤ai≤1090≤ai≤109) — the number of students around coffee machines numbered 1,2,…,n1,2,…,n.It is guaranteed that the sum of nn across all test cases does not exceed 106106.
OutputFor each test case, output nn integers b1,…,bnb1,…,bn, where bibi is the maximum number of students that can be around coffee machines number ii.
InputCopy328 052 2 2 2 250 0 9 0 0
InputCopy
Copy
3
2
8 0
5
2 2 2 2 2
5
0 0 9 0 0
OutputCopy8 4 
4 5 4 5 4 
4 6 9 6 4 

OutputCopy
Copy


[Problem A - contest/2053]
I would use a firework to announce, a wave to bid farewell, and a bow to say thanks: bygones are bygones; not only on the following path will I be walking leisurely and joyfully, but also the footsteps won't halt as time never leaves out flowing; for in the next year, we will meet again.— Cocoly1990, Goodbye 2022In his dream, Cocoly would go on a long holiday with no worries around him. So he would try out for many new things, such as... being a carpenter. To learn it well, Cocoly decides to become an apprentice of Master, but in front of him lies a hard task waiting for him to solve.Cocoly is given an array a1,a2,…,ana1,a2,…,an. Master calls a set of integers SS stable if and only if, for any possible uu, vv, and ww from the set SS (note that uu, vv, and ww do not necessarily have to be pairwise distinct), sticks of length uu, vv, and ww can form a non-degenerate triangle∗∗.Cocoly is asked to partition the array aa into several (possibly, 11 or nn) non-empty continuous subsegments††, such that: for each of the subsegments, the set containing all the elements in it is stable.Master wants Cocoly to partition aa in at least two different‡‡ ways. You have to help him determine whether it is possible.∗∗A triangle with side lengths xx, yy, and zz is called non-degenerate if and only if:   x+y>zx+y>z,  y+z>xy+z>x, and  z+x>yz+x>y. ††A sequence bb is a subsegment of a sequence cc if bb can be obtained from cc by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. ‡‡Two partitions are considered different if and only if at least one of the following holds:   the numbers of continuous subsegments split in two partitions are different;  there is an integer kk such that the lengths of the kk-th subsegment in two partitions are different. 
InputEach test contains multiple test cases. The first line of the input contains a single integer tt (1≤t≤2001≤t≤200) — the number of test cases. The description of test cases follows.The first line of each test case contains a single integer nn (2≤n≤2002≤n≤200) — the length of the array aa.The second line contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤1051≤ai≤105) — the elements in the array aa.
OutputFor each test case, print YESYES if there are at least two ways to partition aa, and NONO otherwise.You can output the answer in any case (upper or lower). For example, the strings yEsyEs, yesyes, YesYes, and YESYES will be recognized as positive responses.
InputCopy542 3 5 74115 9 2 2858 4 1 6 261 5 4 1 4 72100000 100000
InputCopy
Copy
5
4
2 3 5 7
4
115 9 2 28
5
8 4 1 6 2
6
1 5 4 1 4 7
2
100000 100000
OutputCopyYES
NO
NO
YES
YES

OutputCopy
Copy


[Problem B - contest/2053]
If it was so, then let's make it a deal...— MayDay, GentlenessEven after copying the paintings from famous artists for ten years, unfortunately, Eric is still unable to become a skillful impressionist painter. He wants to forget something, but the white bear phenomenon just keeps hanging over him.Eric still remembers nn pieces of impressions in the form of an integer array. He records them as w1,w2,…,wnw1,w2,…,wn. However, he has a poor memory of the impressions. For each 1≤i≤n1≤i≤n, he can only remember that li≤wi≤rili≤wi≤ri.Eric believes that impression ii is unique if and only if there exists a possible array w1,w2,…,wnw1,w2,…,wn such that wi≠wjwi≠wj holds for all 1≤j≤n1≤j≤n with j≠ij≠i.Please help Eric determine whether impression ii is unique for every 1≤i≤n1≤i≤n, independently for each ii. Perhaps your judgment can help rewrite the final story.
InputEach test contains multiple test cases. The first line of the input contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases. The description of test cases follows.The first line of each test case contains a single integer nn (1≤n≤2⋅1051≤n≤2⋅105) — the number of impressions.Then nn lines follow, the ii-th containing two integers lili and riri (1≤li≤ri≤2⋅n1≤li≤ri≤2⋅n) — the minimum possible value and the maximum possible value of wiwi.It is guaranteed that the sum of nn over all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case, output a binary string ss of length nn: for each 1≤i≤n1≤i≤n, if impression ii is unique, si=1si=1; otherwise, si=0si=0. Do not output spaces.
InputCopy521 11 141 31 31 31 363 62 21 21 13 42 273 44 44 41 32 51 42 234 54 45 5
InputCopy
Copy
5
2
1 1
1 1
4
1 3
1 3
1 3
1 3
6
3 6
2 2
1 2
1 1
3 4
2 2
7
3 4
4 4
4 4
1 3
2 5
1 4
2 2
3
4 5
4 4
5 5
OutputCopy00
1111
100110
1001111
011

OutputCopy
Copy


[Problem C - contest/2053]
I'm praying for owning a transparent heart; as well as eyes with tears more than enough...— Escape Plan, Brightest Star in the DarkIris looked at the stars and a beautiful problem emerged in her mind. She is inviting you to solve it so that a meteor shower is believed to form.There are nn stars in the sky, arranged in a row. Iris has a telescope, which she uses to look at the stars.Initially, Iris observes stars in the segment [1,n][1,n], and she has a lucky value of 00. Iris wants to look for the star in the middle position for each segment [l,r][l,r] that she observes. So the following recursive procedure is used:  First, she will calculate m=⌊l+r2⌋m=⌊l+r2⌋.  If the length of the segment (i.e. r−l+1r−l+1) is even, Iris will divide it into two equally long segments [l,m][l,m] and [m+1,r][m+1,r] for further observation.  Otherwise, Iris will aim the telescope at star mm, and her lucky value will increase by mm; subsequently, if l≠rl≠r, Iris will continue to observe two segments [l,m−1][l,m−1] and [m+1,r][m+1,r]. Iris is a bit lazy. She defines her laziness by an integer kk: as the observation progresses, she will not continue to observe any segment [l,r][l,r] with a length strictly less than kk. In this case, please predict her final lucky value.
InputEach test contains multiple test cases. The first line of input contains a single integer tt (1≤t≤1051≤t≤105) — the number of test cases. The description of test cases follows.The only line of each test case contains two integers nn and kk (1≤k≤n≤2⋅1091≤k≤n≤2⋅109).
OutputFor each test case, output a single integer — the final lucky value.
InputCopy67 211 355 135801 68919 648765432 1
InputCopy
Copy
6
7 2
11 3
55 13
5801 6
8919 64
8765432 1
OutputCopy12
18
196
1975581
958900
38416403456028

OutputCopy
Copy


[Problem D - contest/2053]
As a tester, when my solution has a different output from the example during testing, I suspect the author first.— Chris, a commentAlthough Iris occasionally sets a problem where the solution is possibly wrong, she still insists on creating problems with her imagination; after all, everyone has always been on the road with their stubbornness... And like ever before, Iris has set a problem to which she gave a wrong solution, but Chris is always supposed to save it! You are going to play the role of Chris now:  Chris is given two arrays aa and bb, both consisting of nn integers.  Iris is interested in the largest possible value of P=n∏i=1min(ai,bi)P=∏i=1nmin(ai,bi) after an arbitrary rearrangement of bb. Note that she only wants to know the maximum value of PP, and no actual rearrangement is performed on bb.  There will be qq modifications. Each modification can be denoted by two integers oo and xx (oo is either 11 or 22, 1≤x≤n1≤x≤n). If o=1o=1, then Iris will increase axax by 11; otherwise, she will increase bxbx by 11.  Iris asks Chris the maximum value of PP for q+1q+1 times: once before any modification, then after every modification.  Since PP might be huge, Chris only needs to calculate it modulo 998244353998244353. Chris soon worked out this problem, but he was so tired that he fell asleep. Besides saying thanks to Chris, now it is your turn to write a program to calculate the answers for given input data.Note: since the input and output are large, you may need to optimize them for this problem.For example, in C++, it is enough to use the following lines at the start of the main() function:int main() {    std::ios::sync_with_stdio(false);    std::cin.tie(nullptr); std::cout.tie(nullptr);}
InputEach test contains multiple test cases. The first line of input contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases. The description of test cases follows.The first line of each test case contains two integers nn and qq (1≤n≤2⋅1051≤n≤2⋅105, 1≤q≤2⋅1051≤q≤2⋅105) — the length of the array and the number of operations.The second line of each test case contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤5⋅1081≤ai≤5⋅108) — the array aa.The third line of each test case contains nn integers b1,b2,…,bnb1,b2,…,bn (1≤bi≤5⋅1081≤bi≤5⋅108) — the array bb.Then qq lines follow, each line contains two integers oo and xx (o∈{1,2}o∈{1,2}, 1≤x≤n1≤x≤n), representing an operation.It's guaranteed that the sum of nn and the sum of qq over all test cases does not exceed 4⋅1054⋅105, respectively.
OutputFor each test case, output q+1q+1 integers in a line, representing the answers that Chris will calculate, modulo 998244353998244353.
InputCopy43 41 1 23 2 11 32 31 12 16 81 4 2 7 3 57 6 5 6 3 32 51 61 51 51 52 32 31 613 87 7 6 6 5 5 5 2 2 3 4 5 11 4 1 9 6 6 9 1 5 1 3 8 42 22 112 42 41 71 12 121 55 310000000 20000000 30000000 40000000 5000000010000000 20000000 30000000 40000000 500000001 12 22 1
InputCopy
Copy
4
3 4
1 1 2
3 2 1
1 3
2 3
1 1
2 1
6 8
1 4 2 7 3 5
7 6 5 6 3 3
2 5
1 6
1 5
1 5
1 5
2 3
2 3
1 6
13 8
7 7 6 6 5 5 5 2 2 3 4 5 1
1 4 1 9 6 6 9 1 5 1 3 8 4
2 2
2 11
2 4
2 4
1 7
1 1
2 12
1 5
5 3
10000000 20000000 30000000 40000000 50000000
10000000 20000000 30000000 40000000 50000000
1 1
2 2
2 1
OutputCopy2 3 3 6 6
840 840 1008 1344 1680 2016 2016 2016 2352
2116800 2646000 3528000 3528000 3528000 4233600 4838400 4838400 4838400
205272023 205272023 205272023 264129429

OutputCopy
Copy


[Problem E - contest/2053]
Endless Repeating 7 Days— r-906, PanopticonThere is a tree consisting of nn vertices. Let a caterpillar be denoted by an integer pair (p,q)(p,q) (1≤p,q≤n1≤p,q≤n, p≠qp≠q): its head is at vertex pp, its tail is at vertex qq, and it dominates all the vertices on the simple path from pp to qq (including pp and qq). The caterpillar sequence of (p,q)(p,q) is defined as the sequence consisting only of the vertices on the simple path, sorted in the ascending order of the distance to pp.Nora and Aron are taking turns moving the caterpillar, with Nora going first. Both players will be using his or her own optimal strategy:  They will play to make himself or herself win;  However, if it is impossible, they will play to prevent the other person from winning (thus, the game will end in a tie). In Nora's turn, she must choose a vertex uu adjacent to vertex pp, which is not dominated by the caterpillar, and move all the vertices in it by one edge towards vertex uu∗∗. In Aron's turn, he must choose a vertex vv adjacent to vertex qq, which is not dominated by the caterpillar, and move all the vertices in it by one edge towards vertex vv. Note that the moves allowed to the two players are different.Whenever pp is a leaf††, Nora wins‡‡. Whenever qq is a leaf, Aron wins. If either initially both pp and qq are leaves, or after 1010010100 turns the game has not ended, the result is a tie.Please count the number of integer pairs (p,q)(p,q) with 1≤p,q≤n1≤p,q≤n and p≠qp≠q such that, if the caterpillar is initially (p,q)(p,q), Aron wins the game.∗∗In other words: Let the current caterpillar sequence be c1,c2,…,ckc1,c2,…,ck, then after the move, the new caterpillar sequence becomes d(u,c1),d(u,c2),…,d(u,ck)d(u,c1),d(u,c2),…,d(u,ck). Here, d(x,y)d(x,y) is the next vertex on the simple path from yy to xx.††In a tree, a vertex is called a leaf if and only if its degree is 11.‡‡Therefore, Nora never fails to choose a vertex uu when the game has not ended. The same goes for Aron.
InputEach test consists of multiple test cases. The first line contains a single integer tt (1≤t≤2⋅1041≤t≤2⋅104) — the number of test cases. The description of the test cases follows.The first line of each test case contains a single integer nn (2≤n≤2⋅1052≤n≤2⋅105) — the number of vertices in the tree.The following n−1n−1 lines each contain two integers uu and vv (1≤u,v≤n1≤u,v≤n), denoting an edge between vertices uu and vv. It is guaranteed that the given edges form a tree.It is guaranteed that the sum of nn over all test cases does not exceed 4⋅1054⋅105. 
OutputFor each test case, output a single line containing an integer: the number of integer pairs (p,q)(p,q) which make Aron win.
InputCopy521 251 21 32 42 5121 611 24 812 32 76 128 12 35 129 210 3101 22 33 44 55 64 76 84 94 10251 1611 226 143 120 1423 1725 1910 113 1810 62 214 511 124 99 138 66 13 78 1910 2415 131 23 417 8
InputCopy
Copy
5
2
1 2
5
1 2
1 3
2 4
2 5
12
1 6
11 2
4 8
12 3
2 7
6 12
8 1
2 3
5 12
9 2
10 3
10
1 2
2 3
3 4
4 5
5 6
4 7
6 8
4 9
4 10
25
1 16
11 22
6 14
3 1
20 14
23 17
25 19
10 11
3 18
10 6
2 21
4 5
11 12
4 9
9 13
8 6
6 1
3 7
8 19
10 24
15 13
1 2
3 4
17 8
OutputCopy0
6
40
27
171

OutputCopy
Copy


[Problem F - contest/2053]
3, 2, 1, ... We are the — RiOI Team!— Felix & All, Special Thanks 3  Peter: Good news: My problem T311013 is approved!  δδ: I'm glad my computer had gone out of battery so that I wouldn't have participated in wyrqwq's round and gained a negative delta.  Felix: [thumbs_up] The problem statement concerning a removed song!  Aquawave: Do I mourn my Chemistry?  E.Space: ahh?  Trine: Bread.  Iris: So why am I always testing problems? Time will pass, and we might meet again. Looking back at the past, everybody has lived the life they wanted.Aquawave has a matrix AA of size n×mn×m, whose elements can only be integers in the range [1,k][1,k], inclusive. In the matrix, some cells are already filled with an integer, while the rest are currently not filled, denoted by −1−1.You are going to fill in all the unfilled places in AA. After that, let cu,icu,i be the number of occurrences of element uu in the ii-th row. Aquawave defines the beauty of the matrix as∑u=1k∑i=1n−1cu,i⋅cu,i+1.∑u=1k∑i=1n−1cu,i⋅cu,i+1.You have to find the maximum possible beauty of AA after filling in the blanks optimally.
InputThe first line of input contains a single integer tt (1≤t≤2⋅1041≤t≤2⋅104) — the number of test cases. The description of test cases follows.The first line of each test case contains three integers nn, mm, and kk (2≤n≤2⋅1052≤n≤2⋅105, 2≤m≤2⋅1052≤m≤2⋅105, n⋅m≤6⋅105n⋅m≤6⋅105, 1≤k≤n⋅m1≤k≤n⋅m) — the number of rows and columns of the matrix AA, and the range of the integers in the matrix, respectively.Then nn lines follow, the ii-th line containing mm integers Ai,1,Ai,2,…,Ai,mAi,1,Ai,2,…,Ai,m (1≤Ai,j≤k1≤Ai,j≤k or Ai,j=−1Ai,j=−1) — the elements in AA.It is guaranteed that the sum of n⋅mn⋅m over all test cases does not exceed 6⋅1056⋅105.
OutputFor each test case, output a single integer — the maximum possible beauty.
InputCopy93 3 31 2 23 1 33 2 12 3 3-1 3 32 2 -13 3 6-1 -1 11 2 -1-1 -1 43 4 51 3 2 3-1 -1 2 -13 1 5 15 3 85 -1 21 8 -1-1 5 67 7 -14 4 46 6 5-1 -1 5 -1 -1 -1-1 -1 -1 -1 2 -1-1 1 3 3 -1 -1-1 1 -1 -1 -1 44 2 -1 -1 -1 4-1 -1 1 2 -1 -16 6 4-1 -1 -1 -1 1 -13 -1 2 2 4 -13 1 2 2 -1 -13 3 3 3 -1 2-1 3 3 -1 1 33 -1 2 2 3 -15 5 31 1 3 -1 12 2 -1 -1 3-1 -1 -1 2 -13 -1 -1 -1 2-1 1 2 3 -16 2 7-1 7-1 67 -1-1 -1-1 -12 2
InputCopy
Copy
9
3 3 3
1 2 2
3 1 3
3 2 1
2 3 3
-1 3 3
2 2 -1
3 3 6
-1 -1 1
1 2 -1
-1 -1 4
3 4 5
1 3 2 3
-1 -1 2 -1
3 1 5 1
5 3 8
5 -1 2
1 8 -1
-1 5 6
7 7 -1
4 4 4
6 6 5
-1 -1 5 -1 -1 -1
-1 -1 -1 -1 2 -1
-1 1 3 3 -1 -1
-1 1 -1 -1 -1 4
4 2 -1 -1 -1 4
-1 -1 1 2 -1 -1
6 6 4
-1 -1 -1 -1 1 -1
3 -1 2 2 4 -1
3 1 2 2 -1 -1
3 3 3 3 -1 2
-1 3 3 -1 1 3
3 -1 2 2 3 -1
5 5 3
1 1 3 -1 1
2 2 -1 -1 3
-1 -1 -1 2 -1
3 -1 -1 -1 2
-1 1 2 3 -1
6 2 7
-1 7
-1 6
7 -1
-1 -1
-1 -1
2 2
OutputCopy4
4
10
10
8
102
93
58
13

OutputCopy
Copy


[Problem G - contest/2053]
And I will: love the world that you've adored; wish the smile that you've longed for. Your hand in mine as we explore, please take me to tomorrow's shore. — Faye Wong, As WishedCocoly has a string tt of length mm, consisting of lowercase English letters, and he would like to split it into parts. He calls a pair of strings (x,y)(x,y) beautiful if and only if there exists a sequence of strings a1,a2,…,aka1,a2,…,ak, such that:  t=a1+a2+…+akt=a1+a2+…+ak, where ++ denotes string concatenation.  For each 1≤i≤k1≤i≤k, at least one of the following holds: ai=xai=x, or ai=yai=y. Cocoly has another string ss of length nn, consisting of lowercase English letters. Now, for each 1≤i<n1≤i<n, Cocoly wants you to determine whether the pair of strings (s1s2…si,si+1si+2…sn)(s1s2…si,si+1si+2…sn) is beautiful.Note: since the input and output are large, you may need to optimize them for this problem.For example, in C++, it is enough to use the following lines at the start of the main() function:int main() {    std::ios::sync_with_stdio(false);    std::cin.tie(nullptr); std::cout.tie(nullptr);}
InputEach test contains multiple test cases. The first line contains an integer TT (1≤T≤1051≤T≤105) — the number of test cases. The description of the test cases follows.The first line of each test case contains two integers nn and mm (2≤n≤m≤5⋅1062≤n≤m≤5⋅106) — the lengths of ss and the length of tt.The second line of each test case contains a single string s of length n, consisting only of lowercase English letters.The third line of each test case contains a single string t of length m, consisting only of lowercase English letters.It is guaranteed that the sum of m over all test cases does not exceed 107.
OutputFor each test case, output a single binary string r of length n−1: for each 1≤i<n, if the i-th pair is beautiful, ri=1; otherwise, ri=0. Do not output spaces.
InputCopy73 5abaababa4 10czzzczzzzzczzz5 14dreamdredreamamamam5 18tcccctcctccccctccctcccc7 11abababcabababababc7 26aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa19 29bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
InputCopy
Copy
7
3 5
aba
ababa
4 10
czzz
czzzzzczzz
5 14
dream
dredreamamamam
5 18
tcccc
tcctccccctccctcccc
7 11
abababc
abababababc
7 26
aaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaa
19 29
bbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbb
OutputCopy11
011
0010
0000
010100
111111
110010001100010011

OutputCopy
Copy


[Problem H - contest/2053]
I shall be looking for you who would be out of Existence.— HyuN, DisorderThere are always many repetitive tasks in life. Iris always dislikes them, so she refuses to repeat them. However, time cannot be turned back; we only have to move forward.Formally, Iris has an integer sequence a1,a2,…,an, where each number in the sequence is between 1 and w, inclusive. It is guaranteed that w≥2.Iris defines an operation as selecting two numbers ai,ai+1 satisfying ai=ai+1, and then changing them to two arbitrary integers within the range [1,w]. Iris does not like equality, so she must guarantee that ai≠ai+1 after the operation. Two identical pairs ai,ai+1 can be selected multiple times.Iris wants to know the maximum possible sum of all elements of a after several (possible, zero) operations, as well as the minimum number of operations required to achieve this maximum value.
InputEach test contains multiple test cases. The first line contains an integer t (1≤t≤105) — the number of test cases. The description of the test cases follows.The first line of each test case contains two integers n and w (1≤n≤2⋅105, 2≤w≤108) — the length of the array, and the maximum allowed value of the elements.The second line of each test case contains n integers a1,a2,…,an (1≤ai≤w) — the elements in the array.It is guaranteed that the sum of n over all test cases does not exceed 106.
OutputFor each test case, output two integers — the maximum possible sum of all elements of a and the minimum number of operations required, respectively.
InputCopy25 81 2 3 4 57 53 1 2 3 4 1 1
InputCopy
Copy
2
5 8
1 2 3 4 5
7 5
3 1 2 3 4 1 1
OutputCopy15 0
34 6

OutputCopy
Copy


[Problem I1 - contest/2053]
 You are the beginning of the letter, the development of a poem, and the end of a fairy tale.— ilem, Pinky PromiseThis is the easy version of the problem. The difference between the versions is that in this version, you need to compute the minimum length of the arrays. You can hack only if you solved all versions of this problem. Iris treasures an integer array a1,a2,…,ana1,a2,…,an. She knows this array has an interesting property: the maximum absolute value of all elements is less than or equal to the sum of all elements, that is, max(|ai|)≤∑aimax(|ai|)≤∑ai.Iris defines the boredom of an array as its maximum subarray∗∗ sum. Iris's birthday is coming, and Victor is going to send her another array b1,b2,…,bmb1,b2,…,bm as a gift. For some seemingly obvious reasons, he decides the array b1,b2,…,bmb1,b2,…,bm should have the following properties.  a1,a2,…,ana1,a2,…,an should be a subsequence†† of b1,b2,…,bmb1,b2,…,bm.  The two arrays have the same sum. That is, n∑i=1ai=m∑i=1bi∑i=1nai=∑i=1mbi.  The boredom of b1,b2,…,bmb1,b2,…,bm is the smallest possible.  Among the arrays with the smallest boredom, the length of the array bb (i.e., mm) is the smallest possible. And in this case, Iris will understand his regard as soon as possible! Even constrained as above, there are still too many possible gifts. So Victor asks you to compute the value of m of any array b1,b2,…,bm satisfying all the conditions above. He promises you: if you help him successfully, he will share a bit of Iris's birthday cake with you.Note: since the input is large, you may need to optimize it for this problem.For example, in C++, it is enough to use the following lines at the start of the main() function:int main() {    std::ios::sync_with_stdio(false);    std::cin.tie(nullptr); std::cout.tie(nullptr);}∗An array c is a subarray of an array d if c can be obtained from d by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. †A sequence c is a subsequence of a sequence d if c can be obtained from d by the deletion of several (possibly, zero or all) element from arbitrary positions. 
InputEach test contains multiple test cases. The first line of input contains an integer t (1≤t≤105) — the number of test cases. The description of test cases follows.The first line of each test case contains a single integer n (1≤n≤3⋅106) — the length of the array a1,a2,…,an.The second line of each test case contains n integers a1,a2,…,an (−109≤ai≤109) — the initial array. It is guaranteed that max(|ai|)≤∑ai.It is guaranteed that the sum of n over all test cases does not exceed 3⋅106.
OutputFor each test case, output a single line containing an integer: the length m of a valid array b.
InputCopy441 2 3 442 -3 2 2102 -7 6 3 -1 4 2 -5 8 -4204 -2 4 3 -2 1 5 2 3 6 -5 -1 -4 -2 -3 5 -3 1 -4 1
InputCopy
Copy
4
4
1 2 3 4
4
2 -3 2 2
10
2 -7 6 3 -1 4 2 -5 8 -4
20
4 -2 4 3 -2 1 5 2 3 6 -5 -1 -4 -2 -3 5 -3 1 -4 1
OutputCopy4
6
14
25

OutputCopy
Copy


[Problem I2 - contest/2053]
 Note that this statement is different to the version used in the official round. The statement has been corrected to a solvable version. In the official round, all submissions to this problem have been removed.This is the hard version of the problem. The difference between the versions is that in this version, you need to compute the sum of value of different arrays. You can hack only if you solved all versions of this problem. Iris treasures an integer array a1,a2,…,ana1,a2,…,an. She knows this array has an interesting property: the maximum absolute value of all elements is less than or equal to the sum of all elements, that is, max(|ai|)≤∑aimax(|ai|)≤∑ai.Iris defines the boredom of an array as its maximum subarray∗∗ sum. Iris's birthday is coming, and Victor is going to send her another array b1,b2,…,bmb1,b2,…,bm as a gift. For some seemingly obvious reasons, he decides the array b1,b2,…,bmb1,b2,…,bm should have the following properties.  a1,a2,…,ana1,a2,…,an should be a subsequence†† of b1,b2,…,bmb1,b2,…,bm.  The two arrays have the same sum. That is, ∑i=1nai=∑i=1mbi∑i=1nai=∑i=1mbi.  The boredom of b1,b2,…,bmb1,b2,…,bm is the smallest possible.  Among the arrays with the smallest boredom, the length of the array bb (i.e., mm) is the smallest possible. And in this case, Iris will understand his regard as soon as possible! For a possible array b1,b2,…,bmb1,b2,…,bm satisfying all the conditions above, Victor defines the value of the array as the number of occurrences of array aa as subsequences in array bb. That is, he counts the number of array c1,c2,…,cnc1,c2,…,cn that 1≤c1<c2<…<cn≤m1≤c1<c2<…<cn≤m and for all integer ii that 1≤i≤n1≤i≤n, bci=aibci=ai is satisfied, and let this be the value of array bb.Even constrained as above, there are still too many possible gifts. So Victor asks you to calculate the sum of value of all possible arrays b1,b2,…,bmb1,b2,…,bm. Since the answer may be large, Victor only needs the number modulo 998244353998244353. He promises you: if you help him successfully, he will share a bit of Iris's birthday cake with you.∗∗An array cc is a subarray of an array dd if cc can be obtained from dd by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. ††A sequence cc is a subsequence of a sequence dd if cc can be obtained from dd by the deletion of several (possibly, zero or all) element from arbitrary positions. 
InputEach test contains multiple test cases. The first line of input contains an integer tt (1≤t≤1051≤t≤105) — the number of test cases. The description of test cases follows.The first line of each test case contains a single integer nn (1≤n≤3⋅1061≤n≤3⋅106) — the length of the array a1,a2,…,ana1,a2,…,an.The second line of each test case contains nn integers a1,a2,…,ana1,a2,…,an (−109≤ai≤109−109≤ai≤109) — the initial array. It is guaranteed that max(|ai|)≤∑aimax(|ai|)≤∑ai.It is guaranteed that the sum of nn over all test cases does not exceed 3⋅1063⋅106.
OutputFor each test case, output a single line containing an integer: the sum of values of valid arrays b1,b2,…,bmb1,b2,…,bm, modulo 998244353998244353.
InputCopy541 2 3 442 -3 2 241 -2 2 1102 -7 6 3 -1 4 2 -5 8 -4204 -2 4 3 -2 1 5 2 3 6 -5 -1 -4 -2 -3 5 -3 1 -4 1
InputCopy
Copy
5
4
1 2 3 4
4
2 -3 2 2
4
1 -2 2 1
10
2 -7 6 3 -1 4 2 -5 8 -4
20
4 -2 4 3 -2 1 5 2 3 6 -5 -1 -4 -2 -3 5 -3 1 -4 1
OutputCopy1
2
2
20
1472

OutputCopy
Copy


[Problem A - contest/2043]
Initially, you have a coin with value nn. You can perform the following operation any number of times (possibly zero):  transform one coin with value xx, where xx is greater than 33 (x>3x>3), into two coins with value ⌊x4⌋⌊x4⌋. What is the maximum number of coins you can have after performing this operation any number of times?
InputThe first line contains one integer tt (1≤t≤1041≤t≤104) — the number of test cases.Each test case consists of one line containing one integer nn (1≤n≤10181≤n≤1018).
OutputFor each test case, print one integer — the maximum number of coins you can have after performing the operation any number of times.
InputCopy415161000000000000000000
InputCopy
Copy
4
1
5
16
1000000000000000000
OutputCopy1
2
4
536870912

OutputCopy
Copy


[Problem B - contest/2043]
Artem wrote the digit dd on the board exactly n!n! times in a row. So, he got the number dddddd…ddddddddd…ddd (exactly n!n! digits).Now he is curious about which odd digits from 11 to 99 divide the number written on the board.
InputThe first line contains a single integer tt (1≤t≤1001≤t≤100) — the number of test cases. The next tt test cases follow.Each test case consists of a single line containing two integers nn and dd (2≤n≤1092≤n≤109, 1≤d≤91≤d≤9).
OutputFor each test case, output the odd digits in ascending order that divide the number written on the board.
InputCopy32 67 18 5
InputCopy
Copy
3
2 6
7 1
8 5
OutputCopy1 3 
1 3 7 9 
1 3 5 7 9 

OutputCopy
Copy


[Problem C - contest/2043]
You are given an array aa of nn integers, where all elements except for at most one are equal to −1−1 or 11. The remaining element xx satisfies −109≤x≤109−109≤x≤109.Find all possible sums of subarrays of aa, including the empty subarray, whose sum is defined as 00. In other words, find all integers xx such that the array aa has at least one subarray (possibly empty) with sum equal to xx. A subarray is a contiguous subsegment of an array.Output these sums in ascending order. Each sum should be printed only once, even if it is achieved by multiple subarrays.
InputThe first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases. Then, tt test cases follow.Each test case consists of two lines:   The first line contains a single integer nn (1≤n≤2⋅1051≤n≤2⋅105) — the size of the array.  The second line contains nn integers a1,a2,…,ana1,a2,…,an (−109≤ai≤109−109≤ai≤109) — the elements of the array aa. In the array aa, there is at most one element that is neither 11 nor −1−1. Additional constraint on the input: the sum of nn over all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case, output two lines:   In the first line, print a single integer — the number of distinct subarray sums.  In the second line, print these sums in ascending order. Each sum should be printed only once, even if it is produced by multiple subarrays.
InputCopy551 -1 10 1 15-1 -1 -1 -1 -12-1 227 131 4 -1
InputCopy
Copy
5
5
1 -1 10 1 1
5
-1 -1 -1 -1 -1
2
-1 2
2
7 1
3
1 4 -1
OutputCopy8
-1 0 1 2 9 10 11 12 
6
-5 -4 -3 -2 -1 0 
4
-1 0 1 2 
4
0 1 7 8 
6
-1 0 1 3 4 5 

OutputCopy
Copy


[Problem D - contest/2043]
Given three integers ll, rr, and GG, find two integers AA and BB (l≤A≤B≤rl≤A≤B≤r) such that their greatest common divisor (GCD) equals GG and the distance |A−B||A−B| is maximized.If there are multiple such pairs, choose the one where AA is minimized. If no such pairs exist, output "-1 -1".
InputThe first line contains a single integer tt (1≤t≤1031≤t≤103) — the number of test cases. Then, tt test cases follow.Each test case consists of a single line containing three integers l,r,Gl,r,G (1≤l≤r≤10181≤l≤r≤1018; 1≤G≤10181≤G≤1018) — the range boundaries and the required GCD.
OutputFor each test case, output two integers AA and BB — the solution to the problem, or "-1 -1" if no such pair exists.
InputCopy44 8 24 8 34 8 45 7 6
InputCopy
Copy
4
4 8 2
4 8 3
4 8 4
5 7 6
OutputCopy4 6
-1 -1
4 8
6 6

OutputCopy
Copy


[Problem E - contest/2043]
You are given two matrices AA and BB of size n×mn×m, filled with integers between 00 and 109109. You can perform the following operations on matrix AA in any order and any number of times:  &=: choose two integers ii and xx (1≤i≤n1≤i≤n, x≥0x≥0) and replace each element in row ii with the result of the bitwise AND operation between xx and that element. Formally, for every j∈[1,m]j∈[1,m], the element Ai,jAi,j is replaced with Ai,j & xAi,j & x;   |=: choose two integers jj and xx (1≤j≤m1≤j≤m, x≥0x≥0) and replace each element in column jj with the result of the bitwise OR operation between xx and that element. Formally, for every i∈[1,n]i∈[1,n], the element Ai,jAi,j is replaced with Ai,j | xAi,j | x. The value of xx may be chosen differently for different operations.Determine whether it is possible to transform matrix AA into matrix BB using the given operations any number of times (including zero).
InputThe first line contains a single integer tt (1≤t≤1001≤t≤100) — the number of test cases. Then, tt test cases follow.Each test case is given as follows:   the first line contains two integers nn and mm (1≤n,m≤1031≤n,m≤103; n⋅m≤103n⋅m≤103) — the dimensions of the matrices AA and BB;  the following nn lines describe the matrix AA, where the ii-th line contains mm integers Ai,1,Ai,2,…,Ai,mAi,1,Ai,2,…,Ai,m (0≤Ai,j≤1090≤Ai,j≤109);  the following nn lines describe the matrix BB, where the ii-th line contains mm integers Bi,1,Bi,2,…,Bi,mBi,1,Bi,2,…,Bi,m (0≤Bi,j≤1090≤Bi,j≤109). 
OutputFor each test case, output Yes if it is possible to transform the matrix AA into the matrix BB; otherwise, output No. Each letter can be output in any case, upper or lower.
InputCopy41 112132 210 1042 4221 2121 212 274 1042 10621 8585 212 41 2 3 45 6 7 83 2 3 41 0 1 0
InputCopy
Copy
4
1 1
12
13
2 2
10 10
42 42
21 21
21 21
2 2
74 10
42 106
21 85
85 21
2 4
1 2 3 4
5 6 7 8
3 2 3 4
1 0 1 0
OutputCopyYes
Yes
No
Yes

OutputCopy
Copy


[Problem F - contest/2043]
Recall the rules of the game "Nim". There are n piles of stones, where the i-th pile initially contains some number of stones. Two players take turns choosing a non-empty pile and removing any positive (strictly greater than 0) number of stones from it. The player unable to make a move loses the game.You are given an array a, consisting of n integers. Artem and Ruslan decided to play Nim on segments of this array. Each of the q rounds is defined by a segment (li,ri), where the elements ali,ali+1,…,ari represent the sizes of the piles of stones.Before the game starts, Ruslan can remove any number of piles from the chosen segment. However, at least one pile must remain, so in a single round he can remove at most (ri−li) piles. He is allowed to remove 0 piles. After the removal, the game is played on the remaining piles within the segment.All rounds are independent: the changes made in one round do not affect the original array or any other rounds.Ruslan wants to remove as many piles as possible so that Artem, who always makes the first move, loses.For each round, determine:   the maximum number of piles Ruslan can remove;  the number of ways to choose the maximum number of piles for removal. Two ways are considered different if there exists an index i such that the pile at index i is removed in one way but not in the other. Since the number of ways can be large, output it modulo 998244353.If Ruslan cannot ensure Artem's loss in a particular round, output -1 for that round.
InputThe first line of input contains two integers n and q (1≤n,q≤105) — the size of the array and the number of segments for which the answers need to be calculated.The second line of input contains n integers a1,a2,…,an (0≤ai≤50) — the elements of the initial array.The i-th of the next q lines contains two integers li,ri (1≤li≤ri≤n) — the bounds of the segment on which the boys want to play the game during the i-th round.
OutputFor each round:   if Ruslan can win, print two integers — the maximum number of piles that can be removed, and the number of ways to remove the maximum number of piles, taken modulo 998244353;  otherwise print -1. 
InputCopy9 50 1 2 1 3 4 5 6 01 52 53 54 51 9
InputCopy
Copy
9 5
0 1 2 1 3 4 5 6 0
1 5
2 5
3 5
4 5
1 9
OutputCopy4 1
2 1
0 1
-1
8 2

OutputCopy
Copy


[Problem G - contest/2043]
You are given an array aa, consisting of nn integers. Your task is to process qq queries of two types:   1 p x1 p x — set the value of the element at index pp equal to xx;  2 l r2 l r — count the number of pairs of indices (i,j)(i,j) such that l≤i<j≤rl≤i<j≤r and ai≠ajai≠aj. Note that the queries in this task are encoded; each subsequent query can only be decoded after calculating the answer to the preceding query of the second type.
InputThe first line contains a single integer nn (1≤n≤1051≤n≤105).The second line contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤n1≤ai≤n).The third line contains a single integer qq (1≤q≤3⋅1051≤q≤3⋅105) — the number of queries.The next qq lines describe the queries in one of the following formats:   1 p′ x′ (0≤p′,x′≤n−1);  2 l′ r′ (0≤l′,r′≤n−1). The queries are encoded as follows: let last be the answer to the latest processed query of the second type (initially, last=0).  if the type of the query is 1, then p=((p′+last)modn)+1, x=((x′+last)modn)+1.  if the type of the query is 2, l=((l′+last)modn)+1, r=((r′+last)modn)+1. If l>r, swap their values. Don't forget to update the value of last after answering each query of the second type.Additional constraint on the input: there is at least one query of the second type.
OutputFor each query of the second type, print the answer — the number of pairs of indices (i,j) such that l≤i<j≤r and ai≠aj.
InputCopy31 2 352 0 21 0 22 0 21 2 02 1 0
InputCopy
Copy
3
1 2 3
5
2 0 2
1 0 2
2 0 2
1 2 0
2 1 0
OutputCopy3 2 0 
OutputCopy
Copy
InputCopy71 3 4 4 7 1 332 1 62 1 02 5 6
InputCopy
Copy
7
1 3 4 4 7 1 3
3
2 1 6
2 1 0
2 5 6
OutputCopy13 18 0 
OutputCopy
Copy


[Problem A - contest/2054]
A block is a fundamental data structure in the TON blockchain. It contains a list of transactions, messages, and the difference between the previous and next blockchain states.To reduce network load, efficient block compression is essential. In this contest, your task is to implement a compression algorithm that will be evaluated on blocks from the real TON blockchain.Everything in TON is composed of cells. If you participated in FunC contests, you might already be familiar with this concept. A cell is a data structure that contains up to 1023 bits and up to 4 references to other cells. A root cell, together with all cells reachable from it, forms a bag of cells. A block is represented as a bag of cells, and its structure can be formally described using TL-B schema (see links in the Notes section).The block is serialized to a byte string using the bag of cells serialization algorithm. This byte string is the representation of the block that serves as the input data in this problem.


[Problem A - contest/2051]
Monocarp and Stereocarp are preparing for the Olympiad. There are nn days left until the Olympiad. On the ii-th day, if Monocarp plans to practice, he will solve aiai problems. Similarly, if Stereocarp plans to practice on the same day, he will solve bibi problems.Monocarp can train on any day he wants. However, Stereocarp watches Monocarp and follows a different schedule: if Monocarp trained on day ii and i<ni<n, then Stereocarp will train on day (i+1)(i+1).Monocarp wants to organize his training process in a way that the difference between the number of problems he solves and the number of problems Stereocarp solves is as large as possible. Formally, Monocarp wants to maximize the value of (m−s)(m−s), where mm is the number of problems he solves, and ss is the number of problems Stereocarp solves. Help Monocarp determine the maximum possible difference in the number of solved problems between them.
InputThe first line contains a single integer tt (1≤t≤1031≤t≤103) — the number of test cases.The first line of each test case contains a single integer nn (1≤n≤1001≤n≤100).The second line contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤1001≤ai≤100).The third line contains nn integers b1,b2,…,bnb1,b2,…,bn (1≤bi≤100).
OutputFor each test case, print a single integer — the maximum possible difference between the number of problems Monocarp solves and the number of problems Stereocarp solves.
InputCopy423 22 115831 1 12 2 268 2 5 6 2 68 2 7 4 3 4
InputCopy
Copy
4
2
3 2
2 1
1
5
8
3
1 1 1
2 2 2
6
8 2 5 6 2 6
8 2 7 4 3 4
OutputCopy4
5
1
16

OutputCopy
Copy


[Problem B - contest/2051]
Monocarp decided to embark on a long hiking journey.He decided that on the first day he would walk a kilometers, on the second day he would walk b kilometers, on the third day he would walk c kilometers, on the fourth day, just like on the first, he would walk a kilometers, on the fifth day, just like on the second, he would walk b kilometers, on the sixth day, just like on the third, he would walk c kilometers, and so on.Monocarp will complete his journey on the day when he has walked at least n kilometers in total. Your task is to determine the day on which Monocarp will complete his journey.
InputThe first line contains one integer t (1 le t le 10^4) — the number of test cases.Each test case consists of one line containing four integers n, a, b, c (1 le n le 10^9; 1 le a, b, c le 10^6).
OutputFor each test case, output one integer — the day on which Monocarp will have walked at least n kilometers in total and will complete his journey.
Input412 1 5 36 6 7 416 3 4 11000000000 1 1 1
Input
4
12 1 5 3
6 6 7 4
16 3 4 1
1000000000 1 1 1
Output5
1
6
1000000000

Output


[Problem C - contest/2051]
Monocarp is preparing for his first exam at the university. There are nn different questions which can be asked during the exam, numbered from 11 to nn. There are mm different lists of questions; each list consists of exactly n−1n−1 different questions. Each list ii is characterized by one integer aiai, which is the index of the only question which is not present in the ii-th list. For example, if n=4n=4 and ai=3ai=3, the ii-th list contains questions [1,2,4][1,2,4].During the exam, Monocarp will receive one of these mm lists of questions. Then, the professor will make Monocarp answer all questions from the list. So, Monocarp will pass only if he knows all questions from the list.Monocarp knows the answers for kk questions q1,q2,…,qkq1,q2,…,qk. For each list, determine if Monocarp will pass the exam if he receives that list.
InputThe first line contains one integer tt (1≤t≤1041≤t≤104) — the number of test cases.Each test case consists of three lines:  the first line contains three integers nn, mm and kk (2≤n≤3⋅1052≤n≤3⋅105; 1≤m,k≤n1≤m,k≤n);  the second line contains mm distinct integers a1,a2,…,ama1,a2,…,am (1≤ai≤n1≤ai≤n; ai<ai+1ai<ai+1);  the third line contains kk distinct integers q1,q2,…,qkq1,q2,…,qk (1≤qi≤n1≤qi≤n; qi<qi+1qi<qi+1). Additional constraints on the input:  the sum of nn over all test cases does not exceed 3⋅1053⋅105. 
OutputFor each test case, print a string of mm characters. The ii-th character should be 1 if Monocarp passes the exam if he receives the ii-th question list, 0 if Monocarp won't pass.
InputCopy44 4 31 2 3 41 3 45 4 31 2 3 41 3 44 4 41 2 3 41 2 3 42 2 11 22
InputCopy
Copy
4
4 4 3
1 2 3 4
1 3 4
5 4 3
1 2 3 4
1 3 4
4 4 4
1 2 3 4
1 2 3 4
2 2 1
1 2
2
OutputCopy0100
0000
1111
10

OutputCopy
Copy


[Problem D - contest/2051]
You are given a sequence aa, consisting of nn integers, where the ii-th element of the sequence is equal to aiai. You are also given two integers xx and yy (x≤yx≤y).A pair of integers (i,j)(i,j) is considered interesting if the following conditions are met:  1≤i<j≤n1≤i<j≤n;  if you simultaneously remove the elements at positions ii and jj from the sequence aa, the sum of the remaining elements is at least xx and at most yy. Your task is to determine the number of interesting pairs of integers for the given sequence aa.
InputThe first line contains one integer tt (1≤t≤1041≤t≤104) — the number of test cases.Each test case consists of two lines:  The first line contains three integers n,x,yn,x,y (3≤n≤2⋅1053≤n≤2⋅105, 1≤x≤y≤2⋅10141≤x≤y≤2⋅1014);  The second line contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤1091≤ai≤109). Additional constraint on the input: the sum of nn across all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case, output one integer — the number of interesting pairs of integers for the given sequence aa.
InputCopy74 8 104 6 3 66 22 274 9 6 3 4 53 8 103 2 13 1 12 3 43 3 63 2 14 4 123 3 2 16 8 81 1 2 2 2 3
InputCopy
Copy
7
4 8 10
4 6 3 6
6 22 27
4 9 6 3 4 5
3 8 10
3 2 1
3 1 1
2 3 4
3 3 6
3 2 1
4 4 12
3 3 2 1
6 8 8
1 1 2 2 2 3
OutputCopy4
7
0
0
1
5
6

OutputCopy
Copy


[Problem E - contest/2051]
A batch of Christmas trees has arrived at the largest store in Berland. nn customers have already come to the store, wanting to buy them.Before the sales begin, the store needs to determine the price for one tree (the price is the same for all customers). To do this, the store has some information about each customer.For the ii-th customer, two integers aiai and bibi are known, which define their behavior:   if the price of the product is at most aiai, the customer will buy a tree and leave a positive review;  otherwise, if the price of the product is at most bibi, the customer will buy a tree but leave a negative review;  otherwise, the customer will not buy a tree at all. Your task is to calculate the maximum possible earnings for the store, given that it can receive no more than kk negative reviews.
InputThe first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases.The first line of each test case contains two integers nn and kk (1≤n≤2⋅1051≤n≤2⋅105; 0≤k≤n0≤k≤n).The second line contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤2⋅1091≤ai≤2⋅109).The third line contains nn integers b1,b2,…,bnb1,b2,…,bn (1≤bi≤2⋅1091≤bi≤2⋅109; ai<biai<bi).Additional constraint on the input: the sum of nn over all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case, print a single integer — the maximum possible earnings for the store, given that it can receive no more than kk negative reviews.
InputCopy52 02 13 41 1253 31 5 23 6 44 32 3 2 83 7 3 93 12 9 512 14 9
InputCopy
Copy
5
2 0
2 1
3 4
1 1
2
5
3 3
1 5 2
3 6 4
4 3
2 3 2 8
3 7 3 9
3 1
2 9 5
12 14 9
OutputCopy2
5
9
14
15

OutputCopy
Copy


[Problem F - contest/2051]
Consider a deck of n cards. The positions in the deck are numbered from 1 to n from top to bottom. A joker is located at position m.q operations are applied sequentially to the deck. During the i-th operation, you need to take the card at position a_i and move it either to the beginning or to the end of the deck. For example, if the deck is [2, 1, 3, 5, 4], and a_i=2, then after the operation the deck will be either [1, 2, 3, 5, 4] (the card from the second position moved to the beginning) or [2, 3, 5, 4, 1] (the card from the second position moved to the end).Your task is to calculate the number of distinct positions where the joker can be after each operation.
InputThe first line contains a single integer t (1 le t le 10^4) — the number of test cases.The first line of each test case contains three integers n, m, and q (2 le n le 10^9; 1 le m le n; 1 le q le 2 cdot 10^5).The second line contains q integers a_1, a_2, dots, a_q (1 le a_i le n).Additional constraint on the input: the sum of q over all test cases does not exceed 2 cdot 10^5.
OutputFor each test case, print q integers — the number of distinct positions where the joker can be after each operation.
InputCopy56 5 31 2 32 1 42 1 1 25 3 133 2 42 1 1 118 15 413 15 1 16
InputCopy
Copy
5
6 5 3
1 2 3
2 1 4
2 1 1 2
5 3 1
3
3 2 4
2 1 1 1
18 15 4
13 15 1 16
OutputCopy2 3 5 
2 2 2 2 
2 
2 3 3 3 
2 4 6 8 

OutputCopy
Copy


[Problem G - contest/2051]
Suppose you play a game where the game field looks like a strip of 1×1091×109 square cells, numbered from 11 to 109109.You have nn snakes (numbered from 11 to nn) you need to place into some cells. Initially, each snake occupies exactly one cell, and you can't place more than one snake into one cell. After that, the game starts.The game lasts for qq seconds. There are two types of events that may happen each second:   snake sisi enlarges: if snake sisi occupied cells [l,r][l,r], it enlarges to a segment [l,r+1][l,r+1];  snake sisi shrinks: if snake sisi occupied cells [l,r][l,r], it shrinks to a segment [l+1,r][l+1,r]. Each second, exactly one of the events happens.If at any moment of time, any snake runs into some obstacle (either another snake or the end of the strip), you lose. Otherwise, you win with the score equal to the maximum cell occupied by any snake so far.What is the minimum possible score you can achieve?
InputThe first line contains two integers nn and qq (1≤n≤201≤n≤20; 1≤q≤2⋅1051≤q≤2⋅105) — the number of snakes and the number of events. Next qq lines contain the description of events — one per line.The ii-th line contains   either "sisi +" (1≤si≤n1≤si≤n) meaning that the sisi-th snake enlarges  or "sisi -" (1≤si≤n1≤si≤n) meaning that the sisi-th snake shrinks. Additional constraint on the input: the given sequence of events is valid, i. e. a snake of length 11 never shrinks.
OutputPrint one integer — the minimum possible score.
InputCopy3 61 +1 -3 +3 -2 +2 -
InputCopy
Copy
3 6
1 +
1 -
3 +
3 -
2 +
2 -
OutputCopy4

OutputCopy
Copy
InputCopy5 135 +3 +5 -2 +4 +3 +5 +5 -2 +3 -3 +3 -2 +
InputCopy
Copy
5 13
5 +
3 +
5 -
2 +
4 +
3 +
5 +
5 -
2 +
3 -
3 +
3 -
2 +
OutputCopy11

OutputCopy
Copy


[Problem A - contest/2049]
 Evirir the dragon snuck into a wizard's castle and found a mysterious contraption, and their playful instincts caused them to play with (destroy) it...Evirir the dragon found an array a1,a2,…,ana1,a2,…,an of nn non-negative integers.In one operation, they can choose a non-empty subarray∗∗ bb of aa and replace it with the integer mex(b)mex⁡(b)††. They want to use this operation any number of times to make aa only contain zeros. It can be proven that this is always possible under the problem constraints.What is the minimum number of operations needed?∗∗An array cc is a subarray of an array dd if cc can be obtained from dd by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. ††The minimum excluded (MEX) of a collection of integers f1,f2,…,fkf1,f2,…,fk is defined as the smallest non-negative integer xx which does not occur in the collection ff. 
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤2001≤t≤200). The description of the test cases follows. The first line of each test case contains a single integer nn (1≤n≤501≤n≤50), the length of aa.The second line of each test case contains nn space-separated integers, a1,a2,…,ana1,a2,…,an (0≤ai≤1000≤ai≤100).It is guaranteed that the sum of nn over all test cases does not exceed 500500. 
OutputFor each test case, output a single integer on a line, the minimum number of operations needed to make aa contain only zeros.
InputCopy1040 1 2 360 0 0 0 0 051 0 1 0 153 1 4 1 543 2 1 079 100 0 89 12 2 340 3 9 070 7 0 2 0 7 01020 1
InputCopy
Copy
10
4
0 1 2 3
6
0 0 0 0 0 0
5
1 0 1 0 1
5
3 1 4 1 5
4
3 2 1 0
7
9 100 0 89 12 2 3
4
0 3 9 0
7
0 7 0 2 0 7 0
1
0
2
0 1
OutputCopy1
0
2
1
1
2
1
2
0
1

OutputCopy
Copy


[Problem B - contest/2049]
 Cats are attracted to pspspsps, but Evirir, being a dignified dragon, is only attracted to pspspsps with oddly specific requirements...Given a string s=s1s2…sns=s1s2…sn of length nn consisting of characters p, s, and . (dot), determine whether a permutation∗∗ pp of length nn exists, such that for all integers ii (1≤i≤n1≤i≤n):   If sisi is p, then [p1,p2,…,pi][p1,p2,…,pi] forms a permutation (of length ii);  If sisi is s, then [pi,pi+1,…,pn][pi,pi+1,…,pn] forms a permutation (of length n−i+1n−i+1);  If sisi is ., then there is no additional restriction. ∗∗A permutation of length nn is an array consisting of nn distinct integers from 11 to nn in arbitrary order. For example, [2,3,1,5,4] is a permutation, but [1,2,2] is not a permutation (2 appears twice in the array), and [1,3,4] is also not a permutation (n=3 but there is 4 in the array). 
InputEach test contains multiple test cases. The first line contains the number of test cases t (1≤t≤104). The description of the test cases follows. The first line of each test case contains a single integer n (1≤n≤500), the length of s.The second line of each test case contains a string s of length n that consists of the characters p, s, and ..It is guaranteed that the sum of n over all test cases does not exceed 5000. 
OutputFor each test case, output YES or NO on a line. Output YES if there is such a permutation and NO otherwise.You can output the answer in any case (upper or lower). For example, the strings "yEs", "yes", "Yes", and "YES" will be recognized as positive responses.
InputCopy94s.sp6pss..s5ppppp2sp4.sp.8psss....1.8pspspsps20....................
InputCopy
Copy
9
4
s.sp
6
pss..s
5
ppppp
2
sp
4
.sp.
8
psss....
1
.
8
pspspsps
20
....................
OutputCopyYES
NO
YES
YES
NO
NO
YES
NO
YES

OutputCopy
Copy


[Problem C - contest/2049]
 Evirir the dragon has many friends. They have 3 friends! That is one more than the average dragon.You are given integers nn, xx, and yy. There are nn dragons sitting in a circle. The dragons are numbered 1,2,…,n1,2,…,n. For each ii (1≤i≤n1≤i≤n), dragon ii is friends with dragon i−1i−1 and i+1i+1, where dragon 00 is defined to be dragon nn and dragon n+1n+1 is defined to be dragon 11. Additionally, dragons xx and yy are friends with each other (if they are already friends, this changes nothing). Note that all friendships are mutual.Output nn non-negative integers a1,a2,…,ana1,a2,…,an such that for each dragon i (1≤i≤n), the following holds:   Let f1,f2,…,fk be the friends of dragon i. Then ai=mex(af1,af2,…,afk).∗ ∗The minimum excluded (MEX) of a collection of integers c1,c2,…,cm is defined as the smallest non-negative integer t which does not occur in the collection c. 
InputEach test contains multiple test cases. The first line contains the number of test cases t (1≤t≤104). The description of the test cases follows. The first and only line of each test case contains three integers n, x, y (3≤n≤2⋅105, 1≤x<y≤n).It is guaranteed that the sum of n over all test cases does not exceed 2⋅105.  
OutputFor each test case, output n space-separated non-negative integers a1,a2,…,an (0≤ai≤109) on a line that satisfy the condition in the statement. If there are multiple solutions, print any of them. It can be proven that under the problem constraints, a solution with 0≤ai≤109 always exists.
InputCopy75 1 34 2 46 3 57 3 63 2 35 1 56 2 5
InputCopy
Copy
7
5 1 3
4 2 4
6 3 5
7 3 6
3 2 3
5 1 5
6 2 5
OutputCopy0 2 1 0 1
1 2 1 0
1 2 0 1 2 0
0 1 2 0 1 0 1
2 0 1
1 0 2 1 0
0 1 2 0 2 1

OutputCopy
Copy


[Problem D - contest/2049]
 After having fun with a certain contraption and getting caught, Evirir the dragon decides to put their magical skills to good use — warping reality to escape fast!You are given a grid with nn rows and mm columns of non-negative integers and an integer kk. Let (i,j)(i,j) denote the cell in the ii-th row from the top and jj-th column from the left (1≤i≤n1≤i≤n, 1≤j≤m1≤j≤m). For every cell (i,j)(i,j), the integer ai,jai,j is written on the cell (i,j)(i,j).You are initially at (1,1)(1,1) and want to go to (n,m)(n,m). You may only move down or right. That is, if you are at (i,j)(i,j), you can only move to (i+1,j)(i+1,j) or (i,j+1)(i,j+1) (if the corresponding cell exists). Before you begin moving, you may do the following operation any number of times:   Choose an integer ii between 11 and n and cyclically shift row i to the left by 1. Formally, simultaneously set ai,j to ai,(jmodm)+1 for all integers j (1≤j≤m).  Note that you may not do any operation after you start moving.After moving from (1,1) to (n,m), let x be the number of operations you have performed before moving, and let y be the sum of the integers written on visited cells (including (1,1) and (n,m)). Then the cost is defined as kx+y.Find the minimum cost to move from (1,1) to (n,m).
InputEach test contains multiple test cases. The first line contains the number of test cases t (1≤t≤104). The description of the test cases follows. The first line contains three space-separated integers n, m, and k (1≤n,m≤200, 0≤k≤109).Then, n lines follow. The i-th line contains m space-separated integers, ai,1,ai,2,…,ai,m (0≤ai,j≤109).It is guaranteed that the sum of n⋅m over all test cases does not exceed 5⋅104. 
OutputFor each test case, output a single integer, the minimum cost to move from (1,1) to (n,m).
InputCopy53 3 1003 4 95 2 40 101 1013 4 110 0 0 100 0 10 010 10 0 101 1 343 2 31 23 65 410 10 1458 49 25 12 89 69 8 49 71 2345 27 65 59 36 100 73 23 5 8482 91 54 92 53 15 43 46 11 6561 69 71 87 67 72 51 42 55 801 64 8 54 61 70 47 100 84 5086 93 43 51 47 35 56 20 33 61100 59 5 68 15 55 69 8 8 6033 61 20 79 69 51 23 24 56 2867 76 3 69 58 79 75 10 65 636 64 73 79 17 62 55 53 61 58
InputCopy
Copy
5
3 3 100
3 4 9
5 2 4
0 101 101
3 4 1
10 0 0 10
0 0 10 0
10 10 0 10
1 1 3
4
3 2 3
1 2
3 6
5 4
10 10 14
58 49 25 12 89 69 8 49 71 23
45 27 65 59 36 100 73 23 5 84
82 91 54 92 53 15 43 46 11 65
61 69 71 87 67 72 51 42 55 80
1 64 8 54 61 70 47 100 84 50
86 93 43 51 47 35 56 20 33 61
100 59 5 68 15 55 69 8 8 60
33 61 20 79 69 51 23 24 56 28
67 76 3 69 58 79 75 10 65 63
6 64 73 79 17 62 55 53 61 58
OutputCopy113
6
4
13
618

OutputCopy
Copy


[Problem E - contest/2049]
 You, a wizard whose creation was destroyed by a dragon, are determined to hunt it down with a magical AOE tracker. But it seems to be toyed with...This is an interactive problem.There is a hidden binary array aa of length nn (nn is a power of 2) and a hidden integer k (2≤k≤n−1)k (2≤k≤n−1). The array aa contains exactly one 1 (and all other elements are 0). For two integers ll and rr (1≤l≤r≤n1≤l≤r≤n), define the range sum s(l,r)=al+al+1+⋯+ars(l,r)=al+al+1+⋯+ar.You have a magical device that takes ranges and returns range sums, but it returns the opposite result when the range has length at least kk. Formally, in one query, you can give it a pair of integers [l,r][l,r] where 1≤l≤r≤n1≤l≤r≤n, and it will return either 00 or 11 according to the following rules:   If r−l+1<kr−l+1<k, it will return s(l,r)s(l,r).  If r−l+1≥kr−l+1≥k, it will return 1−s(l,r)1−s(l,r). Find kk using at most 33 queries.The device is not adaptive. It means that the hidden a and k are fixed before the interaction and will not change during the interaction.
InputCopy2
8

0

0

1

0

4

1

0
InputCopy
Copy
OutputCopy? 3 5

? 1 8

? 4 8

? 3 8

! 6

? 3 3

? 3 4

! 2

OutputCopy
Copy


[Problem F - contest/2049]
 An integer sequence b1,b2,…,bn is good if mex(b1,b2,…,bn)−(b1|b2|…|bn)=1. Here, mex(c) denotes the MEX∗ of the collection c, and | is the bitwise OR operator.Shohag has an integer sequence a1,a2,…,an. He will perform the following q updates on a:  i x — increase ai by x. After each update, help him find the length of the longest good subarray† of a.∗The minimum excluded (MEX) of a collection of integers c1,c2,…,ck is defined as the smallest non-negative integer y which does not occur in the collection c. †An array d is a subarray of an array f if d can be obtained from f by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. 
InputEach test contains multiple test cases. The first line contains the number of test cases t (1≤t≤104). The description of the test cases follows. The first line of each test case contains two space-separated integers n and q (1≤n,q≤105).The second line of each test case contains n integers a1,a2,…,an (0≤ai≤n).The next q lines of each test case are of the following form:  i x (1≤i,x≤n) — it means you should increase ai by x. It is guaranteed that the sum of n over all test cases doesn't exceed 105 and the sum of q doesn't exceed 105.
OutputFor each test case, output q lines — on the i-th line output the length of the longest good subarray of a after the i-th update.
InputCopy26 30 0 1 0 1 06 13 26 33 11 3 11 1
InputCopy
Copy
2
6 3
0 0 1 0 1 0
6 1
3 2
6 3
3 1
1 3 1
1 1
OutputCopy6
3
2
0

OutputCopy
Copy


[Problem A - contest/2048]
Kevin is trapped in Lakeside Village by Grace. At the exit of the village, there is a combination lock that can only be unlocked if Kevin solves it.The combination lock starts with an integer  x . Kevin can perform one of the following two operations zero or more times:   If  x neq 33 , he can select two consecutive digits  3  from  x  and remove them simultaneously. For example, if  x = 13,323 , he can remove the second and third  3 , changing  x  to  123 .  If  x ≥ 33 , he can change  x  to  x - 33 . For example, if  x = 99 , he can choose this operation to change  x  to  99 - 33 = 66 . When the value of  x  on the combination lock becomes  0 , Kevin can unlock the lock and escape from Lakeside Village. Please determine whether it is possible for Kevin to unlock the combination lock and escape.
InputEach test contains multiple test cases. The first line contains the number of test cases t (1 le t le 10^4).The only line of each test case contains a positive integer x (1≤ x≤ 10^9).
OutputFor each test case, output "YES" or "NO" (without quotes) in one line, representing whether Kevin can unlock the combination lock and escape. You can output the answer in any case (upper or lower). For example, the strings "yEs", "yes", "Yes", and "YES" will be recognized as positive responses.
InputCopy51656369666114514133333332
InputCopy
Copy
5
165
6369
666
114514
133333332
OutputCopyYES
YES
NO
NO
YES

OutputCopy
Copy


[Problem B - contest/2048]
 Kevin is a master of permutation-related problems. You are taking a walk with Kevin in Darkwoods, and during your leisure time, he wants to ask you the following question.Given two positive integers  n  and  k , construct a permutation^{text{∗}}  p  of length  n  to minimize the sum of the minimum values of all subarrays^{text{†}} of length  k . Formally, you need to minimize$$$ sum_{i=1}^{n-k+1}left( min_{j=i}^{i+k-1} p_jright). $$$^{text{∗}}A permutation of length n is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [2,3,1,5,4] is a permutation, but [1,2,2] is not a permutation (2 appears twice in the array), and [1,3,4] is also not a permutation (n=3 but there is 4 in the array). ^{text{†}}An array a is a subarray of an array b if a can be obtained from b by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. Two subarrays are considered different if the sets of positions of the deleted elements are different. 
InputEach test consists of multiple test cases. The first line contains the number of test cases t (1 le t le 10^3).The only line of each test case contains two integers  n  and  k  ( 1le kle nle 10^5 ).It is guaranteed that the sum of  n  over all test cases doesn't exceed  10^5 .
OutputFor each test case, output  n  integers on a single line — the permutation  p  you constructed.If there are multiple answers, you can print any of them.
InputCopy3
4 2
6 1
8 3

InputCopy
Copy
OutputCopy3 1 2 4
5 2 1 6 4 3
4 6 2 8 3 1 5 7

OutputCopy
Copy


[Problem C - contest/2048]
Kevin discovered a binary string ss that starts with 1 in the river at Moonlit River Park and handed it over to you. Your task is to select two non-empty substrings∗∗ of ss (which can be overlapped) to maximize the XOR value of these two substrings.The XOR of two binary strings aa and bb is defined as the result of the ⊕⊕ operation applied to the two numbers obtained by interpreting aa and bb as binary numbers, with the leftmost bit representing the highest value. Here, ⊕⊕ denotes the bitwise XOR operation.The strings you choose may have leading zeros.∗∗A string aa is a substring of a string bb if aa can be obtained from bb by the deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end. 
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤1031≤t≤103).The only line of each test case contains a binary string ss that starts with 1 (1≤|s|≤50001≤|s|≤5000).It is guaranteed that the sum of |s||s| over all test cases doesn't exceed 5000.
OutputFor each test case, output four integers l1,r1,l2,r2 (1≤l1≤r1≤|s|, 1≤l2≤r2≤|s|) — in the case the two substrings you selected are sl1sl1+1…sr1 and sl2sl2+1…sr2.If there are multiple solutions, print any of them.
InputCopy5111100010111111011100010001101
InputCopy
Copy
5
111
1000
10111
11101
1100010001101
OutputCopy2 2 1 3
1 3 1 4
1 5 1 4
3 4 1 5
1 13 1 11

OutputCopy
Copy


[Problem D - contest/2048]
Kevin used to get into Rio's Memories, and in Rio's Memories, a series of contests was once held. Kevin remembers all the participants and all the contest problems from that time, but he has forgotten the specific rounds, the distribution of problems, and the exact rankings.There are  m  problems in total, with the  i -th problem having a difficulty of  b_i . Let each contest consist of  k  problems, resulting in a total of  lfloor frac{m}{k} rfloor  contests. This means that you select exactly  lfloor frac{m}{k} rfloor cdot k  problems for the contests in any combination you want, with each problem being selected at most once, and the remaining mbmod k problems are left unused. For example, if m = 17 and k = 3, you should create exactly 5 contests consisting of 3 problems each, and exactly 2 problems will be left unused.There are  n  participants in the contests, with Kevin being the 1-st participant. The  i -th participant has a rating of  a_i . During the contests, each participant solves all problems with a difficulty not exceeding their rating, meaning the  i -th participant solves the  j -th problem if and only if  a_i ≥ b_j . In each contest, Kevin's rank is one plus the number of participants who solve more problems than he does.For each  k = 1, 2, ldots, m , Kevin wants to know the minimum sum of his ranks across all  lfloor frac{m}{k} rfloor  contests. In other words, for some value of k, after selecting the problems for each contest, you calculate the rank of Kevin in each contest and sum up these ranks over all  lfloor frac{m}{k} rfloor  contests. Your goal is to minimize this value.Note that contests for different values of k are independent. It means that for different values of k, you can select the distribution of problems into the contests independently.
InputEach test contains multiple test cases. The first line contains the number of test cases  t  ( 1 le t le 5cdot 10^4 ).The first line of each test case contains two integers  n  and  m  ( 1 le n, m ≤ 3cdot 10^5 ) — the number of participants and the number of problems.The second line of each test case contains  n  integers  a_1, a_2, ldots, a_n  ( 0 le a_i le 10^9 ) — the rating of each participant.The third line of each test case contains  m  integers  b_1, b_2, ldots, b_m  ( 0 le b_i le 10^9 ) — the difficulty of each problem.It is guaranteed that both the sum of  n  and the sum of  m  over all test cases do not exceed  3 cdot 10^5 .
OutputFor each test case, output m integers — the minimum sum of Kevin's ranks for each  k = 1, 2, ldots, m.
InputCopy44 44 3 7 52 5 4 65 55 0 4 8 61 3 9 2 76 71 1 4 5 1 41 9 1 9 8 1 07 61 9 1 9 8 1 01 1 4 5 1 4
InputCopy
Copy
4
4 4
4 3 7 5
2 5 4 6
5 5
5 0 4 8 6
1 3 9 2 7
6 7
1 1 4 5 1 4
1 9 1 9 8 1 0
7 6
1 9 1 9 8 1 0
1 1 4 5 1 4
OutputCopy7 4 2 3
6 2 1 1 2
7 3 2 1 1 1 1
15 9 5 4 4 4

OutputCopy
Copy


[Problem E - contest/2048]
The Arms Factory needs a poster design pattern and finds Kevin for help.A poster design pattern is a bipartite graph with 2n vertices in the left part and m vertices in the right part, where there is an edge between each vertex in the left part and each vertex in the right part, resulting in a total of 2nm edges.Kevin must color each edge with a positive integer in the range [1,n]. A poster design pattern is good if there are no monochromatic cycles∗ in the bipartite graph.Kevin needs your assistance in constructing a good bipartite graph or informing him if it is impossible.∗A monochromatic cycle refers to a simple cycle in which all the edges are colored with the same color.
InputEach test contains multiple test cases. The first line contains the number of test cases t (1≤t≤100).The only line of each test case contains two integers n and m (1≤n,m≤103) — the bipartite graph has 2n vertices in the left part and m vertices in the right part.It is guaranteed that both the sum of n and the sum of m over all test cases do not exceed 103.
OutputFor each test case, if there is no solution, then output No.Otherwise, output Yes, and then output 2n lines, with each line containing m positive integers. The i-th line's j-th integer represents the color of the edge between the i-th vertex in the left part and the j-th vertex in the right part.If there are multiple answers, you can print any of them.You can output each letter in any case (for example, the strings yEs, yes, Yes, and YES will be recognized as a positive answer).
InputCopy32 23 75 4
InputCopy
Copy
3
2 2
3 7
5 4
OutputCopyYES
1 2
2 1
2 2
2 1
NO
YES
1 1 1 1
1 2 2 2
1 2 3 3
1 2 3 4
1 2 3 4
1 2 3 4
1 2 3 4
1 2 3 4
1 2 3 4
1 2 3 4

OutputCopy
Copy


[Problem F - contest/2048]
Kevin is a student from Eversleeping Town, currently attending a math class where the teacher is giving him division exercises.On the board, there are two rows of positive integers written, each containing  n  numbers. The first row is  a_1, a_2, ldots, a_n , and the second row is  b_1, b_2, ldots, b_n . For each division exercise, Kevin can choose any segment  [l, r]  and find the smallest value  x  among  b_l, b_{l+1}, ldots, b_r . He will then modify each  a_i  for  l ≤ i ≤ r  to be the ceiling of  a_i  divided by  x .Formally, he selects two integers  1 ≤ l ≤ r ≤ n , sets  x = min_{l ≤ i ≤ r} b_i , and changes all  a_i  for  l ≤ i ≤ r  to  lceil frac{a_i}{x} rceil .Kevin can leave class and go home when all  a_i  become  1 . He is eager to leave and wants to know the minimum number of division exercises required to achieve this.
InputEach test contains multiple test cases. The first line contains the number of test cases  t  ( 1 le t le 10^4 ).The first line of each test case contains an integer  n  ( 1 le n ≤ 2 cdot 10^5 ) — the length of the sequence  a  and  b .The second line of each test case contains  n  integers  a_1, a_2, ldots, a_n  ( 1 le a_i le 10^{18} ) — the first row of integers on the board.The third line of each test case contains  n  integers  b_1, b_2, ldots, b_n  ( 2 le b_i le 10^{18} ) — the second row of integers on the board.It is guaranteed that the sum of  n  over all test cases doesn't exceed  2 cdot 10^5 .
OutputFor each test case, output one integer — the minimum number of division exercises required to leave class.
InputCopy335 4 26 3 253 6 1 3 23 5 3 2 268 3 3 7 5 83 2 3 4 2 3
InputCopy
Copy
3
3
5 4 2
6 3 2
5
3 6 1 3 2
3 5 3 2 2
6
8 3 3 7 5 8
3 2 3 4 2 3
OutputCopy2
3
3

OutputCopy
Copy


[Problem G - contest/2048]
Kevin has been transported to Sacred Heart Hospital, which contains all the  n × m  matrices with integer values in the range  [1,v] .Now, Kevin wants to befriend some matrices, but he is willing to befriend a matrix  a  if and only if the following condition is satisfied:$$$ min_{1le ile n}left(max_{1le jle m}a_{i,j}right)lemax_{1le jle m}left(min_{1le ile n}a_{i,j}right). Please count how many matrices in Sacred Heart Hospital can be friends with Kevin.Since Kevin is very friendly, there could be many matrices that meet this condition. Therefore, you only need to output the result modulo 998\,244\,353$$$.
InputEach test contains multiple test cases. The first line contains the number of test cases  t  ( 1 le t le 8cdot 10^3 ).The only line of each test case contains three integers n, m, v ( 1 le n, v, n cdot v ≤ 10^6, 1 le m le 10^9 ).It is guaranteed that the sum of  n cdot v  over all test cases doesn't exceed  10^6 .
OutputFor each test case, output one integer — the number of matrices that can be friends with Kevin modulo 998,244,353.
InputCopy32 2 22 3 411 45 14
InputCopy
Copy
3
2 2 2
2 3 4
11 45 14
OutputCopy14
2824
883799966

OutputCopy
Copy


[Problem H - contest/2048]
Kevin is exploring problems related to binary strings in Chinatown. When he was at a loss, a stranger approached him and introduced a peculiar operation:  Suppose the current binary string is  t , with a length of  vert t vert . Choose an integer  1 ≤ p ≤ vert t vert . For all  1 ≤ i < p , simultaneously perform the operation  t_i = max(t_i, t_{i+1}) , and then delete  t_p . For example, suppose the current binary string is 01001, and you choose  p = 4 . Perform  t_i = max(t_i, t_{i+1})  for t_1, t_2, and  t_3 , transforming the string into 11001, then delete  t_4 , resulting in 1101.Kevin finds this strange operation quite interesting. Thus, he wants to ask you: Given a binary string  s , how many distinct non-empty binary strings can you obtain through any number of operations (possibly zero)?Since the answer may be very large, you only need to output the result modulo 998,244,353.
InputEach test contains multiple test cases. The first line contains a single integer t (1le t le 10^4) — the number of test cases.For each test case, the only line contains a binary string  s  ( 1 le lvert s rvert le 10^6 ).It is guaranteed that the sum of lvert s rvert over all test cases does not exceed 10^6.
OutputFor each test case, print a single integer in the only line of the output — the number of distinct non-empty binary strings you can obtain, modulo 998,244,353.
InputCopy211001000110111001100
InputCopy
Copy
2
11001
000110111001100
OutputCopy9
73

OutputCopy
Copy


[Problem I1 - contest/2048]
This is the easy version of the problem. The difference between the versions is that in this version, you need to find any one good array. You can hack only if you solved all versions of this problem. Kevin is visiting the Red Church, and he found a puzzle on the wall.For an array  a , let  c(l,r)  indicate how many distinct numbers are among  a_l, a_{l+1}, ldots, a_r . In particular, if  l > r , define  c(l,r) = 0 .You are given a string  s  of length  n  consisting of letters  texttt{L}  and  texttt{R}  only. Let a non-negative array  a  be called good, if the following conditions hold for  1 ≤ i ≤ n :   if s_i=verb!L!, then c(1,i-1)=a_i;  if s_i=verb!R!, then c(i+1,n)=a_i. If there is a good array a, print any of the good arrays. Otherwise, report that no such arrays exists.
InputEach test contains multiple test cases. The first line contains a single integer t (1le t le 10^4) — the number of test cases. The description of the test cases follows.The first line of each test case contains a single integer n (2≤ n≤ 2cdot 10^5) — the length of string s.The second line of each test case contains a string s with a length n, containing only English uppercase letters verb!L! and verb!R!.It is guaranteed that the sum of n over all test cases does not exceed 2cdot 10^5.
OutputFor each test case, if a good array exists, print n non-negative integers: a good array a. Otherwise, print a single integer -1. If there are multiple arrays a satisfying the conditions, you can output any of them.
InputCopy43LLR3RRL4RRLR5LLRLR
InputCopy
Copy
4
3
LLR
3
RRL
4
RRLR
5
LLRLR
OutputCopy0 1 0
2 1 2
-1
0 1 2 3 0
OutputCopy
Copy


[Problem I2 - contest/2048]
This is the hard version of the problem. The difference between the versions is that in this version, you need to count the number of good arrays. You can hack only if you solved all versions of this problem. Kevin is visiting the Red Church, and he found a puzzle on the wall.For an array  a , let  c(l,r)  indicate how many distinct numbers are among  a_l, a_{l+1}, ldots, a_r . In particular, if  l > r , define  c(l,r) = 0 .You are given a string  s  of length  n  consisting of letters  texttt{L}  and  texttt{R}  only. Let a non-negative array  a  be called good, if the following conditions hold for  1 ≤ i ≤ n :   if s_i=verb!L!, then c(1,i-1)=a_i;  if s_i=verb!R!, then c(i+1,n)=a_i. You need to count the number of good arrays a. Since the answer may be large, you only need to output the answer modulo 998,244,353.
InputEach test contains multiple test cases. The first line contains a single integer t (1le t le 10^4) — the number of test cases. The description of the test cases follows.The first line of each test case contains a single integer n (2≤ n≤ 2cdot 10^5) — the length of string s.The second line of each test case contains a string s with a length n, containing only English uppercase letters verb!L! and verb!R!.It is guaranteed that the sum of n over all test cases does not exceed 2cdot 10^5.
OutputFor each test case, output the number of good arrays modulo 998,244,353.
InputCopy43LLR3RRL4RRLR5LLRLR
InputCopy
Copy
4
3
LLR
3
RRL
4
RRLR
5
LLRLR
OutputCopy1
2
0
1

OutputCopy
Copy


[Problem A - contest/2044]
Cube is given an integer nn. She wants to know how many ordered pairs of positive integers (a,b)(a,b) there are such that a=n−ba=n−b. Since Cube is not very good at math, please help her!
InputThe first line contains an integer tt (1≤t≤991≤t≤99) — the number of test cases.The only line of each test case contains an integer nn (2≤n≤1002≤n≤100).
OutputFor each test case, output the number of ordered pairs (a,b)(a,b) on a new line.
InputCopy3246
InputCopy
Copy
3
2
4
6
OutputCopy1
3
5

OutputCopy
Copy


[Problem B - contest/2044]
A string consisting of only characters 'p', 'q', and 'w' is painted on a glass window of a store. Ship walks past the store, standing directly in front of the glass window, and observes string aa. Ship then heads inside the store, looks directly at the same glass window, and observes string bb.Ship gives you string aa. Your job is to find and output bb.
InputThe first line contains an integer tt (1≤t≤1001≤t≤100) — the number of test cases.The only line of each test case contains a string aa (1≤|a|≤1001≤|a|≤100) — the string Ship observes from outside the store. It is guaranteed that aa only contains characters 'p', 'q', and 'w'.
OutputFor each test case, output string bb, the string Ship observes from inside the store, on a new line.
InputCopy5qwqppppppppwwwqqqwqpqwpqwwqppqpqpqpq
InputCopy
Copy
5
qwq
ppppp
pppwwwqqq
wqpqwpqwwqp
pqpqpqpq
OutputCopypwp
qqqqq
pppwwwqqq
qpwwpqwpqpw
pqpqpqpq

OutputCopy
Copy


[Problem C - contest/2044]
Ball is the teacher in Paperfold University. The seats of his classroom are arranged in 22 rows with mm seats each.Ball is teaching a+b+ca+b+c monkeys, and he wants to assign as many monkeys to a seat as possible. Ball knows that aa of them only want to sit in row 11, bb of them only want to sit in row 22, and cc of them have no preference. Only one monkey may sit in each seat, and each monkey's preference must be followed if it is seated.What is the maximum number of monkeys that Ball can seat?
InputThe first line contains an integer tt (1≤t≤1041≤t≤104) — the number of test cases.Each test case contains four integers mm, aa, bb, and cc (1≤m,a,b,c≤1081≤m,a,b,c≤108).
OutputFor each test case, output the maximum number of monkeys you can seat.
InputCopy510 5 5 103 6 1 115 14 12 41 1 1 1420 6 9 69
InputCopy
Copy
5
10 5 5 10
3 6 1 1
15 14 12 4
1 1 1 1
420 6 9 69
OutputCopy20
5
30
2
84

OutputCopy
Copy


[Problem D - contest/2044]
Given a sequence of positive integers, a positive integer is called a mode of the sequence if it occurs the maximum number of times that any positive integer occurs. For example, the mode of [2,2,3][2,2,3] is 22. Any of 99, 88, or 77 can be considered to be a mode of the sequence [9,9,8,8,7,7][9,9,8,8,7,7]. You gave UFO an array aa of length nn. To thank you, UFO decides to construct another array bb of length nn such that aiai is a mode of the sequence [b1,b2,…,bi][b1,b2,…,bi] for all 1≤i≤n1≤i≤n. However, UFO doesn't know how to construct array bb, so you must help her. Note that 1≤bi≤n1≤bi≤n must hold for your array for all 1≤i≤n1≤i≤n.
InputThe first line contains tt (1≤t≤1041≤t≤104) — the number of test cases.The first line of each test case contains an integer nn (1≤n≤2⋅1051≤n≤2⋅105) — the length of aa.The following line of each test case contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤n1≤ai≤n).It is guaranteed that the sum of nn over all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case, output nn numbers b1,b2,…,bnb1,b2,…,bn (1≤bi≤n1≤bi≤n) on a new line. It can be shown that bb can always be constructed. If there are multiple possible arrays, you may print any.
InputCopy421 241 1 1 284 5 5 5 1 1 2 1101 1 2 2 1 1 3 3 1 1
InputCopy
Copy
4
2
1 2
4
1 1 1 2
8
4 5 5 5 1 1 2 1
10
1 1 2 2 1 1 3 3 1 1
OutputCopy1 2
1 1 2 2
4 5 5 1 1 2 2 3
1 8 2 2 1 3 3 9 1 1

OutputCopy
Copy


[Problem E - contest/2044]
Wave is given five integers kk, l1l1, r1r1, l2l2, and r2r2. Wave wants you to help her count the number of ordered pairs (x,y)(x,y) such that all of the following are satisfied:  l1≤x≤r1l1≤x≤r1.  l2≤y≤r2l2≤y≤r2.  There exists a non-negative integer nn such that yx=knyx=kn. 
InputThe first line contains an integer tt (1≤t≤1041≤t≤104) — the number of test cases.The only line of each test case contains five integers kk, l1l1, r1r1, l2l2, and r2r2 (2≤k≤109,1≤l1≤r1≤109,1≤l2≤r2≤1092≤k≤109,1≤l1≤r1≤109,1≤l2≤r2≤109).
OutputFor each test case, output the number of matching ordered pairs (x,y)(x,y) on a new line.
InputCopy52 2 6 2 122 1 1000000000 1 10000000003 5 7 15 631000000000 1 5 6 100000000015 17 78 2596 20914861
InputCopy
Copy
5
2 2 6 2 12
2 1 1000000000 1 1000000000
3 5 7 15 63
1000000000 1 5 6 1000000000
15 17 78 2596 20914861
OutputCopy12
1999999987
6
1
197

OutputCopy
Copy


[Problem F - contest/2044]
For an arbitrary grid, Robot defines its beauty to be the sum of elements in the grid. Robot gives you an array aa of length nn and an array bb of length mm. You construct a nn by mm grid MM such that Mi,j=ai⋅bjMi,j=ai⋅bj for all 1≤i≤n1≤i≤n and 1≤j≤m1≤j≤m.Then, Robot gives you qq queries, each consisting of a single integer xx. For each query, determine whether or not it is possible to perform the following operation exactly once so that MM has a beauty of xx:  Choose integers rr and cc such that 1≤r≤n1≤r≤n and 1≤c≤m1≤c≤m  Set Mi,jMi,j to be 00 for all ordered pairs (i,j)(i,j) such that i=ri=r, j=cj=c, or both. Note that queries are not persistent, meaning that you do not actually set any elements to 00 in the process — you are only required to output if it is possible to find rr and cc such that if the above operation is performed, the beauty of the grid will be xx. Also, note that you must perform the operation for each query, even if the beauty of the original grid is already xx.
InputThe first line contains three integers nn, mm, and qq (1≤n,m≤2⋅105,1≤q≤5⋅1041≤n,m≤2⋅105,1≤q≤5⋅104) — the length of aa, the length of bb, and the number of queries respectively.The second line contains nn integers a1,a2,…,ana1,a2,…,an (0≤|ai|≤n0≤|ai|≤n).The third line contains mm integers b1,b2,…,bmb1,b2,…,bm (0≤|bi|≤m0≤|bi|≤m).The following qq lines each contain a single integer xx (1≤|x|≤2⋅1051≤|x|≤2⋅105), the beauty of the grid you wish to achieve by setting all elements in a row and a column to 00.
OutputFor each testcase, output "YES" (without quotes) if there is a way to perform the aforementioned operation such that the beauty is xx, and "NO" (without quotes) otherwise.You can output "YES" and "NO" in any case (for example, strings "yES", "yes" and "Yes" will be recognized as a positive response).
InputCopy3 3 6-2 3 -3-2 2 -1-11-22-33
InputCopy
Copy
3 3 6
-2 3 -3
-2 2 -1
-1
1
-2
2
-3
3
OutputCopyNO
YES
NO
NO
YES
NO

OutputCopy
Copy
InputCopy5 5 61 -2 3 0 00 -2 5 0 -34-352-12
InputCopy
Copy
5 5 6
1 -2 3 0 0
0 -2 5 0 -3
4
-3
5
2
-1
2
OutputCopyYES
YES
YES
YES
NO
YES

OutputCopy
Copy


[Problem G1 - contest/2044]
This is the easy version of the problem. The key difference between the two versions is highlighted in bold.A group of nn spiders has come together to exchange plushies. Initially, each spider has 11 plushie. Every year, if spider ii has at least one plushie, he will give exactly one plushie to spider riri. Otherwise, he will do nothing. Note that all plushie transfers happen at the same time. In this version, if any spider has more than 11 plushie at any point in time, they will throw all but 11 away.The process is stable in the current year if each spider has the same number of plushies (before the current year's exchange) as he did the previous year (before the previous year's exchange). Note that year 11 can never be stable.Find the first year in which the process becomes stable.
InputThe first line contains an integer tt (1≤t≤1041≤t≤104) — the number of test cases.The first line of each test case contains an integer nn (2≤n≤2⋅1052≤n≤2⋅105) — the number of spiders.The following line contains nn integers r1,r2,…,rnr1,r2,…,rn (1≤ri≤n,ri≠i1≤ri≤n,ri≠i) — the recipient of the plushie of each spider.It is guaranteed that the sum of nn over all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case, output an integer on a new line, the first year in which the process becomes stable.
InputCopy522 152 3 4 5 152 1 4 2 354 1 1 5 4104 3 9 1 6 7 9 10 10 3
InputCopy
Copy
5
2
2 1
5
2 3 4 5 1
5
2 1 4 2 3
5
4 1 1 5 4
10
4 3 9 1 6 7 9 10 10 3
OutputCopy2
2
5
4
5

OutputCopy
Copy


[Problem G2 - contest/2044]
This is the hard version of the problem. The key difference between the two versions is highlighted in bold.A group of nn spiders has come together to exchange plushies. Initially, each spider has 11 plushie. Every year, if spider ii has at least one plushie, he will give exactly one plushie to spider riri. Otherwise, he will do nothing. Note that all plushie transfers happen at the same time. In this version, each spider is allowed to have more than 1 plushie at any point in time.The process is stable in the current year if each spider has the same number of plushies (before the current year's exchange) as he did the previous year (before the previous year's exchange). Note that year 11 can never be stable.Find the first year in which the process becomes stable.
InputThe first line contains an integer tt (1≤t≤1041≤t≤104) — the number of test cases.The first line of each test case contains an integer nn (2≤n≤2⋅1052≤n≤2⋅105) — the number of spiders.The following line contains nn integers r1,r2,…,rnr1,r2,…,rn (1≤ri≤n,ri≠i1≤ri≤n,ri≠i) — the recipient of the plushie of each spider.It is guaranteed that the sum of nn over all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case, output an integer on a new line, the first year in which the process becomes stable.
InputCopy522 152 3 4 5 152 1 4 2 354 1 1 5 4104 3 9 1 6 7 9 10 10 3
InputCopy
Copy
5
2
2 1
5
2 3 4 5 1
5
2 1 4 2 3
5
4 1 1 5 4
10
4 3 9 1 6 7 9 10 10 3
OutputCopy2
2
5
5
5

OutputCopy
Copy


[Problem H - contest/2044]
Swing is opening a pancake factory! A good pancake factory must be good at flattening things, so Swing is going to test his new equipment on 2D matrices.Swing is given an n×n matrix M containing positive integers. He has q queries to ask you. For each query, he gives you four integers x1, y1, x2, y2 and asks you to flatten the submatrix bounded by (x1,y1) and (x2,y2) into an array A. Formally, A=[M(x1,y1),M(x1,y1+1),…,M(x1,y2),M(x1+1,y1),M(x1+1,y1+1),…,M(x2,y2)]. The following image depicts the flattening of a submatrix bounded by the red dotted lines. The orange arrows denote the direction that the elements of the submatrix are appended to the back of A, and A is shown at the bottom of the image.   Afterwards, he asks you for the value of ∑|A|i=1Ai⋅i (sum of Ai⋅i over all i).
InputThe first line contains an integer t (1≤t≤103) — the number of test cases.The first line of each test contains two integers n and q (1≤n≤2000,1≤q≤106) — the length of M and the number of queries.The following n lines contain n integers each, the i'th of which contains M(i,1),M(i,2),…,M(i,n) (1≤M(i,j)≤106).The following q lines contain four integers x1, y1, x2, and y2 (1≤x1≤x2≤n,1≤y1≤y2≤n) — the bounds of the query.It is guaranteed that the sum of n over all test cases does not exceed 2000 and the sum of q over all test cases does not exceed 106.
OutputFor each test case, output the results of the q queries on a new line.
InputCopy24 31 5 2 44 9 5 34 5 2 31 5 5 21 1 4 42 2 3 31 2 4 33 31 2 34 5 67 8 91 1 1 31 3 3 32 2 2 2
InputCopy
Copy
2
4 3
1 5 2 4
4 9 5 3
4 5 2 3
1 5 5 2
1 1 4 4
2 2 3 3
1 2 4 3
3 3
1 2 3
4 5 6
7 8 9
1 1 1 3
1 3 3 3
2 2 2 2
OutputCopy500 42 168 
14 42 5 

OutputCopy
Copy


[Problem A - contest/2052]
Alice's friend is a big fan of the Adrenaline Rush racing competition and always strives to attend every race. However, this time, Alice is the one watching the race. To ensure her friend does not miss any important details, Alice decides to take notes on everything that happens on the track.The first thing Alice notices before the race begins is the numbering of the cars. All the cars line up in front of the starting line in a specific order. The car closest to the line is numbered 1, the second car is numbered 2, and so on, up to the last car, which is numbered n. How convenient! — Alice thought.The race begins with the countdown: "Three! Two! One! Go!". Alice observes that the cars start in their original order. However, as the race progresses, their order changes. She records whenever one car overtakes another, essentially swapping places with it on the track.During the race, Alice notices something curious: no car overtakes another more than once. In other words, for any two cars x and y, there are at most two overtakes between them during the race: "x overtakes y" and/or "y overtakes x".At the end of the race, Alice carefully writes down the final order of the cars c_1, c_2, ldots, c_n, where c_1 represents the winner of the race.Alice's friend, however, is only interested in the final ranking and discards all of Alice's notes except for the final ordering. As Alice is quite curious, she wonders: What is the longest possible sequence of overtakes she could have observed during the race? Your task is to help Alice answer this question.
InputThe first line of the input contains a single integer n;(1 le n le 1000) — the number of cars in the race.The second line contains a permutation c_1, c_2, ldots, c_n;(1 le c_i le n, c_i ne c_j) — the final order of the cars.
OutputThe first line of the output should contain a single integer m — the maximum possible number of overtakes that can occur during the race.Each of the next m lines should contain two integers x and y (1 le x, y le n, x ne y) representing an overtake event, where car x overtakes car y. This means that car x was directly behind car y and overtakes it. The overtakes must be listed in the order they occurred during the race.After all m overtakes have occurred, the cars must arrive at the finish line in the order c_1, c_2, ldots, c_n. Note that any car x should not overtake another car y more than once.If there are multiple possible longest sequences of overtakes, output any of them.
InputCopy32 3 1
InputCopy
Copy
3
2 3 1
OutputCopy4
2 1
3 1
3 2
2 3

OutputCopy
Copy
InputCopy11
InputCopy
Copy
1
1
OutputCopy0

OutputCopy
Copy
InputCopy21 2
InputCopy
Copy
2
1 2
OutputCopy2
2 1
1 2

OutputCopy
Copy


[Problem D - contest/2052]
Consider a simple single-bit boolean register that supports two operations:  set — sets the register to true if it was false, and returns true; otherwise, it returns false;  unset — sets the register to false if it was true, and returns true; otherwise, it returns false. The initial state of the register is false. Suppose there were nn operations opiopi (for 1≤i≤n1≤i≤n) where at most two operations returned true. Also, we are given the partial order of operations as a directed acyclic graph (DAG): an edge i→ji→j means that opiopi happened before opjopj. You are asked whether it is possible to put these operations in some linear sequential order that satisfies the given partial order and such that if operations are applied to the register in that order, their results are the same as given.
InputIn the first line, you are given an integer nn — the number of operations (1≤n≤1051≤n≤105). In the following nn lines, you are given operations in the format "type result", where type is either "set" or "unset" and result is either "true" or "false". It is guaranteed that at most two operations have "true" results. In the next line, you are given an integer mm — the number of arcs of the DAG (0≤m≤1050≤m≤105). In the following mm lines, you are given arcs — pairs of integers aa and bb (1≤a,b≤n1≤a,b≤n; a≠ba≠b). Each arc indicates that operation opaopa happened before operation opbopb.
OutputPrint any linear order of operations that satisfies the DAG constraints and ensures the results of the operations match the ones given in the input. If a correct operation order does not exist, print −1−1.
InputCopy5set trueunset trueset falseunset falseunset false21 45 2
InputCopy
Copy
5
set true
unset true
set false
unset false
unset false
2
1 4
5 2
OutputCopy5 1 3 2 4 

OutputCopy
Copy
InputCopy3unset trueunset falseset true0
InputCopy
Copy
3
unset true
unset false
set true
0
OutputCopy2 3 1 

OutputCopy
Copy
InputCopy2unset falseset true12 1
InputCopy
Copy
2
unset false
set true
1
2 1
OutputCopy-1

OutputCopy
Copy
InputCopy2unset falseset false0
InputCopy
Copy
2
unset false
set false
0
OutputCopy-1 
OutputCopy
Copy


[Problem E - contest/2052]
Eve is studying mathematics in school. They've already learned how to perform addition and subtraction of decimal numbers and are practicing it by solving fun puzzles. The specific type of the puzzle they are solving is described below. They are given an equality with addition and subtraction which may or may not be a correct one. They have to verify the equality, and if it is not a correct one, then they have to tell if it is possible to turn it into a correct one by moving one digit to a different place in the equality.Let us formally define the equality in this puzzle:   Number is a string of at least one and at most 10 decimal digits ('0' to '9') that has no extra leading zeroes (the only number that is allowed to start with the zero digit is "0").  Expression is a string composed of one or more numbers, as defined above, that are separated with addition ('+') or subtraction ('-') operators.  Equality is a string composed of an expression, as defined above, followed by an equals sign ('='), followed by another expression.  Correct equality is an equality where both expressions on the left and right hand sides of the equals sign evaluate to the same decimal number according to the standard arithmetic. Note that while all the numbers in the expression are positive, the evaluated number can be negative. Also, the evaluated number can be longer than 10 digits.  Moving a digit in an equality means removing a digit from any position in the string and inserting it into another position so that the resulting string is again an equality. The puzzle is pretty straightforward once you know how to add and subtract decimal numbers, but it is tenuous. It is easy to get distracted and make a mistake while performing computation. Your task is to write a program that solves the expression correction puzzle to help Eve.
InputThe input file consists of a single line — an equality as defined in the problem statement. The total length of the input string does not exceed 100 characters.
OutputWrite a single line to the output. If the input contains a correct equality, output a single word "Correct". Otherwise, if the input equality can be turned into a correct one by moving one digit, output the resulting correct equality. If there are multiple possible correct equalities after moving one digit, you may output any one of them. Otherwise, output a single word "Impossible".
InputCopy2+2=4
InputCopy
Copy
2+2=4
OutputCopyCorrect

OutputCopy
Copy
InputCopy123456789+9876543210=111111110+11-1
InputCopy
Copy
123456789+9876543210=111111110+11-1
OutputCopy123456789+987654321=1111111100+11-1

OutputCopy
Copy
InputCopy10+9=10
InputCopy
Copy
10+9=10
OutputCopyImpossible

OutputCopy
Copy
InputCopy24=55-13
InputCopy
Copy
24=55-13
OutputCopy42=55-13

OutputCopy
Copy
InputCopy1000000000-10=9999999999
InputCopy
Copy
1000000000-10=9999999999
OutputCopyImpossible

OutputCopy
Copy


[Problem F - contest/2052]
Archimedes conducted his famous experiments on buoyancy. But not everyone knows that while he was taking a bath, he was too focused and didn't notice the moment when the water overflowed over the edge of the bath and flooded the floor near the wall. His expensive parquet was irreversibly damaged!Archimedes noticed that not all was lost, and there were still several undamaged parquet pieces. The parquet near the wall had the shape of a long narrow stripe of 2×n2×n cells. Archimedes had an unlimited supply of 1×21×2 parquet pieces that could be placed parallel or perpendicular to the wall. Archimedes didn't want to cut the parquet pieces. As a great scientist, he figured out that there was exactly one way to restore the parquet by filling the damaged area of the parquet with the non-overlapping 1×21×2 cell shaped pieces.Help historians to check Archimedes' calculations. For the given configuration of the 2×n2×n parquet floor, determine whether there is exactly one way to fill the damaged parquet cells with the 1×21×2 cell parquet pieces. If Archimedes was wrong, find out whether there are multiple ways to restore the parquet, or there are no ways at all.
InputThe first line contains a single integer TT (1≤T≤1041≤T≤104) — the number of test cases to solve.Then the description of test cases follows.The first line of each test case contains a single integer nn (1≤n≤2⋅1051≤n≤2⋅105) — the length of the parquet floor.The following two lines contain exactly nn characters each and describe the parquet, where '.' denotes a damaged cell and '#' denotes an undamaged cell.The total sum of nn in all TT test cases doesn't exceed 2⋅1052⋅105.
OutputFor each test case, print "Unique" if there is exactly one way to restore the parquet, "Multiple" if there are multiple ways to do so, or "None" if it is impossible to restore the parquet.
InputCopy410#.......####..#.##..6...#....#...8................3######
InputCopy
Copy
4
10
#.......##
##..#.##..
6
...#..
..#...
8
........
........
3
###
###
OutputCopyUnique
None
Multiple
Unique

OutputCopy
Copy


[Problem G - contest/2052]
Peter's little brother Ivan likes to play with a turtle. The turtle is a special toy that lives on the plane and can execute three commands:   Rotate aa degrees counterclockwise.  Draw dd units in the direction it is facing while dispensing ink. No segment of the plane will be covered by ink more than once.  Move dd units in the direction it is facing without drawing. Ivan just learned about the compass, so he will only rotate his turtle so it faces one of eight cardinal or ordinal directions (angles aa in rotate commands are always divisible by 45). Also, he will perform at least one draw command.Peter has noted all the commands Ivan has given to his turtle. He thinks that the image drawn by the turtle is adorable. Now Peter wonders about the smallest positive angle bb such that he can perform the following operations: move the turtle to a point of his choosing, rotate it by bb degrees, and execute all the commands in the same order. These operations should produce the same image as the original one. Can you help Peter?Note, two images are considered the same if the sets of points covered by ink on the plane are the same in both of the images.
InputThe first line of the input contains a single integer n(1≤n≤50000)n(1≤n≤50000) — the number of commands Ivan has given.The next nn lines contain commands. Each command is one of:  "rotate aa" (45≤a≤36045≤a≤360) where aa is divisible by 4545;  "draw dd" (1≤d≤1091≤d≤109);  "move dd" (1≤d≤1091≤d≤109). At least one and at most 2000 of the commands are draw. It is guaranteed that no segment of the plane will be covered by ink more than once.
OutputOutput a single number, the answer to the question. The answer always exists.
InputCopy1draw 10
InputCopy
Copy
1
draw 10
OutputCopy180

OutputCopy
Copy
InputCopy7draw 1rotate 90draw 1rotate 90draw 1rotate 90draw 1
InputCopy
Copy
7
draw 1
rotate 90
draw 1
rotate 90
draw 1
rotate 90
draw 1
OutputCopy90

OutputCopy
Copy
InputCopy3draw 1move 1draw 2
InputCopy
Copy
3
draw 1
move 1
draw 2
OutputCopy360

OutputCopy
Copy


[Problem J - contest/2052]
Jill loves having good grades in university, so she never misses deadlines for her homework assignments. But even more, she loves watching the series and discussing it with her best friend Johnny. And unfortunately, today she needs to choose between these two activities!Jill needs to complete nn homework tasks. The ii-th task would require aiai minutes to complete and needs to be submitted to the teacher at most didi minutes from now. Also, there are mm new episodes of the series that Johnny and Jill want to discuss. The jj-th episode lasts ljlj minutes. Jill can complete tasks in any order, but she needs to watch the episodes in the order they come. Neither completing a homework task nor watching an episode can be interrupted after starting. Johnny and Jill need to agree on a time tktk when they would have a call to discuss the series. They are not sure yet which time to choose. For each possible time, compute the maximum number of episodes Jill could watch before that time while still being able to complete all nn homework tasks in time.Note that for the purpose of this problem we assume that discussing the series with Johnny at time tktk does not consume significant time from Jill and can happen even if she is in the middle of completing any of her homework tasks.
InputThere are several test cases in the input. The input begins with the number of test cases TT (1≤T≤10001≤T≤1000). Each test case starts with a line with three integers nn (1≤n≤2000001≤n≤200000) — the number of homework tasks, mm (1≤m≤2000001≤m≤200000) — the number of episodes, and qq (1≤q≤2000001≤q≤200000) — the number of possible times for the call with Jill.The second line contains nn integers aiai (1≤ai≤1091≤ai≤109) — the number of minutes it takes to complete the task. The next line contains nn integers didi (1≤di≤10151≤di≤1015) — the deadline before which this task must be completed. The next line contains mm integers ljlj (1≤lj≤1091≤lj≤109) — the length of episodes in the order they need to be watched. The next line contains qq integers tktk (1≤tk≤10151≤tk≤1015) — the possible times of call with Jill. It is possible to complete all tasks within their respective deadlines.The sum of each of nn, mm, qq over all test cases in input doesn't exceed 200000200000.
OutputFor each test case output a single line with qq integers — for each possible time tktk the maximum number of episodes Jill can watch.
InputCopy21 2 310155 55 15 203 4 58 100 810 150 202 32 1 19 200 51 50 10
InputCopy
Copy
2
1 2 3
10
15
5 5
5 15 20
3 4 5
8 100 8
10 150 20
2 32 1 1
9 200 51 50 10
OutputCopy1 1 2
1 4 2 2 1

OutputCopy
Copy


[Problem A - contest/2040]
You are given an array of integers a1,a2,…,ana1,a2,…,an of length nn and an integer kk.Two players are playing a game. The first player chooses an index 1≤i≤n1≤i≤n. Then the second player chooses a different index 1≤j≤n,i≠j1≤j≤n,i≠j. The first player wins if |ai−aj||ai−aj| is not divisible by kk. Otherwise, the second player wins.We play as the first player. Determine whether it is possible to win, and if so, which index ii should be chosen.The absolute value of a number xx is denoted by |x||x| and is equal to xx if x≥0x≥0, and −x−x otherwise.
InputEach test contains multiple test cases. The first line of input contains a single integer tt (1≤t≤1001≤t≤100) — the number of test cases. The description of the test cases follows.The first line of each test case contains two integers nn and kk (1≤n≤1001≤n≤100; 1≤k≤1001≤k≤100) — the length of the array and the number kk.The second line of each test case contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤1001≤ai≤100) — the elements of the array aa.
OutputFor each test case, if it is impossible for the first player to win, print "NO" (without quotes).Otherwise, print "YES" (without quotes) and on the next line the appropriate index 1≤i≤n1≤i≤n. If there are multiple solutions, print any of them.You can output each letter in any case (lowercase or uppercase). For example, the strings "yEs", "yes", "Yes" and "YES" will be recognized as a positive answer.
InputCopy73 21 2 34 21 2 4 55 310 7 3 4 55 31 31 15 55 362 117 172 217 181 36
InputCopy
Copy
7
3 2
1 2 3
4 2
1 2 4 5
5 3
10 7 3 4 5
5 3
1 31 15 55 36
2 1
17 17
2 2
17 18
1 3
6
OutputCopyYES
2
NO
YES
3
NO
NO
YES
2
YES
1

OutputCopy
Copy


[Problem B - contest/2040]
You have an array of zeros a1,a2,…,ana1,a2,…,an of length nn.You can perform two types of operations on it:   Choose an index ii such that 1≤i≤n1≤i≤n and ai=0ai=0, and assign 11 to aiai;  Choose a pair of indices ll and rr such that 1≤l≤r≤n1≤l≤r≤n, al=1al=1, ar=1ar=1, al+…+ar≥⌈r−l+12⌉al+…+ar≥⌈r−l+12⌉, and assign 11 to aiai for all l≤i≤rl≤i≤r. What is the minimum number of operations of the first type needed to make all elements of the array equal to one?
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤1041≤t≤104). The description of the test cases follows.The only line of each test case contains one integer nn (1≤n≤1051≤n≤105) — the length of the array.Note that there is no limit on the sum of nn over all test cases.
OutputFor each test case, print one integer — the minimum number of needed operations of first type.
InputCopy412420
InputCopy
Copy
4
1
2
4
20
OutputCopy1
2
2
4

OutputCopy
Copy


[Problem C - contest/2040]
 Consider a permutation∗∗ p1,p2,…,pnp1,p2,…,pn of integers from 11 to nn. We can introduce the following sum for it††:S(p)=∑1≤l≤r≤nmin(pl,pl+1,…,pr)Let us consider all permutations of length n with the maximum possible value of S(p). Output the k-th of them in lexicographical‡order, or report that there are less than k of them.∗A permutation of length n is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [2,3,1,5,4] is a permutation, but [1,2,2] is not a permutation (2 appears twice in the array), and [1,3,4] is also not a permutation (n=3 but there is 4 in the array). †For example:   For the permutation [1,2,3] the value of S(p) is equal to min(1)+min(1,2)+min(1,2,3)+min(2)+min(2,3)+min(3)= 1+1+1+2+2+3=10  For the permutation [2,4,1,3] the value of S(p) is equal to min(2)+min(2,4)+min(2,4,1)+min(2,4,1,3) + min(4)+min(4,1)+min(4,1,3) + min(1)+min(1,3) + min(3)= 2+2+1+1+4+1+1+1+1+3=17. ‡An array a is lexicographically smaller than an array b if and only if one of the following holds:   a is a prefix of b, but a≠b; or  in the first position where a and b differ, the array a has a smaller element than the corresponding element in b.  
InputEach test contains multiple test cases. The first line contains the number of test cases t (1≤t≤104). The description of the test cases follows.The only line of each test case contains two integers n and k (1≤n≤2⋅105; 1≤k≤1012) — the length of the permutation and the index number of the desired permutation.It is guaranteed that the sum of n over all test cases does not exceed 2⋅105.
OutputFor each test case, if there are less than k suitable permutations, print −1.Otherwise, print the k-th suitable permutation.
InputCopy63 23 34 114 66 397 34
InputCopy
Copy
6
3 2
3 3
4 11
4 6
6 39
7 34
OutputCopy1 3 2 
2 3 1 
-1
2 4 3 1 
-1
2 3 4 5 7 6 1 

OutputCopy
Copy


[Problem D - contest/2040]
You are given a tree with nn vertices.You need to construct an array a1,a2,…,ana1,a2,…,an of length nn, consisting of unique integers from 11 to 2⋅n2⋅n, and such that for each edge ui↔viui↔vi of the tree, the value |aui−avi||aui−avi| is not a prime number.Find any array that satisfies these conditions, or report that there is no such array.
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤1041≤t≤104). The description of the test cases follows.The first line of each test case contains a single integer nn (2≤n≤2⋅1052≤n≤2⋅105) — the number of vertices in the tree.The next n−1n−1 lines contain the edges of the tree, one edge per line. The ii-th line contains two integers uiui and vivi (1≤ui,vi≤n1≤ui,vi≤n; ui≠viui≠vi), denoting the edge between the nodes uiui and vivi.It's guaranteed that the given edges form a tree.It is guaranteed that the sum of nn over all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case, if an array that satisfies the conditions exists, print its elements a1,a2,…,ana1,a2,…,an. Otherwise, print −1−1.
InputCopy251 22 32 43 571 21 32 43 53 63 7
InputCopy
Copy
2
5
1 2
2 3
2 4
3 5
7
1 2
1 3
2 4
3 5
3 6
3 7
OutputCopy2 10 1 6 5 
8 7 12 1 4 6 3 

OutputCopy
Copy


[Problem E - contest/2040]
You are given a tree with nn vertices.Let's place a robot in some vertex v≠1v≠1, and suppose we initially have pp coins. Consider the following process, where in the ii-th step (starting from i=1i=1):  If ii is odd, the robot moves to an adjacent vertex in the direction of vertex 11;  Else, ii is even. You can either pay one coin (if there are some left) and then the robot moves to an adjacent vertex in the direction of vertex 11, or not pay, and then the robot moves to an adjacent vertex chosen uniformly at random. The process stops as soon as the robot reaches vertex 11. Let f(v,p)f(v,p) be the minimum possible expected number of steps in the process above if we spend our coins optimally.Answer qq queries, in the ii-th of which you have to find the value of f(vi,pi)f(vi,pi), modulo∗∗ 998244353998244353.∗∗ Formally, let M=998244353M=998244353. It can be shown that the answer can be expressed as an irreducible fraction pqpq, where pp and qq are integers and q≢0(modM)q≢0(modM). Output the integer equal to p⋅q−1modMp⋅q−1modM. In other words, output such an integer xx that 0≤x<M0≤x<M and x⋅q≡p(modM)x⋅q≡p(modM). 
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤1031≤t≤103). The description of the test cases follows.The first line of each test case contains two integers nn and qq (2≤n≤2⋅1032≤n≤2⋅103; 1≤q≤2⋅1031≤q≤2⋅103) — the number of vertices in the tree and the number of queries.The next n−1n−1 lines contain the edges of the tree, one edge per line. The ii-th line contains two integers uiui and vivi (1≤ui,vi≤n1≤ui,vi≤n; ui≠viui≠vi), denoting the edge between the nodes uiui and vivi.The next qq lines contain two integers vivi and pipi (2≤vi≤n2≤vi≤n; 0≤pi≤n0≤pi≤n).It's guaranteed that the given edges form a tree.It is guaranteed that the sum of nn over all test cases does not exceed 2⋅1032⋅103.It is guaranteed that the sum of qq over all test cases does not exceed 2⋅1032⋅103.
OutputFor each test case, print qq integers: the values of f(vi,pi)f(vi,pi) modulo 998244353998244353.Formally, let M=998244353M=998244353. It can be shown that the answer can be expressed as an irreducible fraction pqpq, where pp and qq are integers and q≢0(modM)q≢0(modM). Output the integer equal to p⋅q−1modMp⋅q−1modM. In other words, output such an integer xx that 0≤x<M0≤x<M and x⋅q≡p(modM)x⋅q≡p(modM).
InputCopy24 41 22 32 42 03 04 03 112 101 22 32 41 55 66 76 86 98 1010 1110 126 09 010 011 03 17 110 112 112 211 12
InputCopy
Copy
2
4 4
1 2
2 3
2 4
2 0
3 0
4 0
3 1
12 10
1 2
2 3
2 4
1 5
5 6
6 7
6 8
6 9
8 10
10 11
10 12
6 0
9 0
10 0
11 0
3 1
7 1
10 1
12 1
12 2
11 12
OutputCopy1
6
6
2
4
9
8
15
2
3
6
9
5
5

OutputCopy
Copy


[Problem F - contest/2040]
Consider a rectangular parallelepiped with sides aa, bb, and cc, that consists of unit cubes of kk different colors. We can apply cyclic shifts to the parallelepiped in any of the three directions any number of times∗∗.There are didi cubes of the ii-th color (1≤i≤k1≤i≤k). How many different parallelepipeds (with the given sides) can be formed from these cubes, no two of which can be made equal by some combination of cyclic shifts?∗∗On the image:   Top left shows the top view of the original parallelepiped. Lower layers will shift in the same way as the top layer.  Top right shows the top view of a parallelepiped shifted to the right by 11.  Bottom left shows the top view of a parallelepiped shifted down by 22.  Bottom right shows the top view of a parallelepiped shifted to the right by 11 and down by 22.    
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤1001≤t≤100). The description of the test cases follows.The first line of each test case contains four integers: aa, bb, cc, and kk (1≤a,b,c≤3⋅1061≤a,b,c≤3⋅106; a⋅b⋅c≤3⋅106a⋅b⋅c≤3⋅106; 1≤k≤1061≤k≤106) — three sides of the parallelepiped and the number of colors of unit cubes.The second line of each test case contains kk integers d1,d2,…,dkd1,d2,…,dk (1≤d1≤d2≤…≤dk≤3⋅1061≤d1≤d2≤…≤dk≤3⋅106) — the elements of the array dd: the number of cubes of a given color.It is guaranteed that in each test case the sum of the elements of the array dd is equal to a⋅b⋅ca⋅b⋅c.It is guaranteed that the sum of kk over all test cases does not exceed 106106.
OutputFor each test case, print one integer — the number of different parallelepipeds modulo 998244353998244353.
InputCopy61 1 1 116 1 1 31 2 312 1 1 32 4 63 3 1 23 62 3 3 26 1272 60 96 417280 86400 120960 190080
InputCopy
Copy
6
1 1 1 1
1
6 1 1 3
1 2 3
12 1 1 3
2 4 6
3 3 1 2
3 6
2 3 3 2
6 12
72 60 96 4
17280 86400 120960 190080
OutputCopy1
10
1160
12
1044
231490207

OutputCopy
Copy


[Problem A - contest/2050]
Kostya has a text ss consisting of nn words made up of Latin alphabet letters. He also has two strips on which he must write the text. The first strip can hold mm characters, while the second can hold as many as needed.Kostya must choose a number xx and write the first xx words from ss on the first strip, while all the remaining words are written on the second strip. To save space, the words are written without gaps, but each word must be entirely on one strip.Since space on the second strip is very valuable, Kostya asks you to choose the maximum possible number xx such that all words s1,s2,…,sxs1,s2,…,sx fit on the first strip of length mm.
InputThe first line contains an integer tt (1≤t≤10001≤t≤1000) — the number of test cases.The first line of each test case contains two integers nn and mm (1≤n≤501≤n≤50; 1≤m≤5001≤m≤500) — the number of words in the list and the maximum number of characters that can be on the first strip.The next nn lines contain one word sisi of lowercase Latin letters, where the length of sisi does not exceed 1010.
OutputFor each test case, output the maximum number of words xx such that the first xx words have a total length of no more than mm.
InputCopy53 1abc2 9alphabeta4 12helloworldandcodeforces3 2abcd3 2abcaba
InputCopy
Copy
5
3 1
a
b
c
2 9
alpha
beta
4 12
hello
world
and
codeforces
3 2
ab
c
d
3 2
abc
ab
a
OutputCopy1
2
2
1
0

OutputCopy
Copy


[Problem B - contest/2050]
You are given an array aa of length nn. In one operation, you can pick an index ii from 22 to n−1n−1 inclusive, and do one of the following actions:  Decrease ai−1ai−1 by 11, then increase ai+1ai+1 by 11.  Decrease ai+1ai+1 by 11, then increase ai−1ai−1 by 11. After each operation, all the values must be non-negative. Can you make all the elements equal after any number of operations?
InputFirst line of input consists of one integer tt (1≤t≤1041≤t≤104)  — the number of test cases.First line of each test case consists of one integer nn (3≤n≤2⋅1053≤n≤2⋅105).Second line of each test case consists of nn integers aiai (1≤ai≤1091≤ai≤109).It is guaranteed that the sum of nn of all test cases doesn't exceed 2⋅1052⋅105.
OutputFor each test case, print "YES" without quotation marks if it is possible to make all the elements equal after any number of operations; otherwise, print "NO" without quotation marks.You can print answers in any register: "yes", "YeS", "nO"  — will also be considered correct.
InputCopy833 2 131 1 341 2 5 441 6 6 156 2 1 4 241 4 2 153 1 2 1 332 4 2
InputCopy
Copy
8
3
3 2 1
3
1 1 3
4
1 2 5 4
4
1 6 6 1
5
6 2 1 4 2
4
1 4 2 1
5
3 1 2 1 3
3
2 4 2
OutputCopyYES
NO
YES
NO
YES
NO
NO
NO

OutputCopy
Copy


[Problem C - contest/2050]
You are given a number nn with a length of no more than 105105.You can perform the following operation any number of times: choose one of its digits, square it, and replace the original digit with the result. The result must be a digit (that is, if you choose the digit xx, then the value of x2x2 must be less than 1010).Is it possible to obtain a number that is divisible by 99 through these operations?
InputThe first line contains an integer tt (1≤t≤1041≤t≤104) — the number of test cases.The only line of each test case contains the number nn, without leading zeros. The length of the number does not exceed 105105.It is guaranteed that the sum of the lengths of the numbers across all test cases does not exceed 105105.
OutputFor each test case, output "YES" if it is possible to obtain a number divisible by 99 using the described operations, and "NO" otherwise.You can output each letter in any case (lowercase or uppercase). For example, the strings "yEs", "yes", "Yes", and "YES" will be accepted as a positive answer.
InputCopy9123322333333333333999754727789127731234567890233352254522632
InputCopy
Copy
9
123
322
333333333333
9997
5472778912773
1234567890
23
33
52254522632
OutputCopyNO
YES
YES
NO
NO
YES
NO
YES
YES

OutputCopy
Copy


[Problem D - contest/2050]
You are given a string ss, consisting of digits from 00 to 99. In one operation, you can pick any digit in this string, except for 00 or the leftmost digit, decrease it by 11, and then swap it with the digit left to the picked.For example, in one operation from the string 10231023, you can get 11031103 or 10221022.Find the lexicographically maximum string you can obtain after any number of operations.
InputThe first line of the input consists of an integer tt (1≤t≤1041≤t≤104)  — the number of test cases.Each test case consists of a single line consisting of a digital string ss (1≤|s|≤2⋅1051≤|s|≤2⋅105), where |s||s| denotes the length of ss. The string does not contain leading zeroes.It is guaranteed that the sum of |s||s| of all test cases doesn't exceed 2⋅1052⋅105.
OutputFor each test case, print the answer on a separate line.
InputCopy6191709115555147698765432105891917899
InputCopy
Copy
6
19
1709
11555
51476
9876543210
5891917899
OutputCopy81
6710
33311
55431
9876543210
7875567711

OutputCopy
Copy


[Problem E - contest/2050]
You are given three strings: aa, bb, and cc, consisting of lowercase Latin letters. The string cc was obtained in the following way:  At each step, either string aa or string bb was randomly chosen, and the first character of the chosen string was removed from it and appended to the end of string cc, until one of the strings ran out. After that, the remaining characters of the non-empty string were added to the end of cc.  Then, a certain number of characters in string cc were randomly changed. For example, from the strings a=abraa=abra and b=cadab=cada, without character replacements, the strings caabdraacaabdraa, abracadaabracada, acadabraacadabra could be obtained.Find the minimum number of characters that could have been changed in string cc.
InputThe first line of the input contains a single integer tt (1≤t≤1031≤t≤103) — the number of test cases.The first line of each test case contains one string of lowercase Latin letters aa (1≤|a|≤1031≤|a|≤103) — the first string, where |a||a| denotes the length of string aa.The second line of each test case contains one string of lowercase Latin letters bb (1≤|b|≤1031≤|b|≤103) — the second string, where |b||b| denotes the length of string bb.The third line of each test case contains one string of lowercase Latin letters cc (|c|=|a|+|b||c|=|a|+|b|) — the third string.It is guaranteed that the sum of |a||a| across all test cases does not exceed 2⋅1032⋅103. Also, the sum of |b||b| across all test cases does not exceed 2⋅1032⋅103.
OutputFor each test case, output a single integer — the minimum number of characters that could have been changed in string cc.
InputCopy7abcbabcdacbdabbaaabbxxxyyyxyxyxyabcddecfcodeshorsecodeforceseggannieegaegaeg
InputCopy
Copy
7
a
b
cb
ab
cd
acbd
ab
ba
aabb
xxx
yyy
xyxyxy
a
bcd
decf
codes
horse
codeforces
egg
annie
egaegaeg
OutputCopy1
0
2
0
3
2
3

OutputCopy
Copy


[Problem F - contest/2050]
You are given an array aa of length nn and qq queries ll, rr.For each query, find the maximum possible mm, such that all elements alal, al+1al+1, ..., arar are equal modulo mm. In other words, almodm=al+1modm=⋯=armodmalmodm=al+1modm=⋯=armodm, where amodbamodb — is the remainder of division aa by bb. In particular, when mm can be infinite, print 00.
InputThe first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases.The first line of each test case contains two integers nn, qq (1≤n,q≤2⋅1051≤n,q≤2⋅105) — the length of the array and the number of queries.The second line of each test case contains nn integers aiai (1≤ai≤1091≤ai≤109) — the elements of the array.In the following qq lines of each test case, two integers ll, rr are provided (1≤l≤r≤n1≤l≤r≤n) — the range of the query.It is guaranteed that the sum of nn across all test cases does not exceed 2⋅1052⋅105, and the sum of qq does not exceed 2⋅1052⋅105.
OutputFor each query, output the maximum value mm described in the statement.
InputCopy35 55 14 2 6 34 51 42 43 51 11 171 13 21 7 82 31 2
InputCopy
Copy
3
5 5
5 14 2 6 3
4 5
1 4
2 4
3 5
1 1
1 1
7
1 1
3 2
1 7 8
2 3
1 2
OutputCopy3 1 4 1 0 
0 
1 6 

OutputCopy
Copy


[Problem G - contest/2050]
Given a tree∗∗ with nn vertices. You can choose two vertices aa and bb once and remove all vertices on the path from aa to bb, including the vertices themselves. If you choose a=ba=b, only one vertex will be removed.Your task is to find the maximum number of connected components†† that can be formed after removing the path from the tree.∗∗A tree is a connected graph without cycles. ††A connected component is a set of vertices such that there is a path along the edges from any vertex to any other vertex in the set (and it is not possible to reach vertices not belonging to this set)
InputThe first line of the input contains one integer tt (1≤t≤1041≤t≤104) — the number of test cases.The first line of each test case contains one integer nn (2≤n≤2⋅1052≤n≤2⋅105) — the size of the tree.The next n−1n−1 lines contain two integers uu and vv (1≤u,v≤n1≤u,v≤n, u≠vu≠v) — the vertices connected by an edge. It is guaranteed that the edges form a tree.It is guaranteed that the sum of nn across all test cases does not exceed 2⋅105.
OutputFor each test case, output one integer — the maximum number of connected components that can be achieved using the described operation.
InputCopy621 251 22 33 43 541 22 33 452 13 14 15 462 13 14 15 36 362 13 24 25 36 4
InputCopy
Copy
6
2
1 2
5
1 2
2 3
3 4
3 5
4
1 2
2 3
3 4
5
2 1
3 1
4 1
5 4
6
2 1
3 1
4 1
5 3
6 3
6
2 1
3 2
4 2
5 3
6 4
OutputCopy1
3
2
3
4
3

OutputCopy
Copy


[Problem A - contest/2046]
 There is a matrix consisting of 22 rows and nn columns. The rows are numbered from 11 to 22 from top to bottom; the columns are numbered from 11 to nn from left to right. Let's denote the cell on the intersection of the ii-th row and the jj-th column as (i,j)(i,j). Each cell contains an integer; initially, the integer in the cell (i,j)(i,j) is ai,jai,j.You can perform the following operation any number of times (possibly zero):  choose two columns and swap them (i. e. choose two integers xx and yy such that 1≤x<y≤n1≤x<y≤n, then swap a1,xa1,x with a1,ya1,y, and then swap a2,xa2,x with a2,ya2,y). After performing the operations, you have to choose a path from the cell (1,1)(1,1) to the cell (2,n)(2,n). For every cell (i,j)(i,j) in the path except for the last, the next cell should be either (i+1,j)(i+1,j) or (i,j+1)(i,j+1). Obviously, the path cannot go outside the matrix.The cost of the path is the sum of all integers in all (n+1)(n+1) cells belonging to the path. You have to perform the operations and choose a path so that its cost is maximum possible.
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤50001≤t≤5000). The description of the test cases follows. Each test case consists of three lines:  the first line contains one integer nn (1≤n≤50001≤n≤5000) — the number of columns in the matrix;  the second line contains nn integers a1,1,a1,2,…,a1,na1,1,a1,2,…,a1,n (−105≤ai,j≤105−105≤ai,j≤105) — the first row of the matrix;  the third line contains nn integers a2,1,a2,2,…,a2,na2,1,a2,2,…,a2,n (−105≤ai,j≤105−105≤ai,j≤105) — the second row of the matrix. It is guaranteed that the sum of nn over all test cases does not exceed 50005000. 
OutputFor each test case, print one integer — the maximum cost of a path you can obtain.
InputCopy31-10531 2 310 -5 -342 8 5 31 10 3 4
InputCopy
Copy
3
1
-10
5
3
1 2 3
10 -5 -3
4
2 8 5 3
1 10 3 4
OutputCopy-5
16
29

OutputCopy
Copy


[Problem B - contest/2046]
 You are given an array of integers aa of length nn. You can perform the following operation zero or more times:   In one operation choose an index ii (1≤i≤n1≤i≤n), assign ai:=ai+1ai:=ai+1, and then move aiai to the back of the array (to the rightmost position). For example, if a=[3,5,1,9]a=[3,5,1,9], and you choose i=2i=2, the array becomes [3,1,9,6][3,1,9,6]. Find the lexicographically smallest∗∗ array you can get by performing these operations.∗∗An array cc is lexicographically smaller than an array dd if and only if one of the following holds:   cc is a prefix of dd, but c≠dc≠d; or  in the first position where cc and dd differ, the array cc has a smaller element than the corresponding element in dd.  
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤1041≤t≤104). The description of the test cases follows. The first line contains a single integer nn (1≤n≤1051≤n≤105), the length of the array.The second line contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤1091≤ai≤109), the elements of the array.It is guaranteed that the sum of nn over all test cases does not exceed 105105. 
OutputFor each test case, print the lexicographically smallest array you can get.
InputCopy332 1 351 2 2 1 461 2 3 6 5 4
InputCopy
Copy
3
3
2 1 3
5
1 2 2 1 4
6
1 2 3 6 5 4
OutputCopy1 3 3 
1 1 3 3 5 
1 2 3 4 6 7 

OutputCopy
Copy


[Problem C - contest/2046]
 Once, four Roman merchants met in a Roman mansion to discuss their trading plans. They faced the following problem: they traded the same type of goods, and if they traded in the same city, they would inevitably incur losses. They decided to divide up the cities between them where they would trade.The map of Rome can be represented in this problem as a plane with certain points marked — the cities of the Roman Empire.The merchants decided to choose a certain dividing point (x0,y0). Then, in a city with coordinates (xi,yi),   the first merchant sells goods if x0≤xi and y0≤yi;  the second merchant sells goods if x0>xi and y0≤yi;  the third merchant sells goods if x0≤xi and y0>yi;  the fourth merchant sells goods if x0>xi and y0>yi. The merchants want to choose (x0,y0) in such a way as to maximize the smallest number of cities that any of them gets (i. e., as fair as possible). Please find such a point for them.
InputEach test contains multiple test cases. The first line contains the number of test cases t (1≤t≤104). The description of the test cases follows. The first line of each test case contains a single integer n (4≤n≤105) — the number of cities on the map.Each of the next n lines contains two integers xi,yi (−109≤xi,yi≤109) — the coordinates of the cities.Note that some points may coincide. This is because some cities may be so close that they cannot be distinguished on the map at the given scale.It is guaranteed that the sum of n over all test cases does not exceed 105. 
OutputFor each test case, in the first line, print a single integer k (0≤k≤n4) — the maximum possible number of cities that each merchant can get at a minimum.In the second line, print two integers x0 and y0 (|x0|,|y0|≤109) — the coordinates of the dividing point. If there are multiple suitable points, print any of them.
InputCopy441 11 22 12 240 00 00 00 081 22 12 -11 -2-1 -2-2 -1-2 1-1 271 11 21 31 42 13 14 1
InputCopy
Copy
4
4
1 1
1 2
2 1
2 2
4
0 0
0 0
0 0
0 0
8
1 2
2 1
2 -1
1 -2
-1 -2
-2 -1
-2 1
-1 2
7
1 1
1 2
1 3
1 4
2 1
3 1
4 1
OutputCopy1
2 2
0
0 0
2
1 0
0
0 0

OutputCopy
Copy


[Problem D - contest/2046]
 In Ancient Rome, a plan to defeat the barbarians was developed, but for its implementation, each city must be informed about it.The northern part of the Roman Empire consists of nn cities connected by mm one-way roads. Initially, the ii-th city has aiai messengers, and each messenger can freely move between cities following the existing roads. A messenger can carry a copy of the plan with him and inform the cities he visits, and can make unlimited copies for other messengers in the city he is currently in.At the start, you will produce some number of plans and deliver them to messengers of your choice. Your goal is to make sure that every city is visited by a messenger with a plan. Find the smallest number of the plans you need to produce originally, so that the messengers will deliver them to every city, or determine that it is impossible to do so at all.
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤1001≤t≤100). The description of the test cases follows. The first line contains two integers nn and mm (2≤n≤2002≤n≤200, 1≤m≤8001≤m≤800) — the number of cities and roads.The second line contains nn non-negative integers a1,a2,…,ana1,a2,…,an (0≤ai≤n0≤ai≤n) — the initial number of messengers in each city.Each of the following mm lines contains two integers uu and vv (1≤u,v≤n,u≠v1≤u,v≤n,u≠v), indicating that there is a one-way road from city uu to city vv. The roads may repeat.It is guaranteed that the sum of nn over all test cases does not exceed 200200.  It is guaranteed that the sum of mm over all test cases does not exceed 800800. 
OutputOutput a single line containing a single integer — the smallest number of messengers you need to give a copy of the plan in the beginning, or −1−1 if it is not possible to inform all cities.
InputCopy27 62 1 0 1 2 3 41 21 32 42 53 63 74 41 1 1 11 21 32 43 4
InputCopy
Copy
2
7 6
2 1 0 1 2 3 4
1 2
1 3
2 4
2 5
3 6
3 7
4 4
1 1 1 1
1 2
1 3
2 4
3 4
OutputCopy2
2

OutputCopy
Copy


[Problem E1 - contest/2046]
 This is the easy version of the problem. The difference between the versions is that in this version, mm equals 22. You can hack only if you solved all versions of this problem. There is a problem-solving competition in Ancient Egypt with nn participants, numbered from 11 to nn. Each participant comes from a certain city; the cities are numbered from 11 to mm. There is at least one participant from each city.The ii-th participant has strength aiai, specialization sisi, and wisdom bibi, so that bi≥aibi≥ai. Each problem in the competition will have a difficulty dd and a unique topic tt. The ii-th participant will solve the problem if   ai≥dai≥d, i.e., their strength is not less than the problem's difficulty, or  si=tsi=t, and bi≥dbi≥d, i.e., their specialization matches the problem's topic, and their wisdom is not less than the problem's difficulty. Cheops wants to choose the problems in such a way that each participant from city ii will solve strictly more problems than each participant from city jj, for all i<ji<j.Please find a set of at most 5n5n problems, where the topics of all problems are distinct, so that Cheops' will is satisfied, or state that it is impossible.
InputEach test contains multiple test cases. The first line contains the number of test cases TT (1≤T≤1041≤T≤104). The description of the test cases follows. The first line of each test case contains two integers nn, mm (2=m≤n≤3⋅1052=m≤n≤3⋅105) — the number of participants and the number of cities.The following nn lines describe the participants. The ii-th line contains three integers —aiai, bibi, sisi (0≤ai,bi,si≤1090≤ai,bi,si≤109, ai≤biai≤bi) — strength, wisdom, and specialization of the ii-th participant, respectively.The next mm lines describe the cities. In the ii-th line, the first number is an integer kiki (1≤ki≤n1≤ki≤n) — the number of participants from the ii-th city. It is followed by kiki integers qi,1,qi,2,…,qi,kiqi,1,qi,2,…,qi,ki — (1≤qi,j≤n1≤qi,j≤n, 1≤j≤ki1≤j≤ki) — the indices of the participants from this city. It is guaranteed that each participant is mentioned exactly once.It is guaranteed that the sum of nn over all test cases does not exceed 3⋅1053⋅105. 
OutputFor each test case, if there exists a set of problems that satisfies Cheops' conditions, then in the first line output a single integer pp (1≤p≤5n1≤p≤5n) — the number of problems in your solution.Then output pp lines, each containing two integers dd and tt (0≤d,t≤1090≤d,t≤109) — the difficulty and topic of the respective problem. The topics must be distinct.If there is no set of problems that meets Cheops' wishes, print −1−1 instead.
InputCopy25 25 7 16 7 23 9 25 10 34 4 12 1 23 3 4 52 21 2 11 2 11 21 1
InputCopy
Copy
2
5 2
5 7 1
6 7 2
3 9 2
5 10 3
4 4 1
2 1 2
3 3 4 5
2 2
1 2 1
1 2 1
1 2
1 1
OutputCopy7
6 4
6 5
5 6
5 7
4 8
4 9
7 1
-1

OutputCopy
Copy


[Problem E2 - contest/2046]
 This is the hard version of the problem. The difference between the versions is that in this version, m is arbitrary. You can hack only if you solved all versions of this problem. There is a problem-solving competition in Ancient Egypt with n participants, numbered from 1 to n. Each participant comes from a certain city; the cities are numbered from 1 to m. There is at least one participant from each city.The i-th participant has strength ai, specialization si, and wisdom bi, so that bi≥ai. Each problem in the competition will have a difficulty d and a unique topic t. The i-th participant will solve the problem if   ai≥d, i.e., their strength is not less than the problem's difficulty, or  si=t, and bi≥d, i.e., their specialization matches the problem's topic, and their wisdom is not less than the problem's difficulty. Cheops wants to choose the problems in such a way that each participant from city i will solve strictly more problems than each participant from city j, for all i<j.Please find a set of at most 5n problems, where the topics of all problems are distinct, so that Cheops' will is satisfied, or state that it is impossible.
InputEach test contains multiple test cases. The first line contains the number of test cases T (1≤T≤104). The description of the test cases follows. The first line of each test case contains two integers n, m (2≤m≤n≤3⋅105) — the number of participants and the number of cities.The following n lines describe the participants. The i-th line contains three integers —ai, bi, si (0≤ai,bi,si≤109, ai≤bi) — strength, wisdom, and specialization of the i-th participant, respectively.The next m lines describe the cities. In the i-th line, the first number is an integer ki (1≤ki≤n) — the number of participants from the i-th city. It is followed by ki integers qi,1,qi,2,…,qi,ki — (1≤qi,j≤n, 1≤j≤ki) — the indices of the participants from this city. It is guaranteed that each participant is mentioned exactly once.It is guaranteed that the sum of n over all test cases does not exceed 3⋅105. 
OutputFor each test case, if there exists a set of problems that satisfies Cheops' conditions, then in the first line output a single integer p (1≤p≤5n) — the number of problems in your solution.Then output p lines, each containing two integers d and t (0≤d,t≤109) — the difficulty and topic of the respective problem. The topics must be distinct.If there is no set of problems that meets Cheops' wishes, print −1 instead.
InputCopy25 25 7 16 7 23 9 25 10 34 4 12 1 23 3 4 52 21 2 11 2 11 21 1
InputCopy
Copy
2
5 2
5 7 1
6 7 2
3 9 2
5 10 3
4 4 1
2 1 2
3 3 4 5
2 2
1 2 1
1 2 1
1 2
1 1
OutputCopy7
6 4
6 5
5 6
5 7
4 8
4 9
7 1
-1

OutputCopy
Copy


[Problem F1 - contest/2046]
 This is the easy version of the problem. The difference between the versions is that in this version, there are no question marks. You can hack only if you solved all versions of this problem. For a long time, no one could decipher Sumerian cuneiform. However, it has finally succumbed to pressure! Today, you have the chance to decipher Yandex cuneiform.Yandex cuneiform is defined by the following rules:   An empty string is a Yandex cuneiform.  If you insert exactly one copy of each of the three letters 'Y', 'D', and 'X' into a Yandex cuneiform in such a way that no two adjacent letters become equal after the operation, you obtain a Yandex cuneiform.  If a string can't be obtained using the above rules, it is not a Yandex cuneiform. You are given a template. A template is a string consisting of the characters 'Y', 'D', 'X', and '?'.You need to check whether there exists a way to replace each question mark with 'Y', 'D', or 'X' to obtain a Yandex cuneiform, and if it exists, output any of the matching options, as well as a sequence of insertion operations to obtain the resulting cuneiform.In this version of the problem, there are no question marks in the template.
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤5⋅1041≤t≤5⋅104). The description of the test cases follows. Each test case consists of a single line containing a template of length nn (3≤n<2⋅1053≤n<2⋅105, nmod3=0nmod3=0), consisting only of characters 'Y', 'D', 'X'.It is guaranteed that the sum of nn over all test cases does not exceed 2⋅1052⋅105. 
OutputFor each test case, output a single line containing 'NO' if it is not possible to obtain a cuneiform from the given template.Otherwise, output 'YES' on the first line, and on the second line, any obtainable cuneiform. After that, you need to output the sequence of operations that leads to the cuneiform you printed.A sequence of operations is described by n3n3 triples of pairs. A pair has the form c p, where cc is one of the letters 'Y', 'D', or 'X', and pp is the position at which the letter cc should be inserted. The insertion position is the number of letters to skip from the beginning of the string for the insertion. For example, after inserting the character 'D' into the string "YDX" with p=3p=3, the result is "YDXD", and with p=0p=0, it is "DYDX". Note that the index cannot exceed the current length of the string.The operations are applied from top to bottom, left to right. After inserting each triple to the string, there should be no two adjacent identical characters.
InputCopy4YDXYDXDYXYDXDYYDXYXYX
InputCopy
Copy
4
YDX
YDXDYX
YDX
DYYDXYXYX
OutputCopyYES
YDX
X 0 D 0 Y 0 
YES
YDXDYX
X 0 Y 0 D 1
X 2 D 3 Y 4
YES
YDX
Y 0 D 1 X 2
NO
OutputCopy
Copy


[Problem F2 - contest/2046]
 This is the hard version of the problem. The difference between the versions is that in this version, there is no restriction on the number of question marks. You can hack only if you solved all versions of this problem. For a long time, no one could decipher Sumerian cuneiform. However, it has finally succumbed to pressure! Today, you have the chance to decipher Yandex cuneiform.Yandex cuneiform is defined by the following rules:   An empty string is a Yandex cuneiform.  If you insert exactly one copy of each of the three letters 'Y', 'D', and 'X' into a Yandex cuneiform in such a way that no two adjacent letters become equal after the operation, you obtain a Yandex cuneiform.  If a string can't be obtained using the above rules, it is not a Yandex cuneiform. You are given a template. A template is a string consisting of the characters 'Y', 'D', 'X', and '?'.You need to check whether there exists a way to replace each question mark with 'Y', 'D', or 'X' to obtain a Yandex cuneiform, and if it exists, output any of the matching options, as well as a sequence of insertion operations to obtain the resulting cuneiform.In this version of the problem, the number of question marks in the template can be arbitrary.
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤5⋅1041≤t≤5⋅104). The description of the test cases follows. Each test case consists of a single line containing a template of length nn (3≤n<2⋅1053≤n<2⋅105, nmod3=0nmod3=0), consisting only of characters 'Y', 'D', 'X', and '?'.It is guaranteed that the sum of nn over all test cases does not exceed 2⋅1052⋅105. 
OutputFor each test case, output a single line containing 'NO' if it is not possible to obtain a cuneiform from the given template.Otherwise, output 'YES' on the first line, and on the second line, any obtainable cuneiform. After that, you need to output the sequence of operations that leads to the cuneiform you printed.A sequence of operations is described by n3n3 triples of pairs. A pair has the form c p, where cc is one of the letters 'Y', 'D', or 'X', and pp is the position at which the letter cc should be inserted. The insertion position is the number of letters to skip from the beginning of the string for the insertion. For example, after inserting the character 'D' into the string "YDX" with p=3p=3, the result is "YDXD", and with p=0p=0, it is "DYDX". Note that the index cannot exceed the current length of the string.The operations are applied from top to bottom, left to right. After inserting each triple to the string, there should be no two adjacent identical characters.
InputCopy4???Y??D?X???D??DXYXYX
InputCopy
Copy
4
???
Y??D?X
???
D??DXYXYX
OutputCopyYES
YDX
X 0 D 0 Y 0 
YES
YDXDYX
X 0 Y 0 D 1
X 2 D 3 Y 4
YES
YDX
Y 0 D 1 X 2
NO

OutputCopy
Copy


[Problem A - contest/2047]
Alyona assembles an unusual square Jigsaw Puzzle. She does so in nn days in the following manner:   On the first day, she starts by placing the central piece in the center of the table.  On each day after the first one, she places a certain number of pieces around the central piece in clockwise order, always finishing each square layer completely before starting a new one. For example, she places the first 1414 pieces in the following order:   The colors denote the layers. The third layer is still unfinished. Alyona is happy if at the end of the day the assembled part of the puzzle does not have any started but unfinished layers. Given the number of pieces she assembles on each day, find the number of days Alyona is happy on.
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤5001≤t≤500). The description of the test cases follows. The first line contains a single integer nn (1≤n≤1001≤n≤100), the number of days.The second line contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤1001≤ai≤100, a1=1a1=1), where aiai is the number of pieces Alyona assembles on the ii-th day.It is guaranteed in each test case that at the end of the nn days, there are no unfinished layers.
OutputFor each test case, print a single integer: the number of days when Alyona is happy.
InputCopy51121 851 3 2 1 271 2 1 10 2 7 2141 10 10 100 1 1 10 1 10 2 10 2 10 1
InputCopy
Copy
5
1
1
2
1 8
5
1 3 2 1 2
7
1 2 1 10 2 7 2
14
1 10 10 100 1 1 10 1 10 2 10 2 10 1
OutputCopy1
2
2
2
3

OutputCopy
Copy


[Problem B - contest/2047]
You're given a string ss of length nn, consisting of only lowercase English letters. You must do the following operation exactly once:   Choose any two indices ii and jj (1≤i,j≤n1≤i,j≤n). You can choose i=ji=j.  Set si:=sjsi:=sj. You need to minimize the number of distinct permutations†† of ss. Output any string with the smallest number of distinct permutations after performing exactly one operation.†† A permutation of the string is an arrangement of its characters into any order. For example, "bac" is a permutation of "abc" but "bcc" is not.
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤5001≤t≤500). The description of the test cases follows.The first line of each test case contains nn (1≤n≤101≤n≤10) — the length of string ss.The second line of each test case contains ss of length nn. The string contains only lowercase English letters.
OutputFor each test case, output the required ss after applying exactly one operation. If there are multiple solutions, print any of them.
InputCopy63abc4xyyx8alphabet1k10aabbccddee6ttbddq
InputCopy
Copy
6
3
abc
4
xyyx
8
alphabet
1
k
10
aabbccddee
6
ttbddq
OutputCopycbc
yyyx
alphaaet
k
eabbccddee
tttddq

OutputCopy
Copy


[Problem C - contest/2047]
 There is a matrix consisting of 22 rows and nn columns. The rows are numbered from 11 to 22 from top to bottom; the columns are numbered from 11 to nn from left to right. Let's denote the cell on the intersection of the ii-th row and the jj-th column as (i,j)(i,j). Each cell contains an integer; initially, the integer in the cell (i,j)(i,j) is ai,jai,j.You can perform the following operation any number of times (possibly zero):  choose two columns and swap them (i. e. choose two integers xx and yy such that 1≤x<y≤n1≤x<y≤n, then swap a1,xa1,x with a1,ya1,y, and then swap a2,xa2,x with a2,ya2,y). After performing the operations, you have to choose a path from the cell (1,1)(1,1) to the cell (2,n)(2,n). For every cell (i,j)(i,j) in the path except for the last, the next cell should be either (i+1,j)(i+1,j) or (i,j+1)(i,j+1). Obviously, the path cannot go outside the matrix.The cost of the path is the sum of all integers in all (n+1)(n+1) cells belonging to the path. You have to perform the operations and choose a path so that its cost is maximum possible.
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤50001≤t≤5000). The description of the test cases follows. Each test case consists of three lines:  the first line contains one integer nn (1≤n≤50001≤n≤5000) — the number of columns in the matrix;  the second line contains nn integers a1,1,a1,2,…,a1,na1,1,a1,2,…,a1,n (−105≤ai,j≤105−105≤ai,j≤105) — the first row of the matrix;  the third line contains nn integers a2,1,a2,2,…,a2,na2,1,a2,2,…,a2,n (−105≤ai,j≤105−105≤ai,j≤105) — the second row of the matrix. It is guaranteed that the sum of nn over all test cases does not exceed 50005000. 
OutputFor each test case, print one integer — the maximum cost of a path you can obtain.
InputCopy31-10531 2 310 -5 -342 8 5 31 10 3 4
InputCopy
Copy
3
1
-10
5
3
1 2 3
10 -5 -3
4
2 8 5 3
1 10 3 4
OutputCopy-5
16
29

OutputCopy
Copy


[Problem D - contest/2047]
 You are given an array of integers aa of length nn. You can perform the following operation zero or more times:   In one operation choose an index ii (1≤i≤n1≤i≤n), assign ai:=ai+1ai:=ai+1, and then move aiai to the back of the array (to the rightmost position). For example, if a=[3,5,1,9]a=[3,5,1,9], and you choose i=2i=2, the array becomes [3,1,9,6][3,1,9,6]. Find the lexicographically smallest∗∗ array you can get by performing these operations.∗∗An array cc is lexicographically smaller than an array dd if and only if one of the following holds:   cc is a prefix of dd, but c≠dc≠d; or  in the first position where cc and dd differ, the array cc has a smaller element than the corresponding element in dd.  
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤1041≤t≤104). The description of the test cases follows. The first line contains a single integer nn (1≤n≤1051≤n≤105), the length of the array.The second line contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤1091≤ai≤109), the elements of the array.It is guaranteed that the sum of nn over all test cases does not exceed 105105. 
OutputFor each test case, print the lexicographically smallest array you can get.
InputCopy332 1 351 2 2 1 461 2 3 6 5 4
InputCopy
Copy
3
3
2 1 3
5
1 2 2 1 4
6
1 2 3 6 5 4
OutputCopy1 3 3 
1 1 3 3 5 
1 2 3 4 6 7 

OutputCopy
Copy


[Problem E - contest/2047]
 Once, four Roman merchants met in a Roman mansion to discuss their trading plans. They faced the following problem: they traded the same type of goods, and if they traded in the same city, they would inevitably incur losses. They decided to divide up the cities between them where they would trade.The map of Rome can be represented in this problem as a plane with certain points marked — the cities of the Roman Empire.The merchants decided to choose a certain dividing point (x0,y0)(x0,y0). Then, in a city with coordinates (xi,yi)(xi,yi),   the first merchant sells goods if x0≤xix0≤xi and y0≤yiy0≤yi;  the second merchant sells goods if x0>xix0>xi and y0≤yiy0≤yi;  the third merchant sells goods if x0≤xix0≤xi and y0>yiy0>yi;  the fourth merchant sells goods if x0>xix0>xi and y0>yiy0>yi. The merchants want to choose (x0,y0)(x0,y0) in such a way as to maximize the smallest number of cities that any of them gets (i. e., as fair as possible). Please find such a point for them.
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤1041≤t≤104). The description of the test cases follows. The first line of each test case contains a single integer nn (4≤n≤1054≤n≤105) — the number of cities on the map.Each of the next nn lines contains two integers xi,yixi,yi (−109≤xi,yi≤109−109≤xi,yi≤109) — the coordinates of the cities.Note that some points may coincide. This is because some cities may be so close that they cannot be distinguished on the map at the given scale.It is guaranteed that the sum of nn over all test cases does not exceed 105105. 
OutputFor each test case, in the first line, print a single integer kk (0≤k≤n40≤k≤n4) — the maximum possible number of cities that each merchant can get at a minimum.In the second line, print two integers x0x0 and y0y0 (|x0|,|y0|≤109|x0|,|y0|≤109) — the coordinates of the dividing point. If there are multiple suitable points, print any of them.
InputCopy441 11 22 12 240 00 00 00 081 22 12 -11 -2-1 -2-2 -1-2 1-1 271 11 21 31 42 13 14 1
InputCopy
Copy
4
4
1 1
1 2
2 1
2 2
4
0 0
0 0
0 0
0 0
8
1 2
2 1
2 -1
1 -2
-1 -2
-2 -1
-2 1
-1 2
7
1 1
1 2
1 3
1 4
2 1
3 1
4 1
OutputCopy1
2 2
0
0 0
2
1 0
0
0 0

OutputCopy
Copy


[Problem F - contest/2047]
 In Ancient Rome, a plan to defeat the barbarians was developed, but for its implementation, each city must be informed about it.The northern part of the Roman Empire consists of nn cities connected by mm one-way roads. Initially, the ii-th city has aiai messengers, and each messenger can freely move between cities following the existing roads. A messenger can carry a copy of the plan with him and inform the cities he visits, and can make unlimited copies for other messengers in the city he is currently in.At the start, you will produce some number of plans and deliver them to messengers of your choice. Your goal is to make sure that every city is visited by a messenger with a plan. Find the smallest number of the plans you need to produce originally, so that the messengers will deliver them to every city, or determine that it is impossible to do so at all.
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤1001≤t≤100). The description of the test cases follows. The first line contains two integers nn and mm (2≤n≤2002≤n≤200, 1≤m≤8001≤m≤800) — the number of cities and roads.The second line contains nn non-negative integers a1,a2,…,ana1,a2,…,an (0≤ai≤n0≤ai≤n) — the initial number of messengers in each city.Each of the following mm lines contains two integers uu and vv (1≤u,v≤n,u≠v1≤u,v≤n,u≠v), indicating that there is a one-way road from city uu to city vv. The roads may repeat.It is guaranteed that the sum of nn over all test cases does not exceed 200200.  It is guaranteed that the sum of mm over all test cases does not exceed 800800. 
OutputOutput a single line containing a single integer — the smallest number of messengers you need to give a copy of the plan in the beginning, or −1−1 if it is not possible to inform all cities.
InputCopy27 62 1 0 1 2 3 41 21 32 42 53 63 74 41 1 1 11 21 32 43 4
InputCopy
Copy
2
7 6
2 1 0 1 2 3 4
1 2
1 3
2 4
2 5
3 6
3 7
4 4
1 1 1 1
1 2
1 3
2 4
3 4
OutputCopy2
2

OutputCopy
Copy


[Problem A - contest/2042]
There are nn chests; the ii-th chest initially contains aiai coins. For each chest, you can choose any non-negative (00 or greater) number of coins to add to that chest, with one constraint: the total number of coins in all chests must become at least kk.After you've finished adding coins to the chests, greedy Monocarp comes, who wants the coins. He will take the chests one by one, and since he is greedy, he will always choose the chest with the maximum number of coins. Monocarp will stop as soon as the total number of coins in chests he takes is at least kk.You want Monocarp to take as few coins as possible, so you have to add coins to the chests in such a way that, when Monocarp stops taking chests, he will have exactly kk coins. Calculate the minimum number of coins you have to add.
InputThe first line contains one integer tt (1≤t≤10001≤t≤1000) — the number of test cases.Each test case consists of two lines:  the first line contains two integers nn and kk (1≤n≤501≤n≤50; 1≤k≤1071≤k≤107);  the second line contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤k1≤ai≤k). 
OutputFor each test case, print one integer — the minimum number of coins you have to add so that, when Monocarp stops taking the chests, he has exactly kk coins. It can be shown that under the constraints of the problem, it is always possible.
InputCopy45 44 1 2 3 25 104 1 2 3 22 101 13 83 3 3
InputCopy
Copy
4
5 4
4 1 2 3 2
5 10
4 1 2 3 2
2 10
1 1
3 8
3 3 3
OutputCopy0
1
8
2

OutputCopy
Copy


[Problem B - contest/2042]
Alice and Bob play a game. There are n marbles, the i-th of them has color c_i. The players take turns; Alice goes first, then Bob, then Alice again, then Bob again, and so on.During their turn, a player must take one of the remaining marbles and remove it from the game. If there are no marbles left (all n marbles have been taken), the game ends.Alice's score at the end of the game is calculated as follows:  she receives 1 point for every color x such that she has taken at least one marble of that color;  additionally, she receives 1 point for every color x such that she has taken all marbles of that color (of course, only colors present in the game are considered). For example, suppose there are 5 marbles, their colors are [1, 3, 1, 3, 4], and the game goes as follows: Alice takes the 1-st marble, then Bob takes the 3-rd marble, then Alice takes the 5-th marble, then Bob takes the 2-nd marble, and finally, Alice takes the 4-th marble. Then, Alice receives 4 points: 3 points for having at least one marble for colors 1, 3 and 4, and 1 point for having all marbles of color 4. Note that this strategy is not necessarily optimal for both players.Alice wants to maximize her score at the end of the game. Bob wants to minimize it. Both players play optimally (i. e. Alice chooses a strategy which allows her to get as many points as possible, and Bob chooses a strategy which minimizes the amount of points Alice can get).Calculate Alice's score at the end of the game.
InputThe first line contains one integer t (1 le t le 1000) — the number of test cases.Each test case consists of two lines:  the first line contains one integer n (1 le n le 1000) — the number of marbles;  the second line contains n integers c_1, c_2, dots, c_n (1 le c_i le n) — the colors of the marbles. Additional constraint on the input: the sum of n over all test cases does not exceed 1000.
OutputFor each test case, print one integer — Alice's score at the end of the game, assuming that both players play optimally.
InputCopy351 3 1 3 431 2 344 4 4 4
InputCopy
Copy
3
5
1 3 1 3 4
3
1 2 3
4
4 4 4 4
OutputCopy4
4
1

OutputCopy
Copy


[Problem C - contest/2042]
Alice and Bob participate in a fishing contest! In total, they caught nn fishes, numbered from 11 to nn (the bigger the fish, the greater its index). Some of these fishes were caught by Alice, others — by Bob.Their performance will be evaluated as follows. First, an integer mm will be chosen, and all fish will be split into mm non-empty groups. The first group should contain several (at least one) smallest fishes, the second group — several (at least one) next smallest fishes, and so on. Each fish should belong to exactly one group, and each group should be a contiguous subsegment of fishes. Note that the groups are numbered in exactly that order; for example, the fishes from the second group cannot be smaller than the fishes from the first group, since the first group contains the smallest fishes.Then, each fish will be assigned a value according to its group index: each fish in the first group gets value equal to 00, each fish in the second group gets value equal to 11, and so on. So, each fish in the ii-th group gets value equal to (i−1)(i−1).The score of each contestant is simply the total value of all fishes that contestant caught.You want Bob's score to exceed Alice's score by at least kk points. What is the minimum number of groups (mm) you have to split the fishes into? If it is impossible, you should report that.
InputThe first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases.The first line of each test case contains two integers nn and kk (2≤n≤2⋅1052≤n≤2⋅105; 1≤k≤1091≤k≤109).The second line contains a string, consisting of exactly nn characters. The ii-th character is either 0 (denoting that the ii-th fish was caught by Alice) or 1 (denoting that the ii-th fish was caught by Bob).Additional constraint on the input: the sum of nn over all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case, print a single integer — the minimum number of groups you have to split the fishes into; or -1 if it's impossible.
InputCopy74 110014 110104 101104 201106 300111010 2011111111115 1111111
InputCopy
Copy
7
4 1
1001
4 1
1010
4 1
0110
4 2
0110
6 3
001110
10 20
1111111111
5 11
11111
OutputCopy2
-1
2
-1
3
4
-1

OutputCopy
Copy


[Problem D - contest/2042]
Suppose you are working in some audio streaming service. The service has nn active users and 109109 tracks users can listen to. Users can like tracks and, based on likes, the service should recommend them new tracks.Tracks are numbered from 11 to 109109. It turned out that tracks the ii-th user likes form a segment [li,ri][li,ri].Let's say that the user jj is a predictor for user ii (j≠ij≠i) if user jj likes all tracks the ii-th user likes (and, possibly, some other tracks too).Also, let's say that a track is strongly recommended for user ii if the track is not liked by the ii-th user yet, but it is liked by every predictor for the ii-th user.Calculate the number of strongly recommended tracks for each user ii. If a user doesn't have any predictors, then print 00 for that user.
InputThe first line contains one integer tt (1≤t≤1041≤t≤104) — the number of test cases. Next, tt cases follow.The first line of each test case contains one integer nn (1≤n≤2⋅1051≤n≤2⋅105) — the number of users.The next nn lines contain two integers lili and riri per line (1≤li≤ri≤1091≤li≤ri≤109) — the segment of tracks the ii-th user likes.Additional constraint on the input: the sum of nn over all test cases doesn't exceed 2⋅1052⋅105.
OutputFor each test case, print nn integers, where the ii-th integer is the number of strongly recommended tracks for the ii-th user (or 00, if that user doesn't have any predictors).
InputCopy433 82 54 5242 421 1000000000342 421 100000000042 4261 103 103 75 74 41 2
InputCopy
Copy
4
3
3 8
2 5
4 5
2
42 42
1 1000000000
3
42 42
1 1000000000
42 42
6
1 10
3 10
3 7
5 7
4 4
1 2
OutputCopy0
0
1
999999999
0
0
0
0
0
2
3
2
4
8

OutputCopy
Copy


[Problem E - contest/2042]
You are given a tree consisting of 2n2n vertices. Recall that a tree is a connected undirected graph with no cycles. Each vertex has an integer from 11 to nn written on it. Each value from 11 to nn is written on exactly two different vertices. Each vertex also has a cost —vertex ii costs 2i2i.You need to choose a subset of vertices of the tree such that:   the subset is connected; that is, from each vertex in the subset, you can reach every other vertex in the subset by passing only through the vertices in the subset;  each value from 11 to nn is written on at least one vertex in the subset. Among all such subsets, you need to find the one with the smallest total cost of the vertices in it. Note that you are not required to minimize the number of vertices in the subset.
InputThe first line contains a single integer nn (1≤n≤2⋅1051≤n≤2⋅105).The second line contains 2n2n integers a1,a2,…,a2na1,a2,…,a2n (1≤ai≤n1≤ai≤n). Each value from 11 to nn appears exactly twice.Each of the next 2n−12n−1 lines contains two integers vv and uu (1≤v,u≤2n1≤v,u≤2n) — the edges of the tree. These edges form a valid tree.
OutputIn the first line, print a single integer kk — the number of vertices in the subset.In the second line, print kk distinct integers from 11 to 2n2n — the indices of the vertices in the chosen subset. The vertices can be printed in an arbitrary order.
InputCopy31 1 3 2 3 24 21 66 26 32 5
InputCopy
Copy
3
1 1 3 2 3 2
4 2
1 6
6 2
6 3
2 5
OutputCopy3
2 4 5 

OutputCopy
Copy
InputCopy32 3 1 3 2 16 42 45 23 63 1
InputCopy
Copy
3
2 3 1 3 2 1
6 4
2 4
5 2
3 6
3 1
OutputCopy4
1 3 4 6 

OutputCopy
Copy
InputCopy65 2 3 4 6 4 2 5 6 1 1 310 82 1012 74 105 96 21 93 412 611 54 5
InputCopy
Copy
6
5 2 3 4 6 4 2 5 6 1 1 3
10 8
2 10
12 7
4 10
5 9
6 2
1 9
3 4
12 6
11 5
4 5
OutputCopy6
2 3 4 5 8 10 

OutputCopy
Copy


[Problem F - contest/2042]
You are given two integer arrays aa and bb, both of size nn.Let's define the cost of the subarray [l,r][l,r] as al+al+1+⋯+ar−1+ar+bl+bral+al+1+⋯+ar−1+ar+bl+br. If l=rl=r, then the cost of the subarray is al+2⋅blal+2⋅bl.You have to perform queries of three types:   "11 pp xx" — assign ap:=xap:=x;  "22 pp xx" — assign bp:=xbp:=x;  "33 ll rr" — find two non-empty non-overlapping subarrays within the segment [l,r][l,r] with the maximum total cost and print their total cost. 
InputThe first line contains a single integer nn (2≤n≤2⋅1052≤n≤2⋅105).The second line contains nn integers a1,a2,…,ana1,a2,…,an (−109≤ai≤109−109≤ai≤109).The third line contains nn integers b1,b2,…,bnb1,b2,…,bn (−109≤bi≤109−109≤bi≤109).The fourth line contains a single integer qq (1≤q≤2⋅1051≤q≤2⋅105).The next qq lines contain the queries: one per line. Each query is of one of three types:   "11 pp xx" (1≤p≤n1≤p≤n; −109≤x≤109−109≤x≤109);  "22 pp xx" (1≤p≤n1≤p≤n; −109≤x≤109−109≤x≤109);  "33 ll rr" (1≤l<r≤n1≤l<r≤n). It is guaranteed that there is at least one query of the third type.
OutputFor each query of the third type, print the maximum possible total cost of two non-empty non-overlapping subarrays within the segment [l,r][l,r].
InputCopy73 -1 4 -3 2 4 00 6 1 0 -3 -2 -163 1 71 2 03 3 62 5 -31 3 23 1 5
InputCopy
Copy
7
3 -1 4 -3 2 4 0
0 6 1 0 -3 -2 -1
6
3 1 7
1 2 0
3 3 6
2 5 -3
1 3 2
3 1 5
OutputCopy18
7
16

OutputCopy
Copy
InputCopy102 -1 -3 -2 0 4 5 6 2 52 -4 -5 -1 6 2 5 -6 4 2103 6 71 10 -23 5 73 2 82 1 -52 7 43 1 33 3 83 2 31 4 4
InputCopy
Copy
10
2 -1 -3 -2 0 4 5 6 2 5
2 -4 -5 -1 6 2 5 -6 4 2
10
3 6 7
1 10 -2
3 5 7
3 2 8
2 1 -5
2 7 4
3 1 3
3 3 8
3 2 3
1 4 4
OutputCopy23
28
28
-17
27
-22

OutputCopy
Copy


[Problem A - contest/2045]
You are playing a word game using a standard set of 26 uppercase English letters: A — Z. In this game, you can form vowels and consonants as follows.  The letters A, E, I, O, and U can only form a vowel.  The letter Y can form either a vowel or a consonant.  Each of the remaining letters other than A, E, I, O, U, and Y can only form a consonant.  The string NG can form a single consonant when concatenated together. Denote a syllable as a concatenation of a consonant, a vowel, and a consonant in that order. A word is a concatenation of one or more syllables.You are given a string S and you want to create a word from it. You are allowed to delete zero or more letters from S and rearrange the remaining letters to form the word. Find the length of the longest word that can be created, or determine if no words can be created.
InputA single line consisting of a string S (1 ≤ |S| ≤ 5000). The string S consists of only uppercase English letters.
OutputIf a word cannot be created, output 0. Otherwise, output a single integer representing the length of longest word that can be created.
InputCopyICPCJAKARTA

InputCopy
Copy
OutputCopy9

OutputCopy
Copy
InputCopyNGENG

InputCopy
Copy
OutputCopy5

OutputCopy
Copy
InputCopyYYY

InputCopy
Copy
OutputCopy3

OutputCopy
Copy
InputCopyDANGAN

InputCopy
Copy
OutputCopy6

OutputCopy
Copy
InputCopyAEIOUY

InputCopy
Copy
OutputCopy0

OutputCopy
Copy


[Problem B - contest/2045]
ICPC Square is a hotel provided by the ICPC Committee for the accommodation of the participants. It consists of NN floors (numbered from 11 to NN). This hotel has a very unique elevator. If a person is currently at floor xx, by riding the elevator once, they can go to floor yy if and only if yy is a multiple of xx and y−x≤Dy−x≤D.You are currently at floor SS. You want to go to the highest possible floor by riding the elevator zero or more times. Determine the highest floor you can reach.
InputA single line consisting of three integers NN DD SS (2≤N≤1012;1≤D≤N−1;1≤S≤N2≤N≤1012;1≤D≤N−1;1≤S≤N).
OutputOutput a single integer representing the highest floor you can reach by riding the elevator zero or more times.
InputCopy64 35 3

InputCopy
Copy
OutputCopy60

OutputCopy
Copy
InputCopy2024 2023 1273

InputCopy
Copy
OutputCopy1273

OutputCopy
Copy


[Problem C - contest/2045]
The word saraga is an abbreviation of sarana olahraga, an Indonesian term for a sports facility. It is created by taking the prefix sara of the word sarana and the suffix ga of the word olahraga. Interestingly, it can also be created by the prefix sa of the word sarana and the suffix raga of the word olahraga.An abbreviation of two strings SS and TT is interesting if there are at least two different ways to split the abbreviation into two non-empty substrings such that the first substring is a prefix of SS and the second substring is a suffix of TT.You are given two strings SS and TT. You want to create an interesting abbreviation of strings SS and TT with minimum length, or determine if it is impossible to create an interesting abbreviation.
InputThe first line consists of a string SS (1≤|S|≤2000001≤|S|≤200000).The second line consists of a string TT (1≤|T|≤2000001≤|T|≤200000).Both strings SS and TT only consist of lowercase English letters.
OutputIf it is impossible to create an interesting abbreviation, output -1.Otherwise, output a string in a single line representing an interesting abbreviation of strings SS and TT with minimum length. If there are multiple solutions, output any of them.
InputCopysarana
olahraga

InputCopy
Copy
OutputCopysaga
OutputCopy
Copy
InputCopyberhiber
wortelhijau

InputCopy
Copy
OutputCopyberhijau
OutputCopy
Copy
InputCopyicpc
icpc

InputCopy
Copy
OutputCopyicpc
OutputCopy
Copy
InputCopyicpc
jakarta

InputCopy
Copy
OutputCopy-1
OutputCopy
Copy


[Problem D - contest/2045]
You live in an archipelago consisting of NN islands (numbered from 11 to NN) laid out in a single line. Island ii is adjacent to island i+1i+1, for 1≤i<N1≤i<N. Between adjacent islands ii and i+1i+1, there is a pair of one-directional underwater tunnels: one that allows you to walk from island ii to island i+1i+1 and one for the opposite direction. Each tunnel can only be traversed at most once.You also have a dragon with you. It has a stamina represented by a non-negative integer. The stamina is required for the dragon to perform its abilities: swim and fly. Initially, its stamina is 00.Your dragon's stamina can be increased as follows. There is a magical shrine on each island ii that will immediately increase your dragon's stamina by PiPi (regardless the position of the dragon) when you visit island ii for the first time. This event takes no time.When you are on an island, there are 33 moves that you can perform.  Swim with your dragon to an adjacent island if your dragon and you are on the same island. You can perform if your dragon's stamina is at least DD. This move reduces your dragon's stamina by DD, and it takes TsTs seconds to perform.  Fly with your dragon to an adjacent island if your dragon and you are on the same island. You can perform this move if your dragon's stamina is not 00. This move sets your dragon's stamina to 00, and it takes TfTf seconds to perform.  Walk alone without your dragon to an adjacent island through the underwater tunnel. This move takes TwTw seconds to perform. Once you walk through this tunnel, it cannot be used again. Note that both swimming and flying do not use tunnels.Your dragon and you are currently on island 11. Your mission is to go to island NN with your dragon. Determine the minimum possible time to complete your mission.
InputThe first line consists of five integers NN DD TsTs TfTf TwTw (2≤N≤200000;1≤D,Ts,Tf,Tw≤2000002≤N≤200000;1≤D,Ts,Tf,Tw≤200000).The second line consists of NN integers PiPi (1≤Pi≤200000)1≤Pi≤200000).
OutputOutput an integer in a single line representing the minimum possible time to go to island NN with your dragon.
InputCopy5 4 2 9 1
1 2 4 2 1

InputCopy
Copy
OutputCopy28

OutputCopy
Copy
InputCopy5 4 2 1 1
1 2 4 2 1

InputCopy
Copy
OutputCopy4

OutputCopy
Copy
InputCopy3 4 2 10 1
3 1 2

InputCopy
Copy
OutputCopy16

OutputCopy
Copy


[Problem E - contest/2045]
You are a strategist of The ICPC Kingdom. You received an intel that there will be monster attacks on a narrow passageway near the kingdom. The narrow passageway can be represented as a grid with 22 rows (numbered from 11 to 22) and NN columns (numbered from 11 to NN). Denote (r,c)(r,c) as the cell in row rr and column cc. A soldier with a power of Pr,cPr,c is assigned to protect (r,c)(r,c) every single day.It is known that the passageway is very foggy. Within a day, each column in the passageway has a 50%50% chance of being covered in fog. If a column is covered in fog, the two soldiers assigned to that column are not deployed that day. Otherwise, the assigned soldiers will be deployed.Define a connected area [u,v][u,v] (u≤vu≤v) as a maximal set of consecutive columns from uu to vv (inclusive) such that each column in the set is not covered in fog. The following illustration is an example of connected areas. The grayed cells are cells covered in fog. There are 44 connected areas: [1,2][1,2], [4,6][4,6], [9,9][9,9], and [11,11][11,11].  The strength of a connected area [u,v][u,v] can be calculated as follows. Let m1m1 and m2m2 be the maximum power of the soldiers in the first and second rows of the connected area, respectively. Formally, mr=max(Pr,u,Pr,u+1,…,Pr,v)mr=max(Pr,u,Pr,u+1,…,Pr,v) for r∈{1,2}r∈{1,2}. If m1=m2m1=m2, then the strength is 00. Otherwise, the strength is min(m1,m2)min(m1,m2).The total strength of the deployment is the sum of the strengths for all connected areas. Determine the expected total strength of the deployment on any single day.
InputThe first line consists of an integer NN (1≤N≤1000001≤N≤100000).Each of the next two lines consists of NN integers Pr,cPr,c (1≤Pr,c≤2000001≤Pr,c≤200000).
OutputLet M=998244353M=998244353. It can be shown that the expected total strength can be expressed as an irreducible fraction xyxy such that xx and yy are integers and y≢0(modM)y≢0(modM). Output an integer kk in a single line such that 0≤k<M0≤k<M and k⋅y≡x(modM)k⋅y≡x(modM).
InputCopy3
8 4 5
5 4 8

InputCopy
Copy
OutputCopy249561092

OutputCopy
Copy
InputCopy5
10 20 5 8 5
5 20 7 5 8

InputCopy
Copy
OutputCopy811073541

OutputCopy
Copy


[Problem F - contest/2045]
Your friends, Anda and Kamu decide to play a game called Grid Game and ask you to become the gamemaster. As the gamemaster, you set up a triangular grid of size NN. The grid has NN rows (numbered from 11 to NN). Row rr has rr cells; the cc-th cell of row rr is denoted as (r,c)(r,c).  Before the game starts, MM different cells (numbered from 11 to MM) are chosen: at cell (Ri,Ci)(Ri,Ci), you add AiAi stones on it. You then give Anda and Kamu an integer KK and commence the game.Anda and Kamu will take turns alternately with Anda taking the first turn. A player on their turn will do the following.  Choose a cell (r,c)(r,c) with at least one stone on it.  Remove at least one but at most KK stones from the chosen cell.  For each cell (x,y)(x,y) such that r+1≤x≤min(N,r+K)r+1≤x≤min(N,r+K) and c≤y≤c+x−rc≤y≤c+x−r, add zero or more stones but at most KK stones to cell (x,y)(x,y). The following illustrations show all the possible cells in which you can add stones for K=3K=3. You choose the cell (2,1)(2,1) for the left illustration and the cell (4,3)(4,3) for the right illustration.  A player who is unable to complete their turn (because there are no more stones on the grid) will lose the game, and the opposing player wins. Determine who will win the game if both players play optimally.
InputThis problem is a multi-case problem. The first line consists of an integer TT (1≤T≤1001≤T≤100) that represents the number of test cases.Each test case starts with a single line consisting of three integers NN MM KK (1≤N≤109;1≤M,K≤2000001≤N≤109;1≤M,K≤200000). Then, each of the next MM lines consists of three integers RiRi CiCi AiAi (1≤Ci≤Ri≤N;1≤A1≤1091≤Ci≤Ri≤N;1≤A1≤109). The pairs (Ri,Ci)(Ri,Ci) are distinct.The sum of MM across all test cases does not exceed 200000200000.
OutputFor each case, output a string in a single line representing the player who will win the game if both players play optimally. Output Anda if Anda, the first player, wins. Otherwise, output Kamu.
InputCopy3
2 2 4
1 1 3
2 1 2
100 2 1
4 1 10
4 4 10
10 5 2
1 1 4
3 1 2
4 2 5
2 2 1
5 3 4

InputCopy
Copy
OutputCopyAnda
Kamu
Anda

OutputCopy
Copy


[Problem G - contest/2045]
Mount ICPC can be represented as a grid of RR rows (numbered from 11 to RR) and CC columns (numbered from 11 to CC). The cell located at row rr and column cc is denoted as (r,c)(r,c) and has a height of Hr,cHr,c. Two cells are adjacent to each other if they share a side. Formally, (r,c)(r,c) is adjacent to (r−1,c)(r−1,c), (r+1,c)(r+1,c), (r,c−1)(r,c−1), and (r,c+1)(r,c+1), if any exists.You can move only between adjacent cells, and each move comes with a penalty. With an aura of an odd positive integer XX, moving from a cell with height h1h1 to a cell with height h2h2 gives you a penalty of (h1−h2)X(h1−h2)X. Note that the penalty can be negative.You want to answer QQ independent scenarios. In each scenario, you start at the starting cell (Rs,Cs)(Rs,Cs) and you want to go to the destination cell (Rf,Cf)(Rf,Cf) with minimum total penalty. In some scenarios, the total penalty might become arbitrarily small; such a scenario is called invalid. Find the minimum total penalty to move from the starting cell to the destination cell, or determine if the scenario is invalid.
InputThe first line consists of three integers RR CC XX (1≤R,C≤1000;1≤X≤9;X1≤R,C≤1000;1≤X≤9;X is an odd integer).Each of the next RR lines consists of a string HrHr of length CC. Each character in HrHr is a number from 0 to 9. The cc-th character of HrHr represents the height of cell (r,c)(r,c), or Hr,cHr,c.The next line consists of an integer QQ (1≤Q≤100000)1≤Q≤100000).Each of the next QQ lines consists of four integers RsRs CsCs RfRf CfCf (1≤Rs,Rf≤R;1≤Cs,Cf≤C1≤Rs,Rf≤R;1≤Cs,Cf≤C).
OutputFor each scenario, output the following in a single line. If the scenario is invalid, output INVALID. Otherwise, output a single integer representing the minimum total penalty to move from the starting cell to the destination cell.
InputCopy3 4 1
3359
4294
3681
5
1 1 3 4
3 3 2 1
2 2 1 4
1 3 3 2
1 1 1 1

InputCopy
Copy
OutputCopy2
4
-7
-1
0

OutputCopy
Copy
InputCopy2 4 5
1908
2023
2
1 1 2 4
1 1 1 1

InputCopy
Copy
OutputCopyINVALID
INVALID

OutputCopy
Copy
InputCopy3 3 9
135
357
579
2
3 3 1 1
2 2 2 2

InputCopy
Copy
OutputCopy2048
0

OutputCopy
Copy


[Problem H - contest/2045]
You have a dictionary, which is a list of distinct words sorted in alphabetical order. Each word consists of uppercase English letters.You want to print this dictionary. However, there is a bug with the printing system, and all words in the list are printed next to each other without any separators between words. Now, you ended up with a string SS that is a concatenation of all the words in the dictionary in the listed order.Your task is to reconstruct the dictionary by splitting SS into one or more words. Note that the reconstructed dictionary must consist of distinct words sorted in alphabetical order. Furthermore, you want to maximize the number of words in the dictionary. If there are several possible dictionaries with the maximum number of words, you can choose any of them.
InputA single line consisting of a string SS (1≤|S|≤5000)1≤|S|≤5000). String SS consists of only uppercase English letters.
OutputFirst, output an integer in a single line representing the maximum number of the words in the reconstructed dictionary. Denote this number as nn.Then, output nn lines, each containing a single string representing the word. The words must be distinct, and the list must be sorted alphabetically. The concatenation of the words in the listed order must equal SS.If there are several possible dictionaries with the maximum number of words, output any of them.
InputCopyABACUS

InputCopy
Copy
OutputCopy4
A
BA
C
US
OutputCopy
Copy
InputCopyAAAAAA

InputCopy
Copy
OutputCopy3
A
AA
AAA
OutputCopy
Copy
InputCopyEDCBA

InputCopy
Copy
OutputCopy1
EDCBA
OutputCopy
Copy


[Problem I - contest/2045]
You are given an array of NN integers: [A1,A2,…,AN][A1,A2,…,AN].A subsequence can be derived from an array by removing zero or more elements without changing the order of the remaining elements. For example, [2,1,2][2,1,2], [3,3][3,3], [1][1], and [3,2,1,3,2][3,2,1,3,2] are subsequences of array [3,2,1,3,2][3,2,1,3,2], while [1,2,3][1,2,3] is not a subsequence of array [3,2,1,3,2][3,2,1,3,2].A subsequence is microwavable if the subsequence consists of at most two distinct values and each element differs from its adjacent elements. For example, [2,1,2][2,1,2], [3,2,3,2][3,2,3,2], and [1][1] are microwavable, while [3,3][3,3] and [3,2,1,3,2][3,2,1,3,2] are not microwavable.Denote a function f(x,y)f(x,y) as the length of the longest microwavable subsequence of array AA such that each element within the subsequence is either xx or yy. Find the sum of f(x,y)f(x,y) for all 1≤x<y≤M1≤x<y≤M.
InputThe first line consists of two integers NN MM (1≤N,M≤3000001≤N,M≤300000).The second line consists of NN integers AiAi (1≤Ai≤M1≤Ai≤M).
OutputOutput a single integer representing the sum of f(x,y)f(x,y) for all 1≤x<y≤M1≤x<y≤M.
InputCopy5 4
3 2 1 3 2

InputCopy
Copy
OutputCopy13

OutputCopy
Copy
InputCopy3 3
1 1 1

InputCopy
Copy
OutputCopy2

OutputCopy
Copy


[Problem J - contest/2045]
You are given an array AA of NN integers: [A1,A2,…,AN][A1,A2,…,AN].The array AA is (p,q)(p,q)-xorderable if it is possible to rearrange AA such that for each pair (i,j)(i,j) that satisfies 1≤i<j≤N1≤i<j≤N, the following conditions must be satisfied after the rearrangement: Ai⊕p≤Aj⊕qAi⊕p≤Aj⊕q and Ai⊕q≤Aj⊕pAi⊕q≤Aj⊕p. The operator ⊕⊕ represents the bitwise xor.You are given another array XX of length MM: [X1,X2,…,XM][X1,X2,…,XM]. Calculate the number of pairs (u,v)(u,v) where array AA is (Xu,Xv)(Xu,Xv)-xorderable for 1≤u<v≤M1≤u<v≤M.
InputThe first line consists of two integers NN MM (2≤N,M≤200000)2≤N,M≤200000).The second line consists of NN integers AiAi (0≤Ai<230)0≤Ai<230).The third line consists of MM integers XuXu (0≤Xu<230)0≤Xu<230).
OutputOutput a single integer representing the number of pairs (u,v)(u,v) where array AA is (Xu,Xv)(Xu,Xv)-xorderable for 1≤u<v≤M1≤u<v≤M.
InputCopy3 4
0 3 0
1 2 1 1

InputCopy
Copy
OutputCopy3

OutputCopy
Copy
InputCopy5 2
0 7 13 22 24
12 10

InputCopy
Copy
OutputCopy1

OutputCopy
Copy
InputCopy3 3
0 0 0
1 2 3

InputCopy
Copy
OutputCopy0

OutputCopy
Copy


[Problem K - contest/2045]
You are playing the Greatest Common Divisor Deck-Building Card Game (GCDDCG). There are NN cards (numbered from 1 to N). Card i has the value of Ai, which is an integer between 1 and N (inclusive).The game consists of N rounds (numbered from 1 to N). Within each round, you need to build two non-empty decks, deck 1 and deck 2. A card cannot be inside both decks, and it is allowed to not use all N cards. In round i, the greatest common divisor (GCD) of the card values in each deck must equal i.Your creativity point during round i is the product of i and the number of ways to build two valid decks. Two ways are considered different if one of the decks contains different cards.Find the sum of creativity points across all N rounds. Since the sum can be very large, calculate the sum modulo 998244353.
InputThe first line consists of an integer N (2≤N≤200000).The second line consists of N integers Ai (1≤Ai≤N).
OutputOutput a single integer representing the sum of creativity points across all N rounds modulo 998244353.
InputCopy3
3 3 3

InputCopy
Copy
OutputCopy36

OutputCopy
Copy
InputCopy4
2 2 4 4

InputCopy
Copy
OutputCopy44

OutputCopy
Copy
InputCopy9
4 2 6 9 7 7 7 3 3

InputCopy
Copy
OutputCopy10858

OutputCopy
Copy


[Problem L - contest/2045]
You are currently studying a graph traversal algorithm called the Depth First Search (DFS). However, due to a bug, your algorithm is slightly different from the standard DFS. The following is an algorithm for your Buggy DFS (BDFS), assuming the graph has NN nodes (numbered from 11 to NN).  BDFS():    let S be an empty stack    let FLAG be a boolean array of size N which are all false initially    let counter be an integer initialized with 0    push 1 to S    while S is not empty:      pop the top element of S into u      FLAG[u] = true      for each v neighbour of u in ascending order:        counter = counter + 1        if FLAG[v] is false:          push v to S    return counterYou realized that the bug made the algorithm slower than standard DFS, which can be investigated by the return value of the function BDFS(). To investigate the behavior of this algorithm, you want to make some test cases by constructing an undirected simple graph such that the function BDFS() returns KK, or determine if it is impossible to do so.
InputA single line consisting of an integer KK (1≤K≤1091≤K≤109).
OutputIf it is impossible to construct an undirected simple graph such that the function BDFS() returns KK, then output -1 -1 in a single line.Otherwise, output the graph in the following format. The first line consists of two integers NN and MM, representing the number of nodes and undirected edges in the graph, respectively. Each of the next MM lines consists of two integers uu and vv, representing an undirected edge that connects node uu and node vv. You are allowed to output the edges in any order. This graph has to satisfy the following constraints:  1≤N≤327681≤N≤32768  1≤M≤655361≤M≤65536  1≤u,v≤N1≤u,v≤N, for all edges.  The graph is a simple graph, i.e. there are no multi-edges nor self-loops. Note that you are not required to minimize the number of nodes or edges. It can be proven that if constructing a graph in which the return value of BDFS() is KK is possible, then there exists one that satisfies all the constraints above. If there are several solutions, you can output any of them.
InputCopy8

InputCopy
Copy
OutputCopy3 3
1 2
1 3
2 3
OutputCopy
Copy
InputCopy1

InputCopy
Copy
OutputCopy-1 -1
OutputCopy
Copy
InputCopy23

InputCopy
Copy
OutputCopy5 7
4 5
2 3
3 1
2 4
4 3
2 1
1 5
OutputCopy
Copy


[Problem M - contest/2045]
You are given a grid of RR rows (numbered from 11 to RR from north to south) and CC columns (numbered from 11 to CC from west to east). Every cell in this grid is a square of the same size. The cell located at row rr and column cc is denoted as (r,c)(r,c). Each cell can either be empty or have a mirror in one of the cell's diagonals. Each mirror is represented by a line segment. The mirror is type 11 if it is positioned diagonally from the southwest corner to the northeast corner of the cell, or type 22 for the other diagonal.These mirrors follow the law of reflection, that is, the angle of reflection equals the angle of incidence. Formally, for type 11 mirror, if a beam of light comes from the north, south, west, or east of the cell, then it will be reflected to the west, east, north, and south of the cell, respectively. Similarly, for type 22 mirror, if a beam of light comes from the north, south, west, or east of the cell, then it will be reflected to the east, west, south, and north of the cell, respectively.  You want to put a laser from outside the grid such that all mirrors are hit by the laser beam. There are 2⋅(R+C)2⋅(R+C) possible locations to put the laser:  from the north side of the grid at column cc, for 1≤c≤C1≤c≤C, shooting a laser beam to the south;  from the south side of the grid at column cc, for 1≤c≤C1≤c≤C, shooting a laser beam to the north;  from the east side of the grid at row rr, for 1≤r≤R1≤r≤R, shooting a laser beam to the west; and  from the west side of the grid at row rr, for 1≤r≤R1≤r≤R, shooting a laser beam to the east.   Determine all possible locations for the laser such that all mirrors are hit by the laser beam.
InputThe first line consists of two integers RR CC (1≤R,C≤2001≤R,C≤200).Each of the next RR lines consists of a string SrSr of length CC. The cc-th character of string SrSr represents cell (r,c)(r,c). Each character can either be . if the cell is empty, / if the cell has type 11 mirror, or \ if the cell has type 22 mirror. There is at least one mirror in the grid.
OutputOutput a single integer representing the number of possible locations for the laser such that all mirrors are hit by the laser beam. Denote this number as kk.If k>0k>0, then output kk space-separated strings representing the location of the laser. Each string consists of a character followed without any space by an integer. The character represents the side of the grid, which could be N, S, E, or W if you put the laser on the north, south, east, or west side of the grid, respectively. The integer represents the row/column number. You can output the strings in any order.
InputCopy4 4
.//.
.\\.
.\/.
....

InputCopy
Copy
OutputCopy2
N3 W2
OutputCopy
Copy
InputCopy4 6
./..\.
.\...\
./../\
......

InputCopy
Copy
OutputCopy2
E3 S2
OutputCopy
Copy
InputCopy4 4
....
./\.
.\/.
....

InputCopy
Copy
OutputCopy0
OutputCopy
Copy


[Problem A - contest/2034]
There is a tale about the wise King Keykhosrow who owned a grand treasury filled with treasures from across the Persian Empire. However, to prevent theft and ensure the safety of his wealth, King Keykhosrow's vault was sealed with a magical lock that could only be opened by solving a riddle.  The riddle involves two sacred numbers aa and bb. To unlock the vault, the challenger must determine the smallest key number mm that satisfies two conditions:   mm must be greater than or equal to at least one of aa and bb.  The remainder when mm is divided by aa must be equal to the remainder when mm is divided by bb. Only by finding the smallest correct value of mm can one unlock the vault and access the legendary treasures!
InputThe first line of the input contains an integer tt (1≤t≤1001≤t≤100), the number of test cases.Each test case consists of a single line containing two integers aa and bb (1≤a,b≤10001≤a,b≤1000).
OutputFor each test case, print the smallest integer mm that satisfies the conditions above.
InputCopy24 6472 896
InputCopy
Copy
2
4 6
472 896
OutputCopy12
52864

OutputCopy
Copy


[Problem B - contest/2034]
Rostam's loyal horse, Rakhsh, has seen better days. Once powerful and fast, Rakhsh has grown weaker over time, struggling to even move. Rostam worries that if too many parts of Rakhsh's body lose strength at once, Rakhsh might stop entirely. To keep his companion going, Rostam decides to strengthen Rakhsh, bit by bit, so no part of his body is too frail for too long.  Imagine Rakhsh's body as a line of spots represented by a binary string ss of length nn, where each 00 means a weak spot and each 11 means a strong one. Rostam's goal is to make sure that no interval of mm consecutive spots is entirely weak (all 00s).Luckily, Rostam has a special ability called Timar, inherited from his mother Rudabeh at birth. With Timar, he can select any segment of length kk and instantly strengthen all of it (changing every character in that segment to 11). The challenge is to figure out the minimum number of times Rostam needs to use Timar to keep Rakhsh moving, ensuring there are no consecutive entirely weak spots of length mm.
InputThe first line contains an integer tt (1≤t≤1041≤t≤104), the number of test cases. The first line of each test case contains three numbers nn, mm, kk (1≤m,k≤n≤2⋅1051≤m,k≤n≤2⋅105). The second line of each test case contains a binary string ss of nn characters s1s2…sns1s2…sn. (si∈{si∈{0,1}} for 1≤i≤n1≤i≤n).It is guaranteed that the sum of nn over all test cases does not exceed 2⋅1052⋅105. 
OutputFor each test case, output the minimum number of times Rostam needs to use Timar to keep Rakhsh moving, ensuring there are no consecutive entirely weak spots of length mm.
InputCopy35 1 1101015 2 1101016 3 2000000
InputCopy
Copy
3
5 1 1
10101
5 2 1
10101
6 3 2
000000
OutputCopy2
0
1

OutputCopy
Copy


[Problem C - contest/2034]
In the fourth labor of Rostam, the legendary hero from the Shahnameh, an old witch has created a magical maze to trap him. The maze is a rectangular grid consisting of nn rows and mm columns. Each cell in the maze points in a specific direction: up, down, left, or right. The witch has enchanted Rostam so that whenever he is in a cell, he will move to the next cell in the direction indicated by that cell.  If Rostam eventually exits the maze, he will be freed from the witch's enchantment and will defeat her. However, if he remains trapped within the maze forever, he will never escape.The witch has not yet determined the directions for all the cells. She wants to assign directions to the unspecified cells in such a way that the number of starting cells from which Rostam will be trapped forever is maximized. Your task is to find the maximum number of starting cells which make Rostam trapped.
InputThe first line of the input contains an integer tt (1≤t≤1041≤t≤104), the number of test cases.For each test case:   The first line contains two integers nn and mm (1≤n,m≤10001≤n,m≤1000), representing the number of rows and columns in the maze.  Each of the next nn lines contains a string of mm characters representing the directions in the maze. Each character is one of the following:   U (up)  D (down)  L (left)  R (right)  ? (unspecified direction)  It's guaranteed that the sum of n⋅mn⋅m over all test cases is at most 106106.
OutputFor each test case, print a single integer, the maximum number of starting cells from which Rostam will be trapped forever after assigning directions to the unspecified cells optimally.
InputCopy33 3UUUL?RDDD2 3??????3 3?U?R?LRDL
InputCopy
Copy
3
3 3
UUU
L?R
DDD
2 3
???
???
3 3
?U?
R?L
RDL
OutputCopy0
6
5

OutputCopy
Copy


[Problem D - contest/2034]
Darius the Great is constructing nn stone columns, each consisting of a base and between 00, 11, or 22 inscription pieces stacked on top.In each move, Darius can choose two columns uu and vv such that the difference in the number of inscriptions between these columns is exactly 11, and transfer one inscription from the column with more inscriptions to the other one. It is guaranteed that at least one column contains exactly 11 inscription.  Since beauty is the main pillar of historical buildings, Darius wants the columns to have ascending heights. To avoid excessive workers' efforts, he asks you to plan a sequence of at most nn moves to arrange the columns in non-decreasing order based on the number of inscriptions. Minimizing the number of moves is not required.
InputThe first line contains an integer tt — the number of test cases. (1≤t≤30001≤t≤3000)The first line of each test case contains an integer nn — the number of stone columns. (1≤n≤2⋅1051≤n≤2⋅105)The second line contains nn integers a1,a2,…,ana1,a2,…,an, where ai∈{0,1,2}ai∈{0,1,2} represents the initial number of inscriptions in the ii-th column. It is guaranteed that at least one column has exactly 11 inscription.It is guaranteed that the sum of nn over all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case, output an integer kk — the number of moves used to sort the columns. (0≤k≤n0≤k≤n)Then, output kk lines, each containing two integers uiui and vivi (1≤ui,vi≤n1≤ui,vi≤n), representing the indices of the columns involved in the ii-th move. During each move, it must hold that |aui−avi|=1|aui−avi|=1, and one inscription is transferred from the column with more inscriptions to the other.It can be proven that a valid solution always exists under the given constraints.
InputCopy340 2 0 131 2 060 1 1 2 2 2
InputCopy
Copy
3
4
0 2 0 1
3
1 2 0
6
0 1 1 2 2 2
OutputCopy2
2 4
2 3
2
3 1
2 3
0

OutputCopy
Copy


[Problem E - contest/2034]
Rayan wants to present a gift to Reyhaneh to win her heart. However, Reyhaneh is particular and will only accept a k-harmonic set of permutations.We define a k-harmonic set of permutations as a set of kk pairwise distinct permutations p1,p2,…,pkp1,p2,…,pk of size nn such that for every pair of indices ii and jj (where 1≤i,j≤n1≤i,j≤n), the following condition holds:p1[i]+p2[i]+…+pk[i]=p1[j]+p2[j]+…+pk[j]p1[i]+p2[i]+…+pk[i]=p1[j]+p2[j]+…+pk[j]Your task is to help Rayan by either providing a valid k-harmonic set of permutations for given values of nn and kk or by determining that such a set does not exist.We call a sequence of length nn a permutation if it contains every integer from 11 to nn exactly once.
InputThe first line contains a single integer tt (1≤t≤10001≤t≤1000), the number of test cases.Each test case consists of two integers nn and kk (1≤n,k≤1051≤n,k≤105). The sum of n⋅kn⋅k over all test cases does not exceed 5⋅1055⋅105.
OutputFor each test case, if a k-harmonic set of permutations exists, print YES on the first line. Then, print kk lines, each containing a distinct permutation of the integers from 11 to nn.If no such set exists, print NO on the first line.You can output "YES" and "NO" in any case (for example, strings "yEs", "yes", and "Yes" will be recognized as a positive response).If multiple answers are possible, you can output any of them.
InputCopy43 34 25 13 2
InputCopy
Copy
4
3 3
4 2
5 1
3 2
OutputCopyYES
1 2 3
2 3 1
3 1 2
YES
1 2 3 4
4 3 2 1
NO
YES
1 2 3
3 2 1

OutputCopy
Copy


[Problem F1 - contest/2034]
 This is the easy version of the problem. The only differences between the two versions are the constraints on kk and the sum of kk.In ancient Persia, Khayyam, a clever merchant and mathematician, is playing a game with his prized treasure chest containing nn red rubies worth 22 dinars each and mm blue sapphires worth 11 dinar each. He also has a satchel, which starts empty, and kk scrolls with pairs (r1,b1),(r2,b2),…,(rk,bk)(r1,b1),(r2,b2),…,(rk,bk) that describe special conditions.  The game proceeds for n+mn+m turns as follows:  Khayyam draws a gem uniformly at random from the chest.  He removes the gem from the chest and places it in his satchel.  If there exists a scroll ii (1≤i≤k1≤i≤k) such that the chest contains exactly riri red rubies and bibi blue sapphires, Khayyam receives a royal decree that doubles the value of all the gems in his satchel as a reward for achieving a special configuration. Note that the value of some gems might be affected by multiple decrees, and in that case the gems' value is doubled multiple times.Determine the expected value of Khayyam's satchel at the end of the game, modulo 998,244,353998,244,353.Formally, let M=998,244,353M=998,244,353. It can be shown that the exact answer can be expressed as an irreducible fraction pqpq, where pp and qq are integers and q≢0(modM)q≢0(modM). Output the integer equal to p⋅q−1modMp⋅q−1modM. In other words, output such an integer xx that 0≤x<M0≤x<M and x⋅q≡p(modM)x⋅q≡p(modM). 
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤5001≤t≤500). The description of the test cases follows. The first line of each test case contains three integers nn, mm, and kk (1≤n,m≤2⋅1051≤n,m≤2⋅105, 0≤k≤5000≤k≤500) — the number of red rubies, the number of blue sapphires, and the number of scrolls describing special conditions, respectively.Each of the next kk lines contains two integers riri, bibi (0≤ri≤n0≤ri≤n, 0≤bi≤m0≤bi≤m, 1≤ri+bi≤n+m−11≤ri+bi≤n+m−1). It is guaranteed that the pairs (ri,bi)(ri,bi) are distinct.It is guaranteed that the sum of nn and the sum of mm over all test cases do not exceed 2⋅1052⋅105, and the sum of kk over all test cases does not exceed 500500.
OutputFor each test case, print a single integer: the expected value of Khayyam's satchel at the end of the process, modulo 998,244,353998,244,353.
InputCopy53 4 01 1 11 03 3 21 12 23 3 22 11 210 4 51 08 06 40 27 4
InputCopy
Copy
5
3 4 0
1 1 1
1 0
3 3 2
1 1
2 2
3 3 2
2 1
1 2
10 4 5
1 0
8 0
6 4
0 2
7 4
OutputCopy10
499122180
798595498
149736666
414854846

OutputCopy
Copy


[Problem F2 - contest/2034]
 This is the hard version of the problem. The only differences between the two versions are the constraints on kk and the sum of kk.In ancient Persia, Khayyam, a clever merchant and mathematician, is playing a game with his prized treasure chest containing nn red rubies worth 22 dinars each and mm blue sapphires worth 11 dinar each. He also has a satchel, which starts empty, and kk scrolls with pairs (r1,b1),(r2,b2),…,(rk,bk)(r1,b1),(r2,b2),…,(rk,bk) that describe special conditions.  The game proceeds for n+mn+m turns as follows:  Khayyam draws a gem uniformly at random from the chest.  He removes the gem from the chest and places it in his satchel.  If there exists a scroll ii (1≤i≤k1≤i≤k) such that the chest contains exactly riri red rubies and bibi blue sapphires, Khayyam receives a royal decree that doubles the value of all the gems in his satchel as a reward for achieving a special configuration. Note that the value of some gems might be affected by multiple decrees, and in that case the gems' value is doubled multiple times.Determine the expected value of Khayyam's satchel at the end of the game, modulo 998,244,353998,244,353.Formally, let M=998,244,353M=998,244,353. It can be shown that the exact answer can be expressed as an irreducible fraction pqpq, where pp and qq are integers and q≢0(modM)q≢0(modM). Output the integer equal to p⋅q−1modMp⋅q−1modM. In other words, output such an integer xx that 0≤x<M0≤x<M and x⋅q≡p(modM)x⋅q≡p(modM). 
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤5001≤t≤500). The description of the test cases follows. The first line of each test case contains three integers nn, mm, and kk (1≤n,m≤2⋅1051≤n,m≤2⋅105, 0≤k≤50000≤k≤5000) — the number of red rubies, the number of blue sapphires, and the number of scrolls describing special conditions, respectively.Each of the next kk lines contains two integers riri, bibi (0≤ri≤n0≤ri≤n, 0≤bi≤m0≤bi≤m, 1≤ri+bi≤n+m−11≤ri+bi≤n+m−1). It is guaranteed that the pairs (ri,bi)(ri,bi) are distinct.It is guaranteed that the sum of nn and the sum of mm over all test cases do not exceed 2⋅1052⋅105, and the sum of kk over all test cases does not exceed 50005000.
OutputFor each test case, print a single integer: the expected value of Khayyam's satchel at the end of the process, modulo 998,244,353998,244,353.
InputCopy53 4 01 1 11 03 3 21 12 23 3 22 11 210 4 51 08 06 40 27 4
InputCopy
Copy
5
3 4 0
1 1 1
1 0
3 3 2
1 1
2 2
3 3 2
2 1
1 2
10 4 5
1 0
8 0
6 4
0 2
7 4
OutputCopy10
499122180
798595498
149736666
414854846

OutputCopy
Copy


[Problem G1 - contest/2034]
The only difference between the two versions of the problem is whether overlaps are considered at all points or only at integer points.The legendary Simurgh, a mythical bird, is responsible for keeping watch over vast lands, and for this purpose, she has enlisted nn vigilant warriors. Each warrior is alert during a specific time segment [li,ri][li,ri], where lili is the start time (included) and riri is the end time (included), both positive integers.  One of Simurgh's trusted advisors, Zal, is concerned that if multiple warriors are stationed at the same time and all wear the same color, the distinction between them might be lost, causing confusion in the watch. To prevent this, whenever multiple warriors are on guard at the same moment (which can be non-integer), there must be at least one color which is worn by exactly one warrior.So the task is to determine the minimum number of colors required and assign a color cici to each warrior's segment [li,ri][li,ri] such that, for every (real) time tt contained in at least one segment, there exists one color which belongs to exactly one segment containing tt.
InputThe first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases.For each test case:   The first line contains an integer nn (1≤n≤2⋅1051≤n≤2⋅105) — the number of warriors stationed by Simurgh.  The next nn lines each contain two integers lili and riri (1≤li≤ri≤1091≤li≤ri≤109) — the start and end times of the warrior's watch segment. The sum of nn across all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case:   Output the minimum number of colors kk needed.  Then, output a line of nn integers cici (1≤ci≤k1≤ci≤k), where each cici is the color assigned to the ii-th warrior. 
InputCopy521 23 421 22 331 42 53 651 42 83 75 106 951 52 63 74 76 7
InputCopy
Copy
5
2
1 2
3 4
2
1 2
2 3
3
1 4
2 5
3 6
5
1 4
2 8
3 7
5 10
6 9
5
1 5
2 6
3 7
4 7
6 7
OutputCopy1
1 1
2
1 2
2
1 2 1
3
2 3 1 2 1
3
2 1 3 1 1

OutputCopy
Copy


[Problem G2 - contest/2034]
The only difference between the two versions of the problem is whether overlaps are considered at all points or only at integer points.The legendary Simurgh, a mythical bird, is responsible for keeping watch over vast lands, and for this purpose, she has enlisted nn vigilant warriors. Each warrior is alert during a specific time segment [li,ri][li,ri], where lili is the start time (included) and riri is the end time (included), both positive integers.  One of Simurgh's trusted advisors, Zal, is concerned that if multiple warriors are stationed at the same time and all wear the same color, the distinction between them might be lost, causing confusion in the watch. To prevent this, whenever multiple warriors are on guard at the same integer moment, there must be at least one color which is worn by exactly one warrior.So the task is to determine the minimum number of colors required and assign a color cici to each warrior's segment [li,ri][li,ri] such that, for every (integer) time tt contained in at least one segment, there exists one color which belongs to exactly one segment containing tt.
InputThe first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases.For each test case:   The first line contains an integer nn (1≤n≤2⋅1051≤n≤2⋅105) — the number of warriors stationed by Simurgh.  The next nn lines each contain two integers lili and riri (1≤li≤ri≤1091≤li≤ri≤109) — the start and end times of the warrior's watch segment. The sum of nn across all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case:   Output the minimum number of colors kk needed.  Then, output a line of nn integers cici (1≤ci≤k1≤ci≤k), where each cici is the color assigned to the ii-th warrior. 
InputCopy351 42 83 75 106 951 52 63 74 76 754 98 172 1512 196 13
InputCopy
Copy
3
5
1 4
2 8
3 7
5 10
6 9
5
1 5
2 6
3 7
4 7
6 7
5
4 9
8 17
2 15
12 19
6 13
OutputCopy2
1 2 2 1 2
2
1 2 2 2 1
3
1 1 2 3 1

OutputCopy
Copy


[Problem H - contest/2034]
Rayan makes his final efforts to win Reyhaneh's heart by claiming he is stronger than Rayaneh (i.e., computer in Persian). To test this, Reyhaneh asks Khwarizmi for help. Khwarizmi explains that a set is integer linearly independent if no element in the set can be written as an integer linear combination of the others. Rayan is given a set of integers each time and must identify one of the largest possible integer linearly independent subsets.Note that a single element is always considered an integer linearly independent subset.An integer linearly combination of a1,…,aka1,…,ak is any sum of the form c1⋅a1+c2⋅a2+…+ck⋅akc1⋅a1+c2⋅a2+…+ck⋅ak where c1,c2,…,ckc1,c2,…,ck are integers (which may be zero, positive, or negative).
InputThe first line contains an integer tt (1≤t≤1001≤t≤100), the number of test cases.The first line of each test case contains an integer nn (1≤n≤1051≤n≤105), the size of the set. The second line contains nn distinct integers a1,a2,…,ana1,a2,…,an (1≤ai≤1051≤ai≤105).The sum of nn over all test cases does not exceed 3⋅1063⋅106.
OutputIn the first line of each test case print the size of the largest integer linearly independent subset.In the next line, print one such subset in any order. If there are multiple valid subsets, print any one of them.
InputCopy352 4 6 8 10512 15 21 30 3532 3 6
InputCopy
Copy
3
5
2 4 6 8 10
5
12 15 21 30 35
3
2 3 6
OutputCopy2
4 6
3
35 21 30
2
2 3

OutputCopy
Copy


[Problem A - contest/2041]
  Image generated by ChatGPT 4o. Boxed meals in Taiwan are very common, offering convenient and affordable nutrition-balanced choices for students and office workers. These meals typically include a variety of vegetables, protein, and rice, providing a well-rounded diet. With numerous options available at local self-service restaurants, they are a popular choice for those looking for a quick, healthy lunch.There are five Taiwanese self-service restaurants numbered from 1 to 5. You plan to visit a different restaurant each day from Monday to Friday to pack a boxed meal for lunch. You've already visited one restaurant from Monday to Thursday, each time visiting a different one. Now, it's Friday, and you want to visit the last remaining restaurant that you haven't been to yet this week.Write a program that takes as input the four restaurants you've already visited (one for each day from Monday to Thursday) and outputs the restaurant you should visit on Friday.
InputA single line of input containing four integers a,b,c,da,b,c,d, each between 1 and 5 (inclusive), representing the restaurant numbers you visited from Monday to Thursday, in order.  1≤a,b,c,d≤51≤a,b,c,d≤5  All four numbers will be different. 
OutputOutput the restaurant number you should visit on Friday.
InputCopy1 3 2 5
InputCopy
Copy
1 3 2 5
OutputCopy4

OutputCopy
Copy
InputCopy2 5 4 3
InputCopy
Copy
2 5 4 3
OutputCopy1

OutputCopy
Copy


[Problem B - contest/2041]
Bowling is a national sport in Taiwan; everyone in the country plays the sport on a daily basis since their youth. Naturally, there are a lot of bowling alleys all over the country, and the competition between them is as intense as you can imagine.Maw-Shang owns one such bowling alley. To stand out from other competitors in the industry and draw attention from customers, he decided to hold a special event every month that features various unorthodox bowling rules. For the event this month, he came up with a new version of the game called X-pin bowling. In the traditional 1010-pin bowling game, a frame is built out of ten bowling pins forming a triangular shape of side length four. The pin closest to the player forms the first row, and the two pins behind it form the second row, and so on. Unlike the standard version, the game of XX-pin bowling Maw-Shang designed allows a much larger number of pins that form a larger frame. The following figure shows a standard 1010-pin frame on the left, and on the right it shows a 2121-pin frame that forms a triangular shape of side length six which is allowed in the game of XX-pin bowling.  Being the national sport, the government of Taiwan strictly regulates and standardizes the manufacturing of bowling pins. There are two types of bowling pins allowed, one in black and the other in white, and the bowling alley Maw-Shang owns has ww white pins and bb black pins. To make this new game exciting for the customers, Maw-Shang wants to build the largest possible frame from these w+bw+b pins. However, even though he is okay with using both colors in building the frame, for aesthetic reasons, Maw-Shang still wants the colors of the pins on the same row to be identical. For example, the following figure shows two possible frames of side length six, but only the left one is acceptable to Maw-Shang since the other one has white and black pins mixed in the third row.  The monthly special event is happening in just a few hours. Please help Maw-Shang calculate the side length of the largest frame that he can build from his w+bw+b pins!
InputThe first line of the input contains a single integer tt, the number of test cases. Each of the following tt lines contains two integers ww and bb, the number of white and black pins, respectively.  1≤t≤1001≤t≤100  0≤w,b≤1090≤w,b≤109 
OutputFor each test case, output in a single line the side length kk of the largest pin satisfying Maw-Shang's requirement you can build with the given pins.
InputCopy41 23 23 312 0
InputCopy
Copy
4
1 2
3 2
3 3
12 0
OutputCopy2
2
3
4

OutputCopy
Copy


[Problem C - contest/2041]
  You are given an n×n×nn×n×n big three-dimensional cube that contains n3n3 numbers. You have to choose nn of those numbers so that their sum is as small as possible. It is, however, forbidden to choose two numbers that are located in the same plane. That is, if we identify the positions in the cube by three Cartesian coordinates, then choosing two numbers from positions (x,y,z)(x,y,z) and (x′,y′,z′)(x′,y′,z′) is forbidden if x=x′x=x′, y=y′y=y′, or z=z′z=z′.
InputThe input consists of the number nn followed by n3n3 numbers in the cube. The numbers are presented as nn two-dimensional matrices, one for each layer of the cube. More precisely, there will be n2n2 lines follow, each having nn numbers. For each x,y,zx,y,z (1≤x,y,z≤n1≤x,y,z≤n), the number at the position (x,y,z)(x,y,z) is listed as the zz-th number in the ((x−1)×n+y)((x−1)×n+y)-th line.  2≤n≤12  All numbers in the cube are integers between 0 and 2×107. 
OutputThe output consists of a single number. It is the minimum sum of n numbers chosen from the cube according to the above rules.
InputCopy31 2 34 5 67 8 91 1 12 2 23 3 34 3 02 1 49 8 9
InputCopy
Copy
3
1 2 3
4 5 6
7 8 9
1 1 1
2 2 2
3 3 3
4 3 0
2 1 4
9 8 9
OutputCopy5

OutputCopy
Copy


[Problem D - contest/2041]
  Image generated by ChatGPT 4o. You are given a two-dimensional maze with a start and end position. Your task is to find the fastest way to get from the start to the end position. The fastest way is to make the minimum number of steps where one step is going left, right, up, or down. Of course, you cannot walk through walls.There is, however, a catch: If you make more than three steps in the same direction, you lose balance and fall down. Therefore, it is forbidden to make more than three consecutive steps in the same direction. It is okay to walk three times to the right, then one step to the left, and then again three steps to the right. This has the same effect as taking five steps to the right, but is slower.
InputThe first line contains two numbers nn and mm, which are the height and width of the maze. This is followed by an ASCII-representation of the maze where ## is a wall, .. is an empty space, and SS and TT are the start and end positions.  12≤n×m≤20000012≤n×m≤200000.  3≤n,m≤100003≤n,m≤10000.  Characters are only .#ST.#ST and there is exactly one SS and one TT.  The outer borders are only ## (walls). 
OutputThe minimum number of steps to reach the end position from the start position or -1 if that is impossible.
InputCopy7 12#############S........T##.########.##..........##..........##..#..#....#############
InputCopy
Copy
7 12
############
#S........T#
#.########.#
#..........#
#..........#
#..#..#....#
############
OutputCopy15

OutputCopy
Copy
InputCopy5 8#########......##.####.##...T#S#########
InputCopy
Copy
5 8
########
#......#
#.####.#
#...T#S#
########
OutputCopy14

OutputCopy
Copy
InputCopy5 8#########.#S...##.####.##...T#.#########
InputCopy
Copy
5 8
########
#.#S...#
#.####.#
#...T#.#
########
OutputCopy-1

OutputCopy
Copy


[Problem E - contest/2041]
  Image generated by ChatGPT 4o. A-Ming's birthday is coming and his friend A-May decided to give him an integer array as a present. A-Ming has two favorite numbers aa and bb, and he thinks an array is beautiful if its mean is exactly aa and its median is exactly bb. Please help A-May find a beautiful array so her gift can impress A-Ming.The mean of an array is its sum divided by its length. For example, the mean of array [3,−1,5,5][3,−1,5,5] is 12÷4=312÷4=3.The median of an array is its middle element after sorting if its length is odd, or the mean of two middle elements after sorting if its length is even. For example, the median of [1,1,2,4,8][1,1,2,4,8] is 22 and the median of [3,−1,5,5][3,−1,5,5] is (3+5)÷2=4(3+5)÷2=4.Note that the mean and median are not rounded to an integer. For example, the mean of array [1,2][1,2] is 1.51.5.
InputThe only line contains two integers aa and bb.  −100≤a,b≤100−100≤a,b≤100.  The length of the array must be between 11 and 10001000.  The elements of the array must be integers and their absolute values must not exceed 106106. 
OutputIn the first line, print the length of the array.In the second line, print the elements of the array.If there are multiple solutions, you can print any. It can be proved that, under the constraints of the problem, a solution always exists.
InputCopy3 4

InputCopy
Copy
OutputCopy4
3 -1 5 5

OutputCopy
Copy
InputCopy-100 -100

InputCopy
Copy
OutputCopy1
-100

OutputCopy
Copy


[Problem F - contest/2041]
Peter loves folding segments. There is a segment on a number line occupying the interval [ℓ,r][ℓ,r]. Since it is the prime time for folding the segments, Peter decides to fold the segment carefully. In each step, he chooses one of the two following operations whenever possible:  Operation LTR: he folds the segment from left to right, where ℓ coincides with a point x (ℓ<x≤r) such that ℓ+x is a prime number∗. When Peter chooses this operation, he always chooses the largest possible value x. Note that the segment occupies the interval [12(ℓ+x),r] afterwards.  Operation RTL: he folds the segment from right to left, where r coincides with a point x (ℓ≤x<r) such that r+x is a prime number. When Peter chooses this operation, he always chooses the smallest possible value x. Note that the segment occupies the interval [ℓ,12(r+x)] afterwards. A folding sequence refers to a sequence of operations specified above. Peter wants to fold the segment several times, resulting in the shortest possible interval whose length that cannot be further reduced. The length of an interval [ℓ,r] is defined naturally to be r−ℓ. Let's consider the following example. Suppose that we are folding a segment initially occupying the interval [1,30]. There are three folding sequences that lead to the shortest possible resulting interval, as shown in the following figure.  Please help Peter determine the number of folding sequences such that the resulting interval has a shortest possible length. Output the number modulo 998244353.∗Recall that an integer p>1 is a prime number if there do not exist integers a,b>1 such that p=ab.
InputThe first line contains an integer t, denoting the number of test cases. In each of the following t lines, there are two integers ℓ and r.  1≤t≤10  1≤ℓ<r≤1012  r−ℓ≤105 
OutputFor each test case, please output a line denoting the number of ways to fold the given segment such that the resulting segment has the shortest possible length, modulo 998244353.
InputCopy3
1 30
16 18
142857 240135

InputCopy
Copy
OutputCopy3
1
63

OutputCopy
Copy


[Problem G - contest/2041]
Claire loves drawing lines. She receives a sheet of paper with an n×nn×n grid and begins drawing "lines" on it. Well—the concept of a "line" here is not what we usually think of. Claire refers each line to be a set of consecutive vertical grid cells. When she draws a line, these cells are all covered with black ink. Initially, all the cells are white, and drawing lines turns some of them black. After drawing a few lines, Claire wonders: how many ways she can color an additional white cell black so that the remaining white cells do not form a single connected component.Two cells are directly connected if they share an edge. Two cells xx and yy are indirectly connected if there exists a sequence of cells c0,c1,…,ckc0,c1,…,ck with k>1k>1 such that c0=xc0=x, ck=yck=y, and for every i∈{1,2,…,k}i∈{1,2,…,k} the cells cici and ci−1ci−1 are directly connected. A set of cells forms a single connected component if each pair of cells in the set is either directly or indirectly connected.The grid has nn rows and nn columns, both indexed from 11 to nn. Claire will draw qq lines. The ii-th line is drawn in the yiyi-th column, from the sisi-th row to the fifi-th row, where si≤fisi≤fi for each i∈{1,2,…,q}i∈{1,2,…,q}. Note that the cells that are passed by at least one of the qq lines are colored black. The following figure shows an example of a 20×2020×20 grid with q=67q=67 lines. The grid cells marked with red star symbols refer to the cells such that, if Claire colors that cell black, all white cells no longer form a single connected component.  You may assume that, after drawing the qq lines, the remaining white cells form a single connected component with at least three white cells.
InputThe first line contains exactly one integer tt, indicating the number of test cases. For each test case, it begins with a line containing exactly two integers nn and qq. This indicates that the grid is nn by nn and that Claire draws qq lines on it. Then qq lines follow. For each i∈{1,2,…,q}i∈{1,2,…,q}, the ii-th line among the qq lines contains exactly three integers yiyi, sisi, and fifi.  1≤t≤1251≤t≤125  2≤n≤1092≤n≤109  q≥1q≥1; the sum of all qq values is at most 105105.  1≤yi≤n1≤yi≤n  1≤si≤fi≤n1≤si≤fi≤n  There are at least three white cells and all white cells form a connected component. 
OutputPrint an integer on a line, indicating how many ways Claire can color an additional white cell black so that the remaining white cells do not form a single connected component.
InputCopy2
3 1
2 1 2
5 2
2 1 4
4 2 5

InputCopy
Copy
OutputCopy5
15

OutputCopy
Copy


[Problem H - contest/2041]
  Image generated by ChatGPT 4o. Alice likes singing. As a singing enthusiast, Alice has listened to countless songs and has tried singing them many times. However, occasionally, some songs make Alice feel bored. After some research, Alice believes that this is because even though the songs she chose are all different, due to her instinctive preference, they all turn out to be musically similar to one another.To thoroughly analyze this, Alice decided to study the sheet music of the songs. For convenience, Alice represented a song of length nn as an integer sequence a1,a2,…,ana1,a2,…,an, where aiai is the pitch of the ii-th note. Then she defined the musical equivalence between songs. Two songs a1,a2,…,ana1,a2,…,an and b1,b2,…,bnb1,b2,…,bn of length nn are musically equivalent if for all 1≤i<n1≤i<n, both ai,ai+1ai,ai+1 and bi,bi+1bi,bi+1 have the same pitch relationship. More specifically, ai,ai+1ai,ai+1 and bi,bi+1bi,bi+1 have the same pitch relationship if either   ai<ai+1ai<ai+1 and bi<bi+1bi<bi+1,  ai=ai+1ai=ai+1 and bi=bi+1bi=bi+1, or  ai>ai+1ai>ai+1 and bi>bi+1bi>bi+1.  For example, 1,2,3,3,21,2,3,3,2 and 5,9,13,13,15,9,13,13,1 are musically equivalent, while 1,2,3,2,11,2,3,2,1 and 1,2,2,2,11,2,2,2,1 are not. Having practiced consistently for a long time, Alice is able to sing any note in the range of [1,k][1,k]. She wants to know how many different songs of length nn within her range there are, if we treat musically equivalent songs as the same one. Can you help her calculate the number?Since the answer might be large, print the answer modulo 998244353998244353.
InputThe only line contains two integers n,kn,k.  1≤n≤1061≤n≤106  1≤k≤1091≤k≤109 
OutputOutput the number of different songs modulo 998244353998244353.
InputCopy3 2

InputCopy
Copy
OutputCopy7

OutputCopy
Copy
InputCopy5 3

InputCopy
Copy
OutputCopy67

OutputCopy
Copy


[Problem I - contest/2041]
  You are designing a snazzy new text editor, and you want to add a nifty auto-complete feature to help users save time. Here is how it will work: if a user types "App", your editor will magically suggest the word "Application"! Even better, users can personalize the words that auto-complete in your editor.Your editor will support 4 kinds of operations (Let's say the current text in your editor is tt):   Add an auto complete pattern pipi.  Delete an auto complete pattern pipi.  Append a string ss to the end of tt.  Delete cc characters from the end of tt. Note that if cc is larger then the length of tt, delete all the characters from tt. After each action, your editor should suggest an auto-complete candidate ii that matches the following criteria:   The string pipi has a prefix equal to tt.  If there are multiple pipi, pick the longest one.  If there are still multiple pipi, pick the one with the smallest lexicographic order.  If there are still multiple pipi, pick the one with the smallest ID.  To simplify the question, for each action, print the suggested auto complete pattern ID. If there's no match, print -1.For example, let us say we have three candidates: "alice", "bob", and "charlie", with ID 1, 2, and 3. At first, there is nothing on the screen, so "charlie" (3) should be suggested because it is the longest. Then, let us say the user types "b". You should suggest "bob" (2) because it is the only one that starts with "b". Finally, let us say the user type "body". You should print -1 because there is no matched pattern.
InputThe first line contains an integer nn, followed by nn lines, with each line containing an action.There are four types of actions:   ii pipi  ii  ss  cc  The add actions are followed by an integer ii and a pattern pipi, which means the user wants to add a pattern with ID ii. The delete actions are followed by an integer ii, which means the user wants to delete pipi from the pattern set. The append actions are followed by a string ss, which means the user appends ss to the end of tt. The backspace actions are followed by an integer cc, which means the user deletes cc characters from the end of tt. All the parameters are splitted by a single space character.  1≤n≤1061≤n≤106  The total number of characters in all pipi and ss does not exceed 2×1062×106.  1≤c≤2×1061≤c≤2×106  The strings pipi and ss may contain any printable characters, excluding all space characters (ASCII number in the range from 3333 to 126126).  The ID ii for each add operation is unique.  The ID ii for each delete is guaranteed to be valid.  Each ID ii satisfies 0≤i≤n0≤i≤n. 
OutputThe program should output nn lines. For each action, output an integer ii, which means that after the action, pipi is the suggested auto complete candidate. If there is no pipi that matches the requirement, output -1.
InputCopy6
add 1 pattern1_alice
add 2 pattern2_bob
add 3 pattern3_charlie
append pattern
append 2_bobabc
backspace 3

InputCopy
Copy
OutputCopy1
1
3
3
-1
2

OutputCopy
Copy
InputCopy6
append pattern
add 1 pattern1_alice____
add 2 pattern2_bob______
add 3 pattern3_charlie__
delete 1
delete 2

InputCopy
Copy
OutputCopy-1
1
1
1
2
3

OutputCopy
Copy


[Problem J - contest/2041]
  Image generated by ChatGPT 4o. Mayaw works in a renowned Epah (aboriginal Taiwanese millet wine; Epah is the Pangcah term for aboriginal Taiwanese millet wine, named in the language of the Pangcah people, the largest Indigenous group in Taiwan) bar in the Fata'an Village. To showcase the depth of its collections, the bar has a two-row wine rack where each row can fit exactly nn bottles. There are already nn bottles placed on the back row of the rack, where the ii-th bottle from left has height aiai. The owner of the bar has another nn bottles with distinct heights b1,…,bnb1,…,bn that he would like Mayaw to put on the first row. To ensure that all bottles on the rack are visible, the owner requires that each bottle on the back row should not be blocked by the one put in front of it. That is, if a bottle of height hh is put on the ii-th spot (from left) in the first row, then hh must be less than aiai. However, not all such arrangements are good for the owner. To pay tributes to the Maxi Mountain nearby, he additionally demands that the bottles in the front row should display a mountain-like shape. In particular, the heights of the bottles, when listing from left to right, should form a sequence that is first (non-strictly) increasing and then (non-strictly) decreasing.Unfortunately, sometimes it is impossible to achieve owner's requirements. That is why Mayaw is also allowed to slightly reduce a bottle's height by removing its cap that has a height of 11. In other words, after the removal of the cap, the height of the bottle decreases by exactly 11. Of course, exposing the Epah inside the bottle to the open air is detrimental to its quality, and therefore it is desirable to remove as few bottle caps as possible.Can you help Mayaw determine the minimum number of caps needed to be removed so that he can arrange the bottles in a way that satisfies the owner's requirements? Note that the positions of the bottles in the back row are fixed and Mayaw is not allowed to modify them.
InputThe first line contains an integer nn which represents the number of bottles in each row. The second line contains nn integers a1,…,ana1,…,an, the height of the bottles in the back row. The third line contains nn distinct integers b1,…,bnb1,…,bn, the height of the bottles in the front row.  1≤n≤5×1051≤n≤5×105  1≤ai,bi≤1091≤ai,bi≤109  All bibi's are distinct. 
OutputOutput the minimum number of bottle caps needed to be removed so that Mayaw can arrange the bottles in the desired way. If it is impossible to achieve that (regardless of the number of caps removed), output -1 instead.
InputCopy5
2 4 6 5 4
1 2 3 4 5

InputCopy
Copy
OutputCopy0

OutputCopy
Copy
InputCopy5
2 3 6 5 4
1 2 3 4 5

InputCopy
Copy
OutputCopy0

OutputCopy
Copy
InputCopy5
6 2 6 6 6
1 2 3 4 5

InputCopy
Copy
OutputCopy1

OutputCopy
Copy
InputCopy5
7 2 7 7 7
1 3 4 5 6

InputCopy
Copy
OutputCopy-1

OutputCopy
Copy
InputCopy10
18 20 16 18 16 10 13 6 4 10
19 10 9 15 4 16 6 12 3 17

InputCopy
Copy
OutputCopy4

OutputCopy
Copy


[Problem K - contest/2041]
  Image generated by ChatGPT 4o. In an interdisciplinary collaboration, an ecosystem scientist and a computer scientist join forces to analyze the structure of a complex ecosystem using computational methods. The ecosystem scientist models the ecosystem as a directed graph D=(V,A)D=(V,A), where each species is represented by a node v∈Vv∈V, and each feeding relationship is represented as a directed edge (x,y)∈A(x,y)∈A from prey xx to predator yy. This graph structure allows them to simulate the flow of energy throughout the ecosystem from one species to another.Two essential features of the ecosystem are defined:  Independent Trophic Group: A set SS of animal species is classified as an independent trophic group if no species x∈Sx∈S can reach another species y∈Sy∈S (for some y≠xy≠x) through a series of directed feeding relationships, meaning there is no directed path in DD from xx to yy.  Trophic Balance Species: A species is termed a trophic balance species if it has a nearly equal number of species that affect it as directly or indirectly predators (species it can reach via a directed path in DD, excluding itself) and species that affect it as directly or indirectly prey (species that can reach it via a directed path in DD, excluding itself). Specifically, trophic balance species are those for which the absolute difference between the above two numbers is minimum among all species in the ecosystem. Consider an ecosystem with n=4n=4 species and m=3m=3 feeding relationships:  Species 1: Grass (Node 1)   Species 2: Rabbits (Node 2)   Species 3: Foxes (Node 3)   Species 4: Hawks (Node 4) The directed edges representing the feeding relationships are as follows:  (1,2)(1,2): Grass is eaten by Rabbits.   (2,3)(2,3): Rabbits are eaten by Foxes.   (2,4)(2,4): Rabbits are also eaten by Hawks. Now, consider the set S={3,4}S={3,4} (Foxes and Hawks). There are no directed paths between Foxes (Node 3) and Hawks (Node 4); Foxes cannot reach Hawks, and Hawks cannot reach Foxes through any directed paths. Therefore, this set qualifies as an independent trophic group.Examination of Species Species 1 (Grass):    Can reach: 3 (Rabbits, Foxes, and Hawks)    Can be reached by: 0 (None)    Absolute difference: |3−0|=3|3−0|=3   Species 2 (Rabbits):   Can reach: 2 (Foxes and Hawks)    Can be reached by: 1 (Grass)    Absolute difference: |2−1|=1|2−1|=1  Species 3 (Foxes):   Can reach: 0 (None)    Can be reached by: 2 (Grass and Rabbits)    Absolute difference: |0−2|=2|0−2|=2  Species 4 (Hawks):   Can reach: 0 (None)    Can be reached by: 2 (Grass and Rabbits)    Absolute difference: |0−2|=2|0−2|=2  Among these species, Rabbits have the smallest absolute difference of 11, indicating that they are a trophic balance species within the ecosystem. It is known that any independent trophic group in the ecosystem has a size of at most kk. The task is to find the set of all trophic balance species in the ecosystem.
InputThe first line contains exactly two integers nn and mm, where nn (resp. mm) denotes the number of nodes (resp. edges) in the directed graph DD induced by the investigated ecosystem. The nodes are numbered as 1,2,…,n1,2,…,n. Then, mm lines follow. The ii-th line contains two integers xixi and yiyi indicating a directed edge from node xixi to node yiyi.  1≤n≤2×1051≤n≤2×105  0≤m≤min{n(n−1),4×105}0≤m≤min{n(n−1),4×105}  kk is not an input value, and it is guaranteed that 1≤k≤161≤k≤16 for each investigated ecosystem.  For all ii (1≤i≤m1≤i≤m), 1≤xi,yi≤n1≤xi,yi≤n and xi≠yixi≠yi.  Each ordered pair (xi,yi)(xi,yi) appears at most once in the input. 
OutputOutput on a single line the node identidiers of all trophic balance species in ascending order. For any two consecutive node identifiers, separate them by a space.
InputCopy4 31 22 32 4
InputCopy
Copy
4 3
1 2
2 3
2 4
OutputCopy2

OutputCopy
Copy
InputCopy4 51 21 31 42 33 2
InputCopy
Copy
4 5
1 2
1 3
1 4
2 3
3 2
OutputCopy2 3 4

OutputCopy
Copy


[Problem L - contest/2041]
A-Ju has a gorgeous castle in which she often enjoys living. However, she gets tired of living in the castle for a long time. Thus, she decides to rebuild her castle into some specific shape to make her it more beautiful.Let's say we represent A-Ju's castle as a 2D convex polygon∗∗ on the 2D plane. A-Ju aims to rebuild her castle into a point symmetric convex polygon. Here, a polygon is point symmetric if there exists a center cc such that for every point pp in the polygon, the reflection p′p′ of pp across cc is also in the polygon.While designing an arbitrary point symmetric convex polygon shape is easy, the cost of rebuilding is very high. After some estimation, A-Ju found that the cost of rebuilding is proportional to the area of the symmetric difference†† between the original castle and the new castle. See the following figure for an example:  In the example above, A-Ju's castle is a shape of the convex polygon formed by points (3,7)−(2,1)−(6,3)(3,7)−(2,1)−(6,3). After rebuilding her castle into the shape of the polygon formed by (3,7)−(73,3)−(133,13)−(5,133)(3,7)−(73,3)−(133,13)−(5,133), the area of the symmetric difference between these two polygons will be 113113. The difference can be calculated as the sum of the additional area (represented by the green grid region) and the shaved area (represented by the red line region).Please write a program that helps A-Ju design a blueprint of the new castle, such that the area of the symmetric difference between the original one and the new one is minimized. You only need to output the minimum value since A-Ju wants to estimate her cost first.∗∗A polygon PP is convex if for every two points p,q∈Pp,q∈P, the line segment connecting them is also contained in PP, i.e., tp+(1−t)q∈Ptp+(1−t)q∈P for all t∈[0,1]t∈[0,1]. Equivalently, it is a polygon whose interior angles are all less than 180∘180∘.††The symmetric difference of two polygons is the part of the 2D plane that belongs to exactly one polygon.
InputThe first line contains an integer nn, representing the number of vertices of the polygon that forms A-Ju's castle.Then, nn lines follow, the ii-th of which contains two integers xi,yixi,yi, representing the coordinates of the ii-th vertex. The vertices are given in a counterclockwise order.  3≤n≤5003≤n≤500  |xi|,|yi|≤104|xi|,|yi|≤104  The vertices are given in a counterclockwise order and are guaranteed to form a convex polygon without three collinear points. 
OutputPrint a single real number in one line, representing the minimum area of the symmetric difference between the original castle and the new castle. Your answer will be accepted if the absolute or relative error does not exceed 10−410−4. Formally, let your answer be aa, and the jury's answer be bb. Your answer is considered correct if |a−b|max(1,|b|)≤10−4|a−b|max(1,|b|)≤10−4.
InputCopy3
2 1
6 3
3 7

InputCopy
Copy
OutputCopy3.666666666667

OutputCopy
Copy
InputCopy4
0 0
5 0
5 5
0 5

InputCopy
Copy
OutputCopy0.000000000000

OutputCopy
Copy


[Problem M - contest/2041]
  Every student enrolled in the algorithms course is required to submit an assignment this week. The task is to implement an O(n2)O(n2)-time algorithm to sort nn given integers in non-decreasing order. Alice has already completed her assignment, and her implementation is shown below. int alice_sort(int *s, int n){  for(int i = 0; i < n; ++i){    for(int j = i + 1; j < n; ++j){      if(s[i] > s[j]){        int swap = s[i];        s[i] = s[j];        s[j] = swap;      }    }  }  return 0;}While you have access to Alice's code, you prefer not to simply copy it. Instead, you want to use Alice's sorting function as a building block for your own solution. There are two ways as listed below you can utilize her function, but each of them can be applied at most once. The order in which these two operations are invoked can be arbitrary.  Prefix sort: choose a length i∈{1,2,…,n}i∈{1,2,…,n} and call alicesort(s,i)alicesort(s,i). This sorts the first ii elements in the array ss.  Suffix sort: choose a length i∈{1,2,…,n}i∈{1,2,…,n} and call alicesort(s+n−i,i)alicesort(s+n−i,i). This sorts the last ii elements in the array ss. Due to the time complexity of the sorting algorithm, the cost of performing either a prefix or suffix sort is i2i2, where ii is the length of the chosen subarray. Your goal is to determine the minimum cost to sort the input array ss of nn integers in non-decreasing order using Alice's function, following the rules mentioned above.For example, Let s=[3,2,5,5,4,1]s=[3,2,5,5,4,1]. We can first perform a suffix sort of length 44, and the array becomes [3,2,1,4,5,5][3,2,1,4,5,5]. Then, we perform a prefix sort of length 33, and the array becomes [1,2,3,4,5,5][1,2,3,4,5,5], which is a sorted array. The cost is 42+32=2542+32=25. Here is another example, let s=[4,3,2,1]s=[4,3,2,1]. We can complete the sorting by performing only a prefix sort of length 44, and the cost is 42=1642=16.
InputThe first line contains exactly one integer nn which indicates the number of integers in the array ss. The second line contains the nn integers in s=[s0,s1,…,sn−1]s=[s0,s1,…,sn−1].  1≤n≤1061≤n≤106  For all ii (0≤i<n0≤i<n), 0≤si<231−10≤si<231−1. 
OutputOutput an integer on a line, indicating the minimum cost to sort the input array ss of nn integers in non-decreasing order using Alice's function, following the rules mentioned above.
InputCopy6
3 2 5 5 4 1

InputCopy
Copy
OutputCopy25

OutputCopy
Copy
InputCopy4
4 3 2 1

InputCopy
Copy
OutputCopy16

OutputCopy
Copy


[Problem N - contest/2041]
The country of Truckski is located in a rugged, mountainous region, and the geological condition has engendered a wide range of issues. The challenging terrain separates the different states in the country, resulting in an extremely inconvenient inter-state commute and more crucially a lack of central governmental control. Adding on top of that is a rampant crime rate that increases annually, and this severely disrupts the everyday lives of innocent citizens.A recent protest finally shed light on the situation, as the newly elected president has announced an ambitious project to resolve these issues. Her plan consists of two major components. The first is the construction of high-speed railways between the states to facilitate better connections and unity across the country. Since the states are mostly running independently from each other, to construct a railway between states uu and vv, the government has to pay a fee of au+avau+av dollars, with auau dollars given to state uu and avav dollars given to state vv. The railway operates bidirectionally, meaning that once it is built, people from state uu can now travel to state vv and vice versa. A railway can be built between almost any pair of states, except for mm particular pairs for which the terrain dividing them is so treacherous that the construction of a direct railroad between the two states becomes impossible.The second component of the project is to build a centralized prison that manages all criminals across the country. Given the large number of estimated prisoners, the president decided to pick one of the states to build the central prison and sever the connection from the state to the rest of the country.  An illustration for the sample input 1. (a) The costs of building direct railways between the states. (b) Consider building the central prison in State #3. All direct railroads that do not involve State #3 have to be built, with a total cost of 3+3+2=83+3+2=8 dollars. Given the above, the president would like to search for the minimum cost plan to construct railroads between the states so that:  the state with the central prison should not have any railway connecting it to any other states, and  all the other states should be connected, i.e., people should be able to travel from one such state to another, possibly by taking more than one train. You are working for the team in charge of the overall planning of the construction. The meeting with the president is happening in just a few hours, at which time you will have to brief her on the cost of different construction plans. Please calculate, for each state uu, the minimum cost plan to construct railroads between states meeting the above conditions when uu is where the central prison is built.
InputThe first line of the input contains two integers nn and mm, the number of states in Truckski and the number of pairs for which railroad construction is not feasible. The next line contains nn integers a1,…,ana1,…,an, the construction fee the government needs to pay to the ii-th state. Then, mm lines follow. The ii-th line contains two integers uiui and vivi meaning that it is impossible to build a (direct) railway between states uiui and vivi.  2≤n≤1052≤n≤105  0≤m≤1050≤m≤105  1≤ai≤1091≤ai≤109  1≤ui<vi≤n1≤ui<vi≤n  For all i≠j,(ui,vi)≠(uj,vj)i≠j,(ui,vi)≠(uj,vj). 
OutputOutput nn integers in one line. The ii-th integer is the minimum construction cost when the ii-th state is where the prison is built. If it is impossible to find a feasible railroad construction, output -1 instead.
InputCopy5 3
1 2 1 1 1
1 4
1 5
2 5

InputCopy
Copy
OutputCopy7 6 8 7 7

OutputCopy
Copy
InputCopy3 2
1 2 3
1 2
2 3

InputCopy
Copy
OutputCopy-1 4 -1

OutputCopy
Copy


[Problem A - contest/2039]
Shohag has an integer nn. Please help him find an increasing integer sequence 1≤a1<a2<…<an≤1001≤a1<a2<…<an≤100 such that aimodi≠ajmodjaimodi≠ajmodj ∗∗ is satisfied over all pairs 1≤i<j≤n1≤i<j≤n.It can be shown that such a sequence always exists under the given constraints.∗∗amodbamodb denotes the remainder of aa after division by bb. For example, 7mod3=1,8mod4=07mod3=1,8mod4=0 and 69mod10=969mod10=9.
InputThe first line contains a single integer tt (1≤t≤501≤t≤50) — the number of test cases.The first and only line of each test case contains an integer nn (2≤n≤502≤n≤50).
OutputFor each test case, print nn integers — the integer sequence that satisfies the conditions mentioned in the statement. If there are multiple such sequences, output any.
InputCopy236
InputCopy
Copy
2
3
6
OutputCopy2 7 8
2 3 32 35 69 95

OutputCopy
Copy


[Problem B - contest/2039]
For a string pp, let f(p)f(p) be the number of distinct non-empty substrings∗∗ of pp.Shohag has a string ss. Help him find a non-empty string pp such that pp is a substring of ss and f(p)f(p) is even or state that no such string exists.∗∗A string aa is a substring of a string bb if aa can be obtained from bb by deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end.
InputThe first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases.The first and only line of each test case contains a string ss (1≤|s|≤1051≤|s|≤105) consisting of lowercase English letters.It is guaranteed that the sum of the length of ss over all test cases doesn't exceed 3⋅1053⋅105.
OutputFor each test case, print a non-empty string that satisfies the conditions mentioned in the statement, or −1−1 if no such string exists. If there are multiple solutions, output any.
InputCopy5dcabaacayouknowwhocodeforcesbangladesh
InputCopy
Copy
5
dcabaac
a
youknowwho
codeforces
bangladesh
OutputCopyabaa
-1
youknowwho
eforce
bang

OutputCopy
Copy


[Problem C1 - contest/2039]
This is the easy version of the problem. The differences between the two versions are highlighted in bold. You can only make hacks if both versions of the problem are solved.Shohag has two integers xx and mm. Help him count the number of integers 1≤y≤m1≤y≤m such that x≠yx≠y and x⊕yx⊕y is a divisor∗∗ of either xx, yy, or both. Here ⊕⊕ is the bitwise XOR operator.∗∗The number bb is a divisor of the number aa if there exists an integer cc such that a=b⋅ca=b⋅c.
InputThe first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases.The first and only line of each test case contains two space-separated integers xx and mm (1≤x≤1061≤x≤106, 1≤m≤10181≤m≤1018).It is guaranteed that the sum of xx over all test cases does not exceed 107107.
OutputFor each test case, print a single integer — the number of suitable yy.
InputCopy56 95 72 36 44 1
InputCopy
Copy
5
6 9
5 7
2 3
6 4
4 1
OutputCopy3
2
1
1
0

OutputCopy
Copy


[Problem C2 - contest/2039]
This is the hard version of the problem. The differences between the two versions are highlighted in bold. You can only make hacks if both versions of the problem are solved.Shohag has two integers xx and mm. Help him count the number of integers 1≤y≤m1≤y≤m such that x⊕yx⊕y is divisible∗∗ by either xx, yy, or both. Here ⊕⊕ is the bitwise XOR operator.∗∗The number aa is divisible by the number bb if there exists an integer cc such that a=b⋅ca=b⋅c.
InputThe first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases.The first and only line of each test case contains two space-separated integers xx and mm (1≤x≤1061≤x≤106, 1≤m≤10181≤m≤1018).It is guaranteed that the sum of xx over all test cases does not exceed 107107.
OutputFor each test case, print a single integer — the number of suitable yy.
InputCopy57 102 36 41 64 1
InputCopy
Copy
5
7 10
2 3
6 4
1 6
4 1
OutputCopy3
2
2
6
1

OutputCopy
Copy


[Problem D - contest/2039]
Shohag has an integer nn and a set SS of mm unique integers. Help him find the lexicographically largest∗∗ integer array a1,a2,…,ana1,a2,…,an such that ai∈Sai∈S for each 1≤i≤n1≤i≤n and agcd(i,j)≠gcd(ai,aj)agcd⁡(i,j)≠gcd⁡(ai,aj)†† is satisfied over all pairs 1≤i<j≤n1≤i<j≤n, or state that no such array exists.∗∗An array aa is lexicographically larger than an array bb of the same length if a≠ba≠b, and in the first position where aa and bb differ, the array aa has a larger element than the corresponding element in bb.††gcd(x,y)gcd(x,y) denotes the greatest common divisor (GCD) of integers xx and yy. 
InputThe first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases.The first line of each test case contains two integers nn and mm (1≤m≤n≤1051≤m≤n≤105).The second line contains mm unique integers in increasing order, representing the elements of the set SS (1≤x≤n1≤x≤n for each x∈Sx∈S).It is guaranteed that the sum of nn over all test cases does not exceed 3⋅1053⋅105.
OutputFor each test case, if there is no solution print −1−1, otherwise print nn integers — the lexicographically largest integer array that satisfies the conditions.
InputCopy36 33 4 61 112 12
InputCopy
Copy
3
6 3
3 4 6
1 1
1
2 1
2
OutputCopy6 4 4 3 4 3 
1 
-1

OutputCopy
Copy


[Problem E - contest/2039]
Shohag has an array aa of integers. Initially a=[0,1]a=[0,1]. He can repeatedly perform the following operation any number of times:  Let kk be the number of inversions∗∗ in the current array aa.  Insert kk at any position in aa, including the beginning or the end. For example, if a=[4,6,2,4]a=[4,6,2,4], then the number of inversions is k=3k=3. So Shohag can obtain the following arrays after the operation: [3,4,6,2,4][3,4,6,2,4], [4,3,6,2,4][4,3,6,2,4], [4,6,3,2,4][4,6,3,2,4], [4,6,2,3,4][4,6,2,3,4], and [4,6,2,4,3][4,6,2,4,3].Given an integer nn, help Shohag count, modulo 998244353998244353, the number of distinct arrays of length nn that can be obtained after performing the operations.∗∗The number of inversions in an array aa is the number of pairs of indices (ii, jj) such that i<ji<j and ai>ajai>aj.
InputThe first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases.The first and only line of each test case contains an integer nn (2≤n≤1062≤n≤106).It is guaranteed that the sum of nn over all test cases does not exceed 106106.
OutputFor each test case, output an integer — the number of possible arrays modulo 998244353998244353.
InputCopy442769
InputCopy
Copy
4
4
2
7
69
OutputCopy5
1
682
325188814

OutputCopy
Copy


[Problem F1 - contest/2039]
This is the easy version of the problem. The only differences between the two versions of this problem are the constraints on tt, mm, and the sum of mm. You can only make hacks if both versions of the problem are solved.For an integer array aa of length nn, define f(k)f(k) as the greatest common divisor (GCD) of the maximum values of all subarrays∗∗ of length kk. For example, if the array is [2,1,4,6,2][2,1,4,6,2], then f(3)=gcd(max([2,1,4]),max([1,4,6]),max([4,6,2]))=gcd(4,6,6)=2f(3)=gcd(max([2,1,4]),max([1,4,6]),max([4,6,2]))=gcd(4,6,6)=2.An array is good if f(i)≠f(j)f(i)≠f(j) is satisfied over all pairs 1≤i<j≤n1≤i<j≤n.Shohag has an integer mm. Help him count the number, modulo 998244353998244353, of non-empty good arrays of arbitrary length such that each element of the array is an integer from 11 to mm.∗∗An array dd is a subarray of an array cc if dd can be obtained from cc by deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.
InputThe first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases.The first and only line of each test case contains an integer mm (1≤m≤1051≤m≤105).It is guaranteed that the sum of mm over all test cases does not exceed 105105.
OutputFor each test case, output an integer — the number of valid arrays modulo 998244353998244353.
InputCopy3259
InputCopy
Copy
3
2
5
9
OutputCopy4
29
165

OutputCopy
Copy


[Problem F2 - contest/2039]
This is the hard version of the problem. The only differences between the two versions of this problem are the constraints on tt, mm, and the sum of mm. You can only make hacks if both versions of the problem are solved.For an integer array aa of length nn, define f(k)f(k) as the greatest common divisor (GCD) of the maximum values of all subarrays∗∗ of length kk. For example, if the array is [2,1,4,6,2][2,1,4,6,2], then f(3)=gcd(max([2,1,4]),max([1,4,6]),max([4,6,2]))=gcd(4,6,6)=2f(3)=gcd⁡(max⁡([2,1,4]),max⁡([1,4,6]),max⁡([4,6,2]))=gcd⁡(4,6,6)=2.An array is good if f(i)≠f(j)f(i)≠f(j) is satisfied over all pairs 1≤i<j≤n1≤i<j≤n.Shohag has an integer mm. Help him count the number, modulo 998244353998244353, of non-empty good arrays of arbitrary length such that each element of the array is an integer from 11 to mm.∗∗An array dd is a subarray of an array cc if dd can be obtained from cc by deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.
InputThe first line contains a single integer tt (1≤t≤3⋅1051≤t≤3⋅105) — the number of test cases.The first and only line of each test case contains an integer mm (1≤m≤1061≤m≤106).Note that there is no limit on the sum of mm over all test cases.
OutputFor each test case, output an integer — the number of valid arrays modulo 998244353998244353.
InputCopy3259
InputCopy
Copy
3
2
5
9
OutputCopy4
29
165

OutputCopy
Copy


[Problem G - contest/2039]
Shohag has a tree with nn nodes.Pebae has an integer mm. She wants to assign each node a value — an integer from 11 to mm. So she asks Shohag to count the number, modulo 998244353998244353, of assignments such that following conditions are satisfied:  For each pair 1≤u<v≤n1≤u<v≤n, the least common multiple (LCM) of the values of the nodes in the unique simple path from uu to vv is not divisible by the number of nodes in the path.  The greatest common divisor (GCD) of the values of all nodes from 11 to nn is 11. But this problem is too hard for Shohag to solve. As Shohag loves Pebae, he has to solve the problem. Please save Shohag!
InputThe first line contains two space-separated integers nn and mm (2≤n≤1062≤n≤106, 1≤m≤1091≤m≤109).Each of the next n−1n−1 lines contains two integers uu and vv (1≤u,v≤n1≤u,v≤n) indicating there is an edge between vertices uu and vv. It is guaranteed that the given edges form a tree.
OutputPrint a single integer — the number of valid ways to assign each vertex a value, modulo 998244353998244353.
InputCopy6 61 22 33 44 53 6
InputCopy
Copy
6 6
1 2
2 3
3 4
4 5
3 6
OutputCopy2

OutputCopy
Copy
InputCopy2 51 2
InputCopy
Copy
2 5
1 2
OutputCopy7

OutputCopy
Copy
InputCopy12 693 51 42 34 55 68 97 34 89 101 1112 1
InputCopy
Copy
12 69
3 5
1 4
2 3
4 5
5 6
8 9
7 3
4 8
9 10
1 11
12 1
OutputCopy444144548

OutputCopy
Copy


[Problem H1 - contest/2039]
This is the easy version of the problem. The only difference is the maximum number of operations you can perform. You can only make hacks if both versions are solved.You are given an array aa of size nn.A cool swap walk is the following process:  In an n×nn×n grid, we note the cells in row ii and column jj as (i,j)(i,j). You need to walk from (1,1)(1,1) to (n,n)(n,n), taking only steps to the right or down. Formally, if you are in (x,y)(x,y) currently, you can step to either (x+1,y)(x+1,y) or (x,y+1)(x,y+1), but you can not step beyond the boundaries of the grid. When you step in (i,j)(i,j), you must swap aiai and ajaj when i≠ji≠j.You can perform at most 2n+42n+4 cool swap walks. Sort the array a1,a2,…,ana1,a2,…,an in non-decreasing order. We can show that it's always possible to do so.
InputThe first line contains an integer tt (1≤t≤1041≤t≤104) — the number of test cases.The first line of each test case contains an integer nn (2≤n≤5002≤n≤500) — the size of the array.The second line of each test case contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤n1≤ai≤n) — the elements of the array.It is guaranteed that the sum of n2n2 over all test cases does not exceed 2.5⋅1052.5⋅105.
OutputFor each test case, your output should consist of several lines:  The first line contains an integer kk (0≤k≤2n+40≤k≤2n+4), representing the number of cool swap walks you perform.  Each of the next kk lines contains a string ss of length 2n−22n−2 consisting only of R and D, representing the path (letters are case sensitive). For all 1≤i≤2n−21≤i≤2n−2, if si=si= R, you walk right in the ii-th step, otherwise you walk down in the ii-th step. 
InputCopy321 232 1 343 2 3 4
InputCopy
Copy
3
2
1 2
3
2 1 3
4
3 2 3 4
OutputCopy0
2
RRDD
DRDR
3
RRDRDD
DRDDRR
DDRRRD

OutputCopy
Copy


[Problem H2 - contest/2039]
This is the hard version of the problem. The only difference is the maximum number of operations you can perform. You can only make hacks if both versions are solved.You are given an array aa of size nn.A cool swap walk is the following process:  In an n×nn×n grid, we note the cells in row ii and column jj as (i,j)(i,j). You need to walk from (1,1)(1,1) to (n,n)(n,n), taking only steps to the right or down. Formally, if you are in (x,y)(x,y) currently, you can step to either (x+1,y)(x+1,y) or (x,y+1)(x,y+1), but you can not step beyond the boundaries of the grid. When you step in (i,j)(i,j), you must swap aiai and ajaj when i≠ji≠j.You can perform at most n+4n+4 cool swap walks. Sort the array a1,a2,…,ana1,a2,…,an in non-decreasing order. We can show that it's always possible to do so.
InputThe first line contains an integer tt (1≤t≤1041≤t≤104) — the number of test cases.The first line of each test case contains an integer nn (2≤n≤5002≤n≤500) — the size of the array.The second line of each test case contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤n1≤ai≤n) — the elements of the array.It is guaranteed that the sum of n2n2 over all test cases does not exceed 2.5⋅1052.5⋅105.
OutputFor each test case, your output should consist of several lines:  The first line contains an integer kk (0≤k≤n+40≤k≤n+4), representing the number of cool swap walks you perform.  Each of the next kk lines contains a string ss of length 2n−22n−2 consisting only of R and D, representing the path (letters are case sensitive). For all 1≤i≤2n−21≤i≤2n−2, if si=si= R, you walk right in the ii-th step, otherwise you walk down in the ii-th step. 
InputCopy321 232 1 343 2 3 4
InputCopy
Copy
3
2
1 2
3
2 1 3
4
3 2 3 4
OutputCopy0
2
RRDD
DRDR
3
RRDRDD
DRDDRR
DDRRRD

OutputCopy
Copy


[Problem A - contest/2038]
There is a team of nn software engineers numbered from 11 to nn. Their boss promises to give them a bonus if they complete an additional project. The project requires kk units of work in total. The bonus promised to the ii-th engineer is aiai burles. The boss doesn't assign specific tasks to engineers; it is expected that every engineer will voluntarily complete some integer amount of work units. The bonus will be paid to the entire team only if the project is completed; in other words, if the total amount of voluntary work units on the project is greater than or equal to kk.The amount of work that can be performed by each engineer is not limited. However, all engineers value their labour. The ii-th engineer estimates one unit of their work as bibi burles. If the bonus is paid, the benefit sisi of the ii-th engineer for completing cc units of work is defined as si=ai−c⋅bisi=ai−c⋅bi. If the bonus is not paid, the engineer will not volunteer to do any work.Engineers work together for many years, so they know how the bonus is going to be distributed and how much their colleagues value the labour. That is, all aiai and all bibi are known to every engineer in the team.Engineers are eager to get the bonus, so they agreed on the following process of work distribution between them:   the first engineer says: "I will complete c1c1 units of work", where c1c1 is a non-negative integer;  then, the second engineer says: "I will complete c2c2 units of work", where c2c2 is a non-negative integer;  ... and so on;  finally, the n-th engineer says: "I will complete cn units of work", where cn is a non-negative integer. Every engineer voices ci in a way to maximize their own benefit si. If the expected benefit is going to be zero, an engineer will still agree to work to get the experience and to help their colleagues obtain the bonus. However, if the benefit is expected to be negative for some reason (an engineer needs to perform an excessive amount of work or the project is not going to be completed), that engineer will not work at all (completes zero amount of work units).Given that every engineer acts perfectly, your task is to find out the numbers ci voiced by every engineer.
InputThe first line contains two integers n and k (1≤n≤1000; 1≤k≤106) — the number of engineers in the company and the number of work units the project requires, respectively.The second line contains n integers a1,a2,…,an (1≤ai≤109), where ai is the bonus which will be paid to the i-th engineer if the project is completed.The third line contains n integers b1,b2,…,bn (1≤bi≤1000), where bi is the work unit cost for the i-th engineer.
OutputPrint n integers c1,c2,…,cn (0≤ci≤k) — the amount of work completed by each engineer given that every engineer behaves optimally. Note that the answer is unique.
InputCopy3 64 7 61 2 3
InputCopy
Copy
3 6
4 7 6
1 2 3
OutputCopy1 3 2

OutputCopy
Copy
InputCopy3 124 7 61 2 3
InputCopy
Copy
3 12
4 7 6
1 2 3
OutputCopy0 0 0

OutputCopy
Copy
InputCopy3 116 7 81 2 3
InputCopy
Copy
3 11
6 7 8
1 2 3
OutputCopy6 3 2

OutputCopy
Copy


[Problem B - contest/2038]
You are given an integer array aa of size nn. The elements of the array are numbered from 11 to nn.You can perform the following operation any number of times (possibly, zero): choose an index ii from 11 to nn; decrease aiai by 22 and increase a(imodn)+1a(imodn)+1 by 11.After you perform the operations, all elements of the array should be non-negative equal integers.Your task is to calculate the minimum number of operations you have to perform.
InputThe first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases.The first line of each test case contains a single integer nn (2≤n≤2⋅1052≤n≤2⋅105).The second line of each test case contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤1091≤ai≤109).Additional constraint on the input: the sum of nn over all test cases doesn't exceed 2⋅1052⋅105.
OutputFor each test case, print a single integer — the minimum number of operations you have to perform. If it is impossible to make all elements of the array equal, print -1.
InputCopy321 131 3 242 1 2 6
InputCopy
Copy
3
2
1 1
3
1 3 2
4
2 1 2 6
OutputCopy0
-1
3

OutputCopy
Copy


[Problem C - contest/2038]
You are given a list of nn integers a1,a2,…,ana1,a2,…,an. You need to pick 88 elements from the list and use them as coordinates of four points. These four points should be corners of a rectangle which has its sides parallel to the coordinate axes. Your task is to pick coordinates in such a way that the resulting rectangle has the maximum possible area. The rectangle can be degenerate, i. e. its area can be 00. Each integer can be used as many times as it occurs in the list (or less).
InputThe first line contains one integer tt (1≤t≤250001≤t≤25000) — the number of test cases.The first line of each test case contains one integer nn (8≤n≤2⋅1058≤n≤2⋅105).The second line of each test case contains nn integers a1,a2,…,ana1,a2,…,an (−109≤ai≤109−109≤ai≤109).Additional constraint on the input: the sum of nn over all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case, print the answer as follows:  if it is impossible to construct a rectangle which meets the constraints from the statement, print a single line containing the word NO (case-insensitive);  otherwise, in the first line, print YES (case-insensitive). In the second line, print 88 integers x1,y1,x2,y2,x3,y3,x4,y4x1,y1,x2,y2,x3,y3,x4,y4 — the coordinates of the corners of the rectangle. You can print the corners in any order. 
InputCopy316-5 1 1 2 2 3 3 4 4 5 5 6 6 7 7 1080 0 -1 2 2 1 1 380 0 0 0 0 5 0 5
InputCopy
Copy
3
16
-5 1 1 2 2 3 3 4 4 5 5 6 6 7 7 10
8
0 0 -1 2 2 1 1 3
8
0 0 0 0 0 5 0 5
OutputCopyYES
1 2 1 7 6 2 6 7
NO
YES
0 0 0 5 0 0 0 5

OutputCopy
Copy


[Problem D - contest/2038]
You are given an array [a1,a2,…an][a1,a2,…an] consisting of integers between 00 and 109109. You have to split this array into several segments (possibly one) in such a way that each element belongs to exactly one segment.Let the first segment be the array [al1,al1+1,…,ar1][al1,al1+1,…,ar1], the second segment be [al2,al2+1,…,ar2][al2,al2+1,…,ar2], ..., the last segment be [alk,alk+1,…,ark][alk,alk+1,…,ark]. Since every element should belong to exactly one array, l1=1l1=1, rk=nrk=n, and ri+1=li+1ri+1=li+1 for each ii from 11 to k−1k−1. The split should meet the following condition: f([al1,al1+1,…,ar1])≤f([al2,al2+1,…,ar2])≤⋯≤f([alk,alk+1,…,ark])f([al1,al1+1,…,ar1])≤f([al2,al2+1,…,ar2])≤⋯≤f([alk,alk+1,…,ark]), where f(a)f(a) is the bitwise OR of all elements of the array aa.Calculate the number of ways to split the array, and print it modulo 998244353998244353. Two ways are considered different if the sequences [l1,r1,l2,r2,…,lk,rk][l1,r1,l2,r2,…,lk,rk] denoting the splits are different.
InputThe first line contains an integer nn (1≤n≤2⋅1051≤n≤2⋅105) — the length of the array aa.The second line contains nn integers a1,a2,…,ana1,a2,…,an (0≤ai≤1090≤ai≤109) — the elements of the given array.
OutputPrint one integer — the number of ways to split the array, taken modulo 998244353998244353.
InputCopy31 2 3
InputCopy
Copy
3
1 2 3
OutputCopy4
OutputCopy
Copy
InputCopy51000 1000 1000 1000 1000
InputCopy
Copy
5
1000 1000 1000 1000 1000
OutputCopy16
OutputCopy
Copy
InputCopy33 4 6
InputCopy
Copy
3
3 4 6
OutputCopy3
OutputCopy
Copy


[Problem E - contest/2038]
Suppose you have nn water barrels standing in a row, numbered from 11 to nn.All barrels are equal and have a bottom area equal to one unit, so the volume of the water inside a barrel is equal to the height of the water column. Initially, the ii-th barrel has vivi units of water.Adjacent barrels are connected by pipes. In other words, for each ii from 11 to n−1n−1, barrels ii and i+1i+1 are connected by a single horizontal pipe at height hihi. The widths of the pipes are negligible. These pipes allow water to flow between barrels.  Now you want to play with barrels. Your plan is to maximize the volume of the water in the first barrel by throwing clay into barrels. In one step, you can choose any barrel and throw one unit of clay into it. One unit of clay has the same volume as one unit of water. Clay is heavier than water and doesn't mix with it, so it falls to the bottom of the barrel, distributing evenly.Clay has a sticky structure, so it seals pipes if the clay column is high enough. More formally, suppose the pipe is at height hh. If the height of the clay column is also hh (or lower), the pipe is working. But the moment you add more clay into the barrel, the pipe becomes sealed instantly, preventing any water from moving between barrels.You have a mountain of clay, so you can repeat the step described above any number of times. However, between the steps, you have to wait until the water reaches the new equilibrium.What is the maximum water volume you can collect in the first barrel?Assume that the barrels are high enough, so the water doesn't overflow, and the pipe widths are negligible.
InputThe first line contains a single integer nn (2≤n≤2⋅1052≤n≤2⋅105) — the number of barrels.The second line contains nn integers v1,v2,…,vnv1,v2,…,vn (0≤vi≤1060≤vi≤106), where vivi is the initial water volume in the ii-th barrel.The third line contains n−1n−1 integers h1,h2,…,hn−1h1,h2,…,hn−1 (1≤hi≤1061≤hi≤106), where hihi is the height of the pipe between the ii-th and the (i+1)(i+1)-st barrel.Additional constraint on the input: the given water heights are in an equilibrium.
OutputPrint a single number — the maximum volume of water in the first barrel. Your answer is considered correct if its absolute or relative error does not exceed 10−610−6.Formally, let your answer be aa, and the jury's answer be bb. Your answer is accepted if and only if |a−b|max(1,|b|)≤10−6|a−b|max(1,|b|)≤10−6.
InputCopy21 22
InputCopy
Copy
2
1 2
2
OutputCopy2.500000000000000

OutputCopy
Copy
InputCopy33 0 06 9
InputCopy
Copy
3
3 0 0
6 9
OutputCopy3.000000000000000

OutputCopy
Copy
InputCopy510 0 0 0 511 1 2 5
InputCopy
Copy
5
10 0 0 0 5
11 1 2 5
OutputCopy11.916666666666667

OutputCopy
Copy


[Problem F - contest/2038]
Suppose you are working in the Ministry of Digital Development of Berland, and your task is to monitor the industry of video blogging.There are nn bloggers in Berland. Recently, due to the poor state of the main video platform in Berland, two alternative platforms were introduced. That's why bloggers started to reupload their videos to these alternative platforms. You've got the statistics that the ii-th blogger uploaded vivi videos to the first alternative platform and riri videos to the second alternative platform.You think that a potential user will be upset if even at least one of his favorite bloggers doesn't upload anything. However, if a blogger uploads videos to both platforms, the user will watch that blogger on the platform where more videos are available. So, you've come up with the following function to estimate user experience. Suppose a user watches kk bloggers b1,b2,…,bkb1,b2,…,bk; then, let user experience be E(b1,…,bk)=max(mini=1..kv[bi],mini=1..kr[bi]).E(b1,…,bk)=max(mini=1..kv[bi],mini=1..kr[bi]).In order to get some statistics, you want to calculate the value avgkavgk that is equal to an average experience among all subsets of bloggers of size kk. Also, you have to calculate avgkavgk for each kk from 11 to nn.Since answers may be too large, print them modulo 998244353998244353.
InputThe first line contains a single integer nn (1≤n≤2⋅1051≤n≤2⋅105) — the number of bloggers.The second line contains nn integers v1,v2,…,vnv1,v2,…,vn (0≤vi≤1060≤vi≤106), where vivi is the number of videos of the ii-th blogger on the first alternative platform.The third line contains nn integers r1,r2,…,rnr1,r2,…,rn (0≤ri≤1060≤ri≤106), where riri is the number of videos of the ii-th blogger on the second alternative platform.
OutputPrint nn integers avg1,avg2,…,avgnavg1,avg2,…,avgn.It can be proven that avgkavgk may be represented as an irreducible fraction xyxy where y≢0(mod998244353)y≢0(mod998244353). So, print avgkavgk in a form x⋅y−1mod998244353x⋅y−1mod998244353.
InputCopy32 1 21 2 1
InputCopy
Copy
3
2 1 2
1 2 1
OutputCopy2 332748119 1 

OutputCopy
Copy
InputCopy45 5 5 50 0 0 0
InputCopy
Copy
4
5 5 5 5
0 0 0 0
OutputCopy5 5 5 5 

OutputCopy
Copy
InputCopy51 9 3 7 52 4 6 8 5
InputCopy
Copy
5
1 9 3 7 5
2 4 6 8 5
OutputCopy6 4 3 199648873 2 

OutputCopy
Copy


[Problem G - contest/2038]
This is an interactive problem. You have to use flush operation right after printing each line. For example, in C++ you should use the function fflush(stdout) or cout.flush(), in Java or Kotlin — System.out.flush(), and in Python — sys.stdout.flush().The jury has a string ss consisting of characters 0 and/or 1. The length of this string is nn. You can ask the following queries:  11 tt — "how many times does tt appear in ss as a contiguous substring?" Here, tt should be a string consisting of characters 0 and/or 1; its length should be at least 11 and at most nn. For example, if the string ss is 111011 and the string tt is 11, the response to the query is 33. You have to guess at least one character in the string ss by asking no more than 33 queries. Note that giving the answer does not count as a query.In every test and in every test case, the string ss is fixed beforehand.
InputCopy3     // 3 test cases
3     // the length of the string is 3

1     // 101 occurs once

1     // guessed correctly
2     // the length of the string is 2

0     // 00 occurs zero times

0     // 0 occurs zero times

1     // guessed correctly
2     // the length of the string is 2

1     // 1 occurs once

0     // 01 occurs zero times

1     // guessed correctly

InputCopy
Copy
OutputCopy

1 101 // how many times 101 occurs

0 2 0 // guess: s[2] is 0


1 00  // how many times 00 occurs

1 0   // how many times 0 occurs

0 1 1 // guess: s[1] is 1


1 1   // how many times 1 occurs

1 01  // how many times 01 occurs

0 2 0 // guess: s[2] is 0


OutputCopy
Copy


[Problem H - contest/2038]
Monocarp plays a computer game. In this game, he maintains a space empire. The empire is governed by n political parties. Initially, every party has political power equal to 0, and there is no ruling party.During each of the next m turns, the following happens:  initially, Monocarp has to choose which party he supports. He can support any party, except for the ruling party. When Monocarp supports a party, its political power is increased by 1. If Monocarp supports the i-th party during the j-th turn, his score increases by ai,j points;  then, the elections happen, and the party with the maximum political power is chosen as the ruling party (if there are multiple such parties, the party with the lowest index among them is chosen). The former ruling party is replaced, unless it is chosen again;  finally, an event happens. At the end of the j-th turn, the party pj must be the ruling party to prevent a bad outcome of the event, otherwise Monocarp loses the game. Determine which party Monocarp has to support during each turn so that he doesn't lose the game due to the events, and the score he achieves is the maximum possible. Initially, Monocarp's score is 0.
InputThe first line contains two integers n and m (2≤n,m≤50) — the number of political parties and the number of turns, respectively.The second line contains m integers p1,p2,…,pm (1≤pj≤n), where pj is the index of the party which should be the ruling party at the end of the j-th turn.Then n lines follow. The i-th of them contains m integers ai,1,ai,2,…,ai,m (1≤ai,j≤105), where ai,j is the amount of points Monocarp gets if he supports the i-th party during the j-th turn.
OutputIf Monocarp loses the game no matter how he acts, print one integer −1.Otherwise, print m integers c1,c2,…,cm (1≤cj≤n), where cj is the index of the party Monocarp should support during the j-th turn. If there are multiple answers, print any of them.
InputCopy2 32 1 21 2 34 5 6
InputCopy
Copy
2 3
2 1 2
1 2 3
4 5 6
OutputCopy2 1 2 

OutputCopy
Copy
InputCopy3 51 1 1 2 11 1 1 1 110 5 7 8 157 10 9 8 15
InputCopy
Copy
3 5
1 1 1 2 1
1 1 1 1 1
10 5 7 8 15
7 10 9 8 15
OutputCopy1 3 2 2 1 

OutputCopy
Copy
InputCopy3 51 1 1 1 11 1 1 1 110 5 7 8 157 10 9 8 15
InputCopy
Copy
3 5
1 1 1 1 1
1 1 1 1 1
10 5 7 8 15
7 10 9 8 15
OutputCopy-1

OutputCopy
Copy


[Problem I - contest/2038]
Berland is this year's host country of the International Collegiate Polyathlon Competition! Similar to biathlon being a competition of two sports, polyathlon is a competition of many sports. This year, there are mm sports. Also, there are nn participants in the event. The sports are numbered from 11 to mm, and the participants are numbered from 11 to nn.Some participants are skilled in multiple sports. You are given a binary matrix n×mn×m such that the jj-th character of the ii-th row is 1 if the ii-th participant is skilled in the jj-th sport, and 0, otherwise. It's also known that, for each pair of participants, there exists at least one sport such that one of them is skilled in that sport and the other one isn't.The order of sports in the competition is determined at the opening ceremony. Historically, it's done by the almighty Random Number Generator. A random number xx from 11 to mm is rolled. The competition then starts with the sport xx, then the sport (xmodm+1)(xmodm+1) is played, then the sport ((x+1)modm+1)((x+1)modm+1), and so on.Each sport is played as follows. If all remaining participants (all participants which are not eliminated yet) are not skilled in that sport, everyone goes through to the next sport. Otherwise, all skilled participants go through to the next sport, and all unskilled participants are eliminated from the competition. Once there is a single participant remaining in the competition, the competition ends, and that participant is declared the winner.As an organizer of the competition, you are curious of the possible outcomes of the competition beforehand (not that you are going to rig the random roll, how could you possibly think that...). For each sport xx, print the index of the winner if the competition starts with the sport xx.
InputThe first line contains two integers n and m (2≤n,m≤106; n≤2m; nm≤2⋅106) — the number of participants and the number of sports, respectively.The i-th of the next n lines contains a binary string consisting of exactly m characters 0 or 1 — the skillset of the i-th participant. If the j-th character is 1, the i-th participant is skilled in the j-th sport. If it's 0, the i-th participant is not skilled in the j-th sport.Additional constraint on the input: for each pair of participants, there exists at least one sport such that one of them is skilled in that sport and the other one isn't. In other words, all n binary strings are pairwise distinct.
OutputPrint m integers. For each x from 1 to m, print the index of the winner if the competition starts with the sport x.
InputCopy3 5100100110010101
InputCopy
Copy
3 5
10010
01100
10101
OutputCopy3 2 3 1 3 

OutputCopy
Copy


[Problem J - contest/2038]
Monocarp is waiting for a bus at the bus stop. Unfortunately, there are many people who want to ride a bus too.You are given a list of events of two types:   B bibi — a bus with bibi free seats arrives at the stop;  P pipi — pipi people arrive at the stop. These events are listed in a chronological order. When a bus arrives, the following happens. All people at the bus stop (except for Monocarp) try to enter the bus. If there are enough free seats for all of them, then they all enter the bus. Otherwise, some people remain at the bus stop (the number of people who enter the bus is equal to the number of free seats).If there is still at least one free seat after all people (except for Monocarp) enter the bus, then Monocarp can decide to enter this bus as well (but he might choose to wait for another bus). For each bus, you have to determine if it is possible for Monocarp to take that bus.
InputThe first line contains one integer nn (1≤n≤103)(1≤n≤103) — the number of events.Then, nn lines follow. The ii-th of them contains the description of the ii-th event in one of the two following formats:  B bibi (1≤bi≤1061≤bi≤106) — a bus with bibi free seats arrives at the stop;  P pipi (1≤pi≤1061≤pi≤106) — pipi people arrive at the stop. Additional constraint on the input: there is at least one event of type B.
OutputFor each event of type B, print YES if it is possible for Monocarp to take the corresponding bus, or NO otherwise (case-insensitive).
InputCopy10P 2P 5B 8P 14B 5B 9B 3P 2B 1B 2
InputCopy
Copy
10
P 2
P 5
B 8
P 14
B 5
B 9
B 3
P 2
B 1
B 2
OutputCopyYES
NO
NO
YES
NO
YES

OutputCopy
Copy


[Problem K - contest/2038]
You have an n×n grid and two integers a and b. Both the rows and the columns are numbered from 1 to n. Let's denote the cell at the intersection of the i-th row and the j-th column as (i,j).You are standing in the cell (1,1) and want to move into the cell (n,n).Suppose you are in the cell (i,j); in one step, you can move either into the cell (i,j+1) or into the cell (i+1,j) if the corresponding cells exist.Let's define the cost of the cell (i,j) as c(i,j)=gcd(i,a)+gcd(j,b) (here, gcd(x,y) denotes the greatest common divisor of x and y). The cost of the route from (1,1) to (n,n) is the sum of costs of the visited cells (including the starting cell and the finishing cell).  Find the route with minimum possible cost and print its cost.
InputThe only line contains three integers n, a, and b (2≤n≤106; 1≤a,b≤106).
OutputPrint one integer — the cost of the cheapest route from (1,1) to (n,n).
InputCopy4 2 4
InputCopy
Copy
4 2 4
OutputCopy21

OutputCopy
Copy
InputCopy10 210 420
InputCopy
Copy
10 210 420
OutputCopy125

OutputCopy
Copy


[Problem L - contest/2038]
Recently, Monocarp started working as a director of a park located near his house. The park is quite large, so it even has a small river splitting it into several zones. Several bridges are built across this river. Three of these bridges are especially old and need to be repaired.All three bridges have the same length but differ in width. Their widths are 1818, 2121 and 2525 units, respectively.During the park renovation process, Monocarp has to replace the old planks that served as the surface of the bridges with the new ones.  Planks are sold with a standard length of 6060 units. Monocarp already knows that he needs nn planks for each bridge. But since the bridges have different widths, he needs nn planks of length 1818 for the first bridge, nn planks of length 2121 for the second one, and nn planks of length 2525 for the last one.Workers in charge of renovation have no problem with cutting planks into parts but refuse to join planks, since it creates weak spots and looks ugly.Monocarp wants to buy as few planks as possible but struggles to calculate the required number of planks. Can you help him?
InputThe first and only line contains a single integer nn (1≤n≤10001≤n≤1000) — the number of planks required for each of the three bridges.
OutputPrint a single integer — the minimum number of planks of standard length (6060 units) Monocarp needs to cover all three bridges if the planks can be cut into parts.
InputCopy1
InputCopy
Copy
1
OutputCopy2

OutputCopy
Copy
InputCopy3
InputCopy
Copy
3
OutputCopy4

OutputCopy
Copy
InputCopy1000
InputCopy
Copy
1000
OutputCopy1167

OutputCopy
Copy


[Problem M - contest/2038]
Consider the following game. There is a deck, which consists of cards of nn different suits. For each suit, there are 1313 cards in the deck, all with different ranks (the ranks are 22, 33, 44, ..., 1010, Jack, Queen, King and Ace).Initially, the deck is shuffled randomly (all (13n)!(13n)! possible orders of cards have the same probability). You draw 55 topmost cards from the deck. Then, every turn of the game, the following events happen, in the given order:  if the cards in your hand form a Royal Flush (a 1010, a Jack, a Queen, a King, and an Ace, all of the same suit), you win, and the game ends;  if you haven't won yet, and the deck is empty, you lose, and the game ends;  if the game hasn't ended yet, you may choose any cards from your hand (possibly, all of them) and discard them. When a card is discarded, it is removed from the game;  finally, you draw cards from the deck, until you have 55 cards or the deck becomes empty. Your goal is to find a strategy that allows you to win in the minimum expected number of turns. Note that the turn when the game ends is not counted (for example, if the 55 cards you draw initially already form a Royal Flush, you win in 00 turns).Calculate the minimum possible expected number of turns required to win the game.
InputThe only line contains one integer nn (1≤n≤41≤n≤4) — the number of suits used in the game.
OutputPrint the minimum expected number of turns. Your answer will be considered correct if its absolute or relative error does not exceed 10−610−6. Formally, let your answer be aa, and the jury's answer be bb. Your answer will be accepted if and only if |a−b|max(1,|b|)≤10−6|a−b|max(1,|b|)≤10−6.
InputCopy1
InputCopy
Copy
1
OutputCopy3.598290598

OutputCopy
Copy
InputCopy2
InputCopy
Copy
2
OutputCopy8.067171309

OutputCopy
Copy


[Problem N - contest/2038]
An expression is a string consisting of three characters, where the first and the last characters are digits (from 00 to 99), and the middle character is a comparison symbol (<, = or >).An expression is true if the comparison symbol matches the digits (for example, if the first digit is strictly less than the last digit, the comparison symbol should be <).For example, the expressions 1<3, 4>2, 0=0 are true, while 5>5, 7<3 are not.You are given a string ss, which is an expression. Change as few characters as possible so that ss becomes a true expression. Note that if ss is already true, you should leave it as it is.
InputThe first line contains one integer tt (1≤t≤3001≤t≤300) — the number of test cases.Each test case consists of one line containing the string ss (|s|=3|s|=3, the first and the last characters of ss are digits, the second character is a comparison symbol).
OutputFor each test case, print a string consisting of 33 characters — a true expression which can be obtained by changing as few characters as possible in ss. If there are multiple answers, print any of them.
InputCopy53<73>78=90=05<3
InputCopy
Copy
5
3<7
3>7
8=9
0=0
5<3
OutputCopy3<7
8>7
8<9
0=0
0<3

OutputCopy
Copy


[Problem A - contest/2037]
Kinich wakes up to the start of a new day. He turns on his phone, checks his mailbox, and finds a mysterious present. He decides to unbox the present.Kinich unboxes an array aa with nn integers. Initially, Kinich's score is 00. He will perform the following operation any number of times:  Select two indices ii and jj (1≤i<j≤n)(1≤i<j≤n) such that neither ii nor jj has been chosen in any previous operation and ai=ajai=aj. Then, add 11 to his score. Output the maximum score Kinich can achieve after performing the aforementioned operation any number of times.
InputThe first line contains an integer tt (1≤t≤5001≤t≤500) — the number of test cases.The first line of each test case contains an integer nn (1≤n≤201≤n≤20) — the length of aa.The following line of each test case contains nn space-separated integers a1,a2,…,ana1,a2,…,an (1≤ai≤n1≤ai≤n).
OutputFor each test case, output the maximum score achievable on a new line.
InputCopy51122 221 241 2 3 161 2 3 1 2 3
InputCopy
Copy
5
1
1
2
2 2
2
1 2
4
1 2 3 1
6
1 2 3 1 2 3
OutputCopy0
1
0
1
3

OutputCopy
Copy


[Problem B - contest/2037]
To help you prepare for your upcoming Codeforces contest, Citlali set a grid problem and is trying to give you a nn by mm grid through your input stream. Specifically, your input stream should contain the following:  The first line contains two integers nn and mm — the dimensions of the grid.  The following nn lines contain mm integers each — the values of the grid. However, someone has intercepted your input stream, shuffled all given integers, and put them all on one line! Now, there are kk integers all on one line, and you don't know where each integer originally belongs. Instead of asking Citlali to resend the input, you decide to determine the values of nn and mm yourself.Output any possible value of nn and mm that Citlali could have provided.
InputThe first line contains an integer tt (1≤t≤1041≤t≤104) — the number of test cases.The first line of each test case contains an integer kk (3≤k≤2⋅1053≤k≤2⋅105) — the total number of inputs in your input stream.The following line of each test case contains kk integers a1,a2,…,aka1,a2,…,ak (1≤ai≤k1≤ai≤k) — the shuffled inputs of your input stream. It is guaranteed that nn and mm are contained within the kk integers.It is guaranteed that the sum of kk over all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case, output two integers, one possible value of nn and mm. If multiple possible answers exist, output any.
InputCopy531 1 2113 3 4 5 6 7 8 9 9 10 1188 4 8 3 8 2 8 162 1 4 5 3 381 2 6 3 8 5 5 3
InputCopy
Copy
5
3
1 1 2
11
3 3 4 5 6 7 8 9 9 10 11
8
8 4 8 3 8 2 8 1
6
2 1 4 5 3 3
8
1 2 6 3 8 5 5 3
OutputCopy1 1
3 3
2 3
4 1
1 6
OutputCopy
Copy


[Problem C - contest/2037]
Superultra, a little red panda, desperately wants primogems. In his dreams, a voice tells him that he must solve the following task to obtain a lifetime supply of primogems. Help Superultra!Construct a permutation∗∗ pp of length nn such that pi+pi+1pi+pi+1 is composite†† over all 1≤i≤n−11≤i≤n−1. If it's not possible, output −1−1.∗∗A permutation of length nn is an array consisting of nn distinct integers from 11 to nn in arbitrary order. For example, [2,3,1,5,4][2,3,1,5,4] is a permutation, but [1,2,2][1,2,2] is not a permutation (22 appears twice in the array), and [1,3,4][1,3,4] is also not a permutation (n=3n=3 but there is 44 in the array).††An integer xx is composite if it has at least one other divisor besides 11 and xx. For example, 44 is composite because 22 is a divisor.
InputThe first line contains tt (1≤t≤1041≤t≤104) — the number of test cases.Each test case contains an integer nn (2≤n≤2⋅1052≤n≤2⋅105) — the length of the permutation.It is guaranteed that the sum of nn over all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case, if it's not possible to construct pp, output −1−1 on a new line. Otherwise, output nn integers p1,p2,…,pnp1,p2,…,pn on a new line.
InputCopy238
InputCopy
Copy
2
3
8
OutputCopy-1
1 8 7 3 6 2 4 5
OutputCopy
Copy


[Problem D - contest/2037]
Mualani loves surfing on her sharky surfboard!Mualani's surf path can be modeled by a number line. She starts at position 11, and the path ends at position LL. When she is at position xx with a jump power of kk, she can jump to any integer position in the interval [x,x+k][x,x+k]. Initially, her jump power is 11. However, her surf path isn't completely smooth. There are nn hurdles on her path. Each hurdle is represented by an interval [l,r][l,r], meaning she cannot jump to any position in the interval [l,r][l,r]. There are also mm power-ups at certain positions on the path. Power-up ii is located at position xixi and has a value of vivi. When Mualani is at position xixi, she has the option to collect the power-up to increase her jump power by vivi. There may be multiple power-ups at the same position. When she is at a position with some power-ups, she may choose to take or ignore each individual power-up. No power-up is in the interval of any hurdle.What is the minimum number of power-ups she must collect to reach position LL to finish the path? If it is not possible to finish the surf path, output −1−1.
InputThe first line contains an integer tt (1≤t≤1041≤t≤104) — the number of test cases.The first line of each test case contains three integers nn, mm, and LL (1≤n,m≤2⋅105,3≤L≤1091≤n,m≤2⋅105,3≤L≤109) — the number of hurdles, the number of power-ups, and the position of the end.The following nn lines contain two integers lili and riri (2≤li≤ri≤L−12≤li≤ri≤L−1) — the bounds of the interval for the ii'th hurdle. It is guaranteed that ri+1<li+1ri+1<li+1 for all 1≤i<n1≤i<n (i.e. all hurdles are non-overlapping, sorted by increasing positions, and the end point of a previous hurdle is not consecutive with the start point of the next hurdle).The following mm lines contain two integers xixi and vivi (1≤xi,vi≤L1≤xi,vi≤L) — the position and the value for the ii'th power-up. There may be multiple power-ups with the same xx. It is guaranteed that xi≤xi+1xi≤xi+1 for all 1≤i<m1≤i<m (i.e. the power-ups are sorted by non-decreasing position) and no power-up is in the interval of any hurdle.It is guaranteed the sum of nn and the sum of mm over all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case, output the minimum number of power-ups she must collect to reach position LL. If it is not possible, output −1−1.
InputCopy42 5 507 1430 402 23 13 518 222 324 3 504 615 1820 2634 381 28 210 21 4 1710 141 61 21 216 91 2 105 92 32 2
InputCopy
Copy
4
2 5 50
7 14
30 40
2 2
3 1
3 5
18 2
22 32
4 3 50
4 6
15 18
20 26
34 38
1 2
8 2
10 2
1 4 17
10 14
1 6
1 2
1 2
16 9
1 2 10
5 9
2 3
2 2
OutputCopy4
-1
1
2

OutputCopy
Copy


[Problem E - contest/2037]
This is an interactive problem.Kachina challenges you to guess her favorite binary string∗∗ ss of length nn. She defines f(l,r)f(l,r) as the number of subsequences†† of 0101 in slsl+1…srslsl+1…sr. Two subsequences are considered different if they are formed by deleting characters from different positions in the original string, even if the resulting subsequences consist of the same characters.To determine ss, you can ask her some questions. In each question, you can choose two indices ll and rr (1≤l<r≤n1≤l<r≤n) and ask her for the value of f(l,r)f(l,r).Determine and output ss after asking Kachina no more than nn questions. However, it may be the case that ss is impossible to be determined. In this case, you would need to report IMPOSSIBLEIMPOSSIBLE instead.Formally, ss is impossible to be determined if after asking nn questions, there are always multiple possible strings for ss, regardless of what questions are asked. Note that if you report IMPOSSIBLEIMPOSSIBLE when there exists a sequence of at most nn queries that will uniquely determine the binary string, you will get the Wrong Answer verdict.∗∗A binary string only contains characters 00 and 11.††A sequence aa is a subsequence of a sequence bb if aa can be obtained from bb by the deletion of several (possibly, zero or all) elements. For example, subsequences of 10111011011101 are 00, 11, 1111111111, 01110111, but not 000000 nor 1110011100.
InputThe first line of input contains a single integer tt (1≤t≤1031≤t≤103) — the number of test cases.The first line of each test case contains a single integer nn (2≤n≤1042≤n≤104) — the length of ss. It is guaranteed that the sum of nn over all test cases does not exceed 104104.
InputCopy2
5

4

0

1

2

2

0
InputCopy
Copy
OutputCopy? 1 5

? 2 4

? 4 5

? 3 5

! 01001

? 1 2

! IMPOSSIBLE
OutputCopy
Copy


[Problem F - contest/2037]
You have obtained the new limited event character Xilonen. You decide to use her in combat.There are nn enemies in a line. The ii'th enemy from the left has health hihi and is currently at position xixi. Xilonen has an attack damage of mm, and you are ready to defeat the enemies with her.Xilonen has a powerful "ground stomp" attack. Before you perform any attacks, you select an integer pp and position Xilonen there (pp can be any integer position, including a position with an enemy currently). Afterwards, for each attack, she deals mm damage to an enemy at position pp (if there are any), m−1m−1 damage to enemies at positions p−1p−1 and p+1p+1, m−2m−2 damage to enemies at positions p−2p−2 and p+2p+2, and so on. Enemies that are at least a distance of mm away from Xilonen take no damage from attacks.Formally, if there is an enemy at position xx, she will deal max(0,m−|p−x|)max(0,m−|p−x|) damage to that enemy each hit. Note that you may not choose a different pp for different attacks. Over all possible pp, output the minimum number of attacks Xilonen must perform to defeat at least kk enemies. If it is impossible to find a pp such that eventually at least kk enemies will be defeated, output −1−1 instead. Note that an enemy is considered to be defeated if its health reaches 00 or below.
InputThe first line contains an integer tt (1≤t≤1041≤t≤104) – the number of test cases.The first line of each test case contains three integers nn, mm, and kk (1≤k≤n≤1051≤k≤n≤105, 1≤m≤1091≤m≤109).The following line contains nn integers h1,h2,...,hnh1,h2,...,hn (1≤hi≤1091≤hi≤109).The last line of each testcase contains nn integers x1,x2,...,xnx1,x2,...,xn (1≤xi≤1091≤xi≤109, xi<xi+1xi<xi+1 for all 1≤i<n1≤i<n)It is guaranteed that the sum of nn over all test cases does not exceed 105105.
OutputFor each test case, output an integer on a new line, the minimum number of attacks that must be performed to defeat at least kk enemies. If it is impossible to find a pp such that eventually at least kk enemies will be defeated, output −1−1 instead.
InputCopy65 5 37 7 7 7 71 2 3 4 59 5 92 4 6 8 10 8 6 4 21 2 3 4 5 6 7 8 92 10 21 11 202 10 169696969 4204204201 202 10 210 151 192 2 21000000000 11 3
InputCopy
Copy
6
5 5 3
7 7 7 7 7
1 2 3 4 5
9 5 9
2 4 6 8 10 8 6 4 2
1 2 3 4 5 6 7 8 9
2 10 2
1 1
1 20
2 10 1
69696969 420420420
1 20
2 10 2
10 15
1 19
2 2 2
1000000000 1
1 3
OutputCopy2
2
-1
6969697
15
1000000000

OutputCopy
Copy


[Problem G - contest/2037]
You are exploring the stunning region of Natlan! This region consists of nn cities, and each city is rated with an attractiveness aiai. A directed edge exists from City ii to City jj if and only if i<ji<j and gcd(ai,aj)≠1gcd(ai,aj)≠1, where gcd(x,y)gcd(x,y) denotes the greatest common divisor (GCD) of integers xx and yy.Starting from City 11, your task is to determine the total number of distinct paths you can take to reach City nn, modulo 998244353998244353. Two paths are different if and only if the set of cities visited is different.
InputThe first line contains an integer nn (2≤n≤2⋅1052≤n≤2⋅105) — the number of cities.The second line contains nn integers a1,a2,…,ana1,a2,…,an (2≤ai≤1062≤ai≤106) — the attractiveness of each city.
OutputOutput the total number of distinct paths you can take to reach City nn, modulo 998244353998244353.
InputCopy52 6 3 4 6
InputCopy
Copy
5
2 6 3 4 6
OutputCopy5

OutputCopy
Copy
InputCopy54 196 2662 2197 121
InputCopy
Copy
5
4 196 2662 2197 121
OutputCopy2

OutputCopy
Copy
InputCopy73 6 8 9 11 12 20
InputCopy
Copy
7
3 6 8 9 11 12 20
OutputCopy7

OutputCopy
Copy
InputCopy22 3
InputCopy
Copy
2
2 3
OutputCopy0

OutputCopy
Copy


[Problem A - contest/2031]
Amidst skyscrapers in the bustling metropolis of Metro Manila, the newest Noiph mall in the Philippines has just been completed! The construction manager, Penchick, ordered a state-of-the-art monument to be built with nn pillars. The heights of the monument's pillars can be represented as an array hh of nn positive integers, where hihi represents the height of the ii-th pillar for all ii between 11 and nn.Penchick wants the heights of the pillars to be in non-decreasing order, i.e. hi≤hi+1hi≤hi+1 for all ii between 11 and n−1n−1. However, due to confusion, the monument was built such that the heights of the pillars are in non-increasing order instead, i.e. hi≥hi+1hi≥hi+1 for all ii between 11 and n−1n−1.Luckily, Penchick can modify the monument and do the following operation on the pillars as many times as necessary:  Modify the height of a pillar to any positive integer. Formally, choose an index 1≤i≤n1≤i≤n and a positive integer xx. Then, assign hi:=xhi:=x. Help Penchick determine the minimum number of operations needed to make the heights of the monument's pillars non-decreasing.
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤10001≤t≤1000). The description of the test cases follows.The first line of each test case contains a single integer nn (1≤n≤501≤n≤50) — the number of pillars.The second line of each test case contains nn integers h1,h2,…,hnh1,h2,…,hn (1≤hi≤n1≤hi≤n and hi≥hi+1hi≥hi+1) — the height of the pillars.Please take note that the given array hh is non-increasing.Note that there are no constraints on the sum of nn over all test cases.
OutputFor each test case, output a single integer representing the minimum number of operations needed to make the heights of the pillars non-decreasing.
InputCopy355 4 3 2 132 2 111
InputCopy
Copy
3
5
5 4 3 2 1
3
2 2 1
1
1
OutputCopy4
1
0

OutputCopy
Copy


[Problem B - contest/2031]
Penchick and his friend Kohane are touring Indonesia, and their next stop is in Surabaya!In the bustling food stalls of Surabaya, Kohane bought nn satay sticks and arranged them in a line, with the ii-th satay stick having length pipi. It is given that pp is a permutation∗∗ of length nn.Penchick wants to sort the satay sticks in increasing order of length, so that pi=ipi=i for each 1≤i≤n1≤i≤n. For fun, they created a rule: they can only swap neighboring satay sticks whose lengths differ by exactly 11. Formally, they can perform the following operation any number of times (including zero):  Select an index ii (1≤i≤n−11≤i≤n−1) such that |pi+1−pi|=1|pi+1−pi|=1;  Swap pipi and pi+1pi+1. Determine whether it is possible to sort the permutation pp, thus the satay sticks, by performing the above operation.∗∗A permutation of length nn is an array consisting of nn distinct integers from 11 to nn in arbitrary order. For example, [2,3,1,5,4][2,3,1,5,4] is a permutation, but [1,2,2][1,2,2] is not a permutation (22 appears twice in the array), and [1,3,4][1,3,4] is also not a permutation (n=3n=3 but there is 44 in the array). 
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤2⋅1051≤t≤2⋅105). The description of the test cases follows.The first line of each test case contains a single integer nn (1≤n≤2⋅1051≤n≤2⋅105) — the number of satay sticks.The second line of each test case contains nn integers p1,p2,…,pnp1,p2,…,pn (1≤pi≤n1≤pi≤n) — the permutation pp representing the length of the satay sticks.It is guaranteed that the sum of nn over all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case, output "YES" if it is possible to sort permutation pp by performing the operation. Otherwise, output "NO".You can output the answer in any case (upper or lower). For example, the strings "yEs", "yes", "Yes", and "YES" will be recognized as positive responses.
InputCopy242 1 3 444 2 3 1
InputCopy
Copy
2
4
2 1 3 4
4
4 2 3 1
OutputCopyYES
NO

OutputCopy
Copy


[Problem C - contest/2031]
Penchick loves two things: square numbers and Hong Kong-style BBQ buns! For his birthday, Kohane wants to combine them with a gift: nn BBQ buns arranged from left to right. There are 106106 available fillings of BBQ buns, numbered from 11 to 106106. To ensure that Penchick would love this gift, Kohane has a few goals:  No filling is used exactly once; that is, each filling must either not appear at all or appear at least twice.  For any two buns ii and jj that have the same filling, the distance between them, which is |i−j||i−j|, must be a perfect square∗∗. Help Kohane find a valid way to choose the filling of the buns, or determine if it is impossible to satisfy her goals! If there are multiple solutions, print any of them.∗∗A positive integer xx is a perfect square if there exists a positive integer yy such that x=y2x=y2. For example, 4949 and 11 are perfect squares because 49=7249=72 and 1=121=12 respectively. On the other hand, 55 is not a perfect square as no integer squared equals 55
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤2⋅1051≤t≤2⋅105). The description of the test cases follows.The only line of each test case contains a single integer nn (1≤n≤2⋅1051≤n≤2⋅105) — the number of BBQ buns.It is guaranteed that the sum of nn over all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case, if no valid choice of fillings exists, output −1−1. Otherwise, output nn integers, where the ii-th integer represents the filling of the ii-th BBQ bun. If there are multiple solutions, print any of them.
InputCopy2312
InputCopy
Copy
2
3
12
OutputCopy-1
1 2 3 6 10 2 7 6 10 1 7 3

OutputCopy
Copy


[Problem D - contest/2031]
Dedicated to pushing himself to his limits, Penchick challenged himself to survive the midday sun in the Arabian Desert!While trekking along a linear oasis, Penchick spots a desert rabbit preparing to jump along a line of palm trees. There are nn trees, each with a height denoted by aiai.The rabbit can jump from the ii-th tree to the jj-th tree if exactly one of the following conditions is true:  j<ij<i and aj>aiaj>ai: the rabbit can jump backward to a taller tree.  j>ij>i and aj<aiaj<ai: the rabbit can jump forward to a shorter tree. For each ii from 11 to nn, determine the maximum height among all trees that the rabbit can reach if it starts from the ii-th tree.
InputThe first line contains the number of test cases tt (1≤t≤5⋅1051≤t≤5⋅105). The description of the test cases follows.The first line of each test case contains a single integer nn (1≤n≤5⋅1051≤n≤5⋅105) — the number of trees.The second line of each test case contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤n1≤ai≤n) — the height of the trees.It is guaranteed that the sum of nn over all test cases does not exceed 5⋅1055⋅105.
OutputFor each test case, output nn integers. The ii-th integer should contain the maximum height among all trees that the rabbit can reach if it starts from the ii-th tree.
InputCopy542 3 1 455 4 3 2 142 1 1 341 1 3 182 4 1 6 3 8 5 7
InputCopy
Copy
5
4
2 3 1 4
5
5 4 3 2 1
4
2 1 1 3
4
1 1 3 1
8
2 4 1 6 3 8 5 7
OutputCopy3 3 3 4 
5 5 5 5 5 
2 2 2 3 
1 1 3 3 
8 8 8 8 8 8 8 8 

OutputCopy
Copy


[Problem E - contest/2031]
 With just a few hours left until Penchick and Chloe leave for Singapore, they could hardly wait to see the towering trees at the Singapore Botanic Gardens! Attempting to contain their excitement, Penchick crafted a rooted tree to keep Chloe and himself busy.Penchick has a rooted tree∗∗ consisting of nn vertices, numbered from 11 to nn, with vertex 11 as the root, and Chloe can select a non-negative integer dd to create a perfect binary tree†† of depth dd.Since Penchick and Chloe are good friends, Chloe wants her tree to be isomorphic‡‡ to Penchick's tree. To meet this condition, Chloe can perform the following operation on her own tree any number of times:  Select an edge (u,v)(u,v), where uu is the parent of vv.  Remove vertex vv and all the edges connected to vv, then connect all of vv's previous children directly to uu. In particular, doing an operation on an edge (u,v)(u,v) where vv is a leaf will delete vertex vv without adding any new edges.Since constructing a perfect binary tree can be time-consuming, Chloe wants to choose the minimum dd such that a perfect binary tree of depth dd can be made isomorphic to Penchick's tree using the above operation. Note that she can't change the roots of the trees.∗∗A tree is a connected graph without cycles.  A rooted tree is a tree where one vertex is special and called the root.  The parent of vertex vv is the first vertex on the simple path from vv to the root. The root has no parent.  A child of vertex vv is any vertex uu for which vv is the parent.  A leaf is any vertex without children. ††A full binary tree is rooted tree, in which each node has 00 or 22 children.  A perfect binary tree is a full binary tree in which every leaf is at the same distance from the root. The depth of such a tree is the distance from the root to a leaf.‡‡Two rooted trees, rooted at r1r1 and r2r2 respectively, are considered isomorphic if there exists a permutation pp of the vertices such that an edge (u,v)(u,v) exists in the first tree if and only if the edge (pu,pv)(pu,pv) exists in the second tree, and pr1=r2pr1=r2.
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤1051≤t≤105). The description of the test cases follows.The first line of each test case contains a single integer nn (2≤n≤1062≤n≤106) — the number of vertices in Penchick's tree.The second line of each test case contains n−1n−1 integers p2,p3,…,pnp2,p3,…,pn (1≤pi≤i−11≤pi≤i−1) — the parent of vertex ii.It is guaranteed that the sum of nn over all test cases does not exceed 106106.
OutputFor each test case, output a single integer on each line: the minimum depth of Chloe's perfect binary tree.
InputCopy561 2 2 1 1151 1 2 2 3 3 4 4 5 5 6 6 7 751 2 2 271 1 2 1 1 2101 1 1 2 2 2 4 3 3
InputCopy
Copy
5
6
1 2 2 1 1
15
1 1 2 2 3 3 4 4 5 5 6 6 7 7
5
1 2 2 2
7
1 1 2 1 1 2
10
1 1 1 2 2 2 4 3 3
OutputCopy2
3
3
3
3

OutputCopy
Copy


[Problem F - contest/2031]
 This is an interactive problem. Returning from a restful vacation on Australia's Gold Coast, Penchick forgot to bring home gifts for his pet duck Duong Canh! But perhaps a beautiful problem crafted through deep thought on the scenic beaches could be the perfect souvenir.There is a hidden permutation∗∗ pp of length nn, where nn is even. You are allowed to make the following query:  Choose a subsequence†† of the permutation pp with even length 4≤k≤n4≤k≤n. The interactor will return the value of the two medians‡‡ in the chosen subsequence. Find the index of the two medians in permutation pp using at most 8080 queries.Note that the interactor is non-adaptive. This means that the permutation pp is fixed at the beginning and will not change based on your queries.∗∗A permutation of length nn is an array consisting of nn distinct integers from 11 to nn in arbitrary order. For example, [2,3,1,5,4][2,3,1,5,4] is a permutation, but [1,2,2][1,2,2] is not a permutation (22 appears twice in the array), and [1,3,4][1,3,4] is also not a permutation (n=3n=3 but there is 44 in the array). ††A sequence aa is a subsequence of a sequence bb if aa can be obtained from bb by the deletion of several (possibly, zero or all) element from arbitrary positions. ‡‡The two medians of an array aa with even length kk are defined as the k2k2-th and (k2+1)(k2+1)-th smallest element in the array (11-indexed).
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤10001≤t≤1000). The description of the test cases follows. The only line of each test case contains a single integer nn (6≤n≤1006≤n≤100, nn is even) — the length of the hidden permutation pp.For each test case, after reading the integer nn, you should begin the interaction and find the answer before reading nn for the next test case.It is guaranteed that the sum of nn over all test cases does not exceed 104104. 
InputCopy2
6

3 4

3 4

2 3

10

3 4

6 7

InputCopy
Copy
OutputCopy

? 6 1 2 3 4 5 6

? 4 3 6 1 5

? 4 3 6 2 5

! 3 6

? 6 1 3 7 8 9 10

? 8 1 2 3 4 5 6 7 8

! 6 5
OutputCopy
Copy


[Problem A - contest/2028]
Alice is trying to meet up with the Red Queen in the countryside! Right now, Alice is at position (0,0)(0,0), and the Red Queen is at position (a,b)(a,b). Alice can only move in the four cardinal directions (north, east, south, west). More formally, if Alice is at the point (x,y)(x,y), she will do one of the following:   go north (represented by N), moving to (x,y+1)(x,y+1);  go east (represented by E), moving to (x+1,y)(x+1,y);  go south (represented by S), moving to (x,y−1)(x,y−1); or  go west (represented by W), moving to (x−1,y)(x−1,y). Alice's movements are predetermined. She has a string ss representing a sequence of moves that she performs from left to right. Once she reaches the end of the sequence, she repeats the same pattern of moves forever.Can you help Alice figure out if she will ever meet the Red Queen?
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤5001≤t≤500). The description of the test cases follows.The first line of each test case contains three integers nn, aa, bb (1≤n1≤n, aa, b≤10b≤10) — the length of the string and the initial coordinates of the Red Queen.The second line contains a string ss of length nn consisting only of the characters N, E, S, or W.
OutputFor each test case, output a single string "YES" or "NO" (without the quotes) denoting whether Alice will eventually meet the Red Queen.You can output the answer in any case (upper or lower). For example, the strings "yEs", "yes", "Yes", and "YES" will be recognized as positive responses.
InputCopy62 2 2NE3 2 2NNE6 2 1NNEESW6 10 10NNEESW3 4 2NEE4 5 5NEWS
InputCopy
Copy
6
2 2 2
NE
3 2 2
NNE
6 2 1
NNEESW
6 10 10
NNEESW
3 4 2
NEE
4 5 5
NEWS
OutputCopyYES
NO
YES
YES
YES
NO

OutputCopy
Copy


[Problem B - contest/2028]
Alice mixed up the words transmutation and permutation! She has an array aa specified via three integers nn, bb, cc: the array aa has length nn and is given via ai=b⋅(i−1)+cai=b⋅(i−1)+c for 1≤i≤n1≤i≤n. For example, if n=3n=3, b=2b=2, and c=1c=1, then a=[2⋅0+1,2⋅1+1,2⋅2+1]=[1,3,5]a=[2⋅0+1,2⋅1+1,2⋅2+1]=[1,3,5].Now, Alice really enjoys permutations of [0,…,n−1][0,…,n−1]∗∗ and would like to transform aa into a permutation. In one operation, Alice replaces the maximum element of aa with the MEXMEX†† of aa. If there are multiple maximum elements in aa, Alice chooses the leftmost one to replace.Can you help Alice figure out how many operations she has to do for aa to become a permutation for the first time? If it is impossible, you should report it.∗∗A permutation of length nn is an array consisting of nn distinct integers from 00 to n−1n−1 in arbitrary order. Please note, this is slightly different from the usual definition of a permutation. For example, [1,2,0,4,3][1,2,0,4,3] is a permutation, but [0,1,1][0,1,1] is not a permutation (11 appears twice in the array), and [0,2,3][0,2,3] is also not a permutation (n=3n=3 but there is 33 in the array).††The MEXMEX of an array is the smallest non-negative integer that does not belong to the array. For example, the MEXMEX of [0,3,1,3][0,3,1,3] is 22 and the MEXMEX of [5][5] is 00.
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤1051≤t≤105). The description of the test cases follows.The only line of each test case contains three integers nn, bb, cc (1≤n≤10181≤n≤1018; 0≤b0≤b, c≤1018c≤1018) — the parameters of the array.
OutputFor each test case, if the array can never become a permutation, output −1−1. Otherwise, output the minimum number of operations for the array to become a permutation.
InputCopy710 1 01 2 3100 2 13 0 13 0 01000000000000000000 0 01000000000000000000 1000000000000000000 1000000000000000000
InputCopy
Copy
7
10 1 0
1 2 3
100 2 1
3 0 1
3 0 0
1000000000000000000 0 0
1000000000000000000 1000000000000000000 1000000000000000000
OutputCopy0
1
50
2
-1
-1
1000000000000000000

OutputCopy
Copy


[Problem C - contest/2028]
Alice is at the Mad Hatter's tea party! There is a long sheet cake made up of nn sections with tastiness values a1,a2,…,ana1,a2,…,an. There are mm creatures at the tea party, excluding Alice. Alice will cut the cake into m+1m+1 pieces. Formally, she will partition the cake into m+1m+1 subarrays, where each subarray consists of some number of adjacent sections. The tastiness of a piece is the sum of tastiness of its sections. Afterwards, she will divvy these m+1m+1 pieces up among the mm creatures and herself (her piece can be empty). However, each of the mm creatures will only be happy when the tastiness of its piece is vv or more.Alice wants to make sure every creature is happy. Limited by this condition, she also wants to maximize the tastiness of her own piece. Can you help Alice find the maximum tastiness her piece can have? If there is no way to make sure every creature is happy, output −1−1.
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤1041≤t≤104). The description of the test cases follows.The first line of each test case contains three integers n,m,vn,m,v (1≤m≤n≤2⋅1051≤m≤n≤2⋅105; 1≤v≤1091≤v≤109) — the number of sections, the number of creatures, and the creatures' minimum requirement for tastiness, respectively.The next line contains nn space separated integers a1,a2,…,ana1,a2,…,an (1≤ai≤1091≤ai≤109) — the tastinesses of the sections.The sum of nn over all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case, output the maximum tastiness Alice can achieve for her piece, or −1−1 if there is no way to make sure every creature is happy.
InputCopy76 2 11 1 10 1 1 106 2 21 1 10 1 1 106 2 31 1 10 1 1 106 2 101 1 10 1 1 106 2 111 1 10 1 1 106 2 121 1 10 1 1 106 2 121 1 1 1 10 10
InputCopy
Copy
7
6 2 1
1 1 10 1 1 10
6 2 2
1 1 10 1 1 10
6 2 3
1 1 10 1 1 10
6 2 10
1 1 10 1 1 10
6 2 11
1 1 10 1 1 10
6 2 12
1 1 10 1 1 10
6 2 12
1 1 1 1 10 10
OutputCopy22
12
2
2
2
0
-1

OutputCopy
Copy


[Problem D - contest/2028]
Alice is playing cards with the Queen of Hearts, King of Hearts, and Jack of Hearts. There are nn different types of cards in their card game. Alice currently has a card of type 11 and needs a card of type nn to escape Wonderland. The other players have one of each kind of card.In this card game, Alice can trade cards with the three other players. Each player has different preferences for the nn types of cards, which can be described by permutations∗∗ qq, kk, and jj for the Queen, King, and Jack, respectively. A player values card aa more than card bb if for their permutation pp, pa>pbpa>pb. Then, this player is willing to trade card bb to Alice in exchange for card aa. Alice's preferences are straightforward: she values card aa more than card bb if a>ba>b, and she will also only trade according to these preferences.Determine if Alice can trade up from card 11 to card nn subject to these preferences, and if it is possible, give a possible set of trades to do it.∗∗A permutation of length nn is an array consisting of nn distinct integers from 11 to nn in arbitrary order. For example, [2,3,1,5,4][2,3,1,5,4] is a permutation, but [1,2,2][1,2,2] is not a permutation (22 appears twice in the array), and [1,3,4][1,3,4] is also not a permutation (n=3n=3 but there is 44 in the array).
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤1041≤t≤104). The description of the test cases follows.The first line of each test case contains an integer nn (2≤n≤2⋅1052≤n≤2⋅105) — the number of card types.The next three lines contain the preferences of the Queen, King, and Jack respectively. Each of these lines contains nn integers p1,p2,…,pnp1,p2,…,pn (1≤pi≤n1≤pi≤n) — a permutation corresponding to the player's preferences.The sum of nn over all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case, on the first line output a single string "YES" or "NO" (without the quotes) denoting whether Alice can trade up to card nn.If the first line was "YES", then on the next line output kk — the number of trades Alice will make. On the next kk lines output space separated a character c∈{q,k,j} and integer x, denoting that Alice trades with player c to get card x. It must be the case that on the k'th line, x=n. If there are multiple solutions, print any of them.You can output this answer in any case (upper or lower). For example, the strings "yEs", "yes", "Yes", and "YES" will be recognized as positive responses. The same goes for the character c denoting the player in the trade (Q,K,J will all be accepted alongside their lowercase variants).
InputCopy231 3 22 1 31 2 342 3 1 41 2 3 41 4 2 3
InputCopy
Copy
2
3
1 3 2
2 1 3
1 2 3
4
2 3 1 4
1 2 3 4
1 4 2 3
OutputCopyYES
2
k 2
q 3
NO

OutputCopy
Copy


[Problem E - contest/2028]
Alice is at the bottom of the rabbit hole! The rabbit hole can be modeled as a tree∗∗ which has an exit at vertex 11, and Alice starts at some vertex vv. She wants to get out of the hole, but unfortunately, the Queen of Hearts has ordered her execution. Each minute, a fair coin is flipped. If it lands heads, Alice gets to move to an adjacent vertex of her current location, and otherwise, the Queen of Hearts gets to pull Alice to an adjacent vertex of the Queen's choosing. If Alice ever ends up on any of the non-root leaves†† of the tree, Alice loses.Assuming both of them move optimally, compute the probability that Alice manages to escape for every single starting vertex 1≤v≤n1≤v≤n. Since these probabilities can be very small, output them modulo 998244353998244353.Formally, let M=998244353M=998244353. It can be shown that the exact answer can be expressed as an irreducible fraction pqpq, where pp and qq are integers and q≢0(modM)q≢0(modM). Output the integer equal to p⋅q−1modMp⋅q−1modM. In other words, output such an integer xx that 0≤x<M0≤x<M and x⋅q≡p(modM)x⋅q≡p(modM). ∗∗A tree is a connected simple graph which has nn vertices and n−1n−1 edges.††A leaf is a vertex that is connected to exactly one edge.
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤1041≤t≤104). The description of the test cases follows.The first line of each test case contains a single integer nn (2≤n≤2⋅1052≤n≤2⋅105) — the number of vertices in the tree.The ii-th of the next n−1n−1 lines contains two integers xixi and yiyi (1≤xi,yi≤n1≤xi,yi≤n and xi≠yixi≠yi) — the edges of the tree. It is guaranteed that the given edges form a tree.It is guaranteed that the sum of nn over all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case, output nn integers on one line — the probabilities of Alice escaping starting from vertex 1,2,…,n1,2,…,n. Since these probabilities can be very small, output them modulo 998244353998244353.
InputCopy251 21 32 43 591 22 34 55 67 88 92 45 7
InputCopy
Copy
2
5
1 2
1 3
2 4
3 5
9
1 2
2 3
4 5
5 6
7 8
8 9
2 4
5 7
OutputCopy1 499122177 499122177 0 0 
1 499122177 0 332748118 166374059 0 443664157 720954255 0 

OutputCopy
Copy


[Problem F - contest/2028]
Note that the memory limit is unusual.The Cheshire Cat has a riddle for Alice: given nn integers a1,a2,…,ana1,a2,…,an and a target mm, is there a way to insert ++ and ×× into the circles of the expression a1∘a2∘⋯∘an=ma1∘a2∘⋯∘an=m to make it true? We follow the usual order of operations: ×× is done before ++.Although Alice is excellent at chess, she is not good at math. Please help her so she can find a way out of Wonderland!
InputEach test contains multiple test cases. The first line of input contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases. The description of the test cases follows.The first line of each test case contains two integers n,mn,m (1≤n≤2⋅1051≤n≤2⋅105; 1≤m≤1041≤m≤104) — the number of integers and the target, respectively.The second line of each test case contains nn integers a1,a2,…,ana1,a2,…,an (0≤ai≤1040≤ai≤104) — the elements of the array aa.The sum of nn over all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case, output "YES" without quotes if it is possible to get the target by inserting ++ or ×× and "NO" otherwise.You can output each letter in any case (for example, the strings "yEs", "yes", "Yes", and "YES" will be recognized as a positive answer).
InputCopy65 42 1 1 1 25 52 1 1 1 25 62 1 1 1 25 72 1 1 1 25 82 1 1 1 25 62 0 2 2 3
InputCopy
Copy
6
5 4
2 1 1 1 2
5 5
2 1 1 1 2
5 6
2 1 1 1 2
5 7
2 1 1 1 2
5 8
2 1 1 1 2
5 6
2 0 2 2 3
OutputCopyYES
YES
YES
YES
NO
YES

OutputCopy
Copy


[Problem A - contest/2029]
You are given a positive integer k and a set S of all integers from l to r (inclusive).You can perform the following two-step operation any number of times (possibly zero): First, choose a number x from the set S, such that there are at least k multiples of x in S (including x itself);  Then, remove x from S (note that nothing else is removed).Find the maximum possible number of operations that can be performed.
InputEach test contains multiple test cases. The first line of the input contains a single integer t (1≤t≤104) — the number of test cases. The description of test cases follows.The only line of each test case contains three integers l, r, and k (1≤l≤r≤109, 1≤k≤r−l+1) — the minimum integer in S, the maximum integer in S, and the parameter k.
OutputFor each test case, output a single integer — the maximum possible number of operations that can be performed.
InputCopy83 9 24 9 17 9 22 10 2154 220 2147 294 2998 24435 31 1000000000 2
InputCopy
Copy
8
3 9 2
4 9 1
7 9 2
2 10 2
154 220 2
147 294 2
998 24435 3
1 1000000000 2
OutputCopy2
6
0
4
0
1
7148
500000000

OutputCopy
Copy


[Problem B - contest/2029]
You have a binary string∗∗ ss of length nn, and Iris gives you another binary string rr of length n−1n−1.Iris is going to play a game with you. During the game, you will perform n−1n−1 operations on ss. In the ii-th operation (1≤i≤n−11≤i≤n−1):  First, you choose an index kk such that 1≤k≤|s|−11≤k≤|s|−1 and sk≠sk+1sk≠sk+1. If it is impossible to choose such an index, you lose;  Then, you replace sksk+1sksk+1 with riri. Note that this decreases the length of ss by 11. If all the n−1n−1 operations are performed successfully, you win.Determine whether it is possible for you to win this game.∗∗A binary string is a string where each character is either 00 or 11.
InputEach test contains multiple test cases. The first line of the input contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases. The description of test cases follows.The first line of each test case contains a single integer nn (2≤n≤1052≤n≤105) — the length of ss.The second line contains the binary string ss of length nn (si=0si=0 or 11).The third line contains the binary string rr of length n−1n−1 (ri=0ri=0 or 11).It is guaranteed that the sum of nn over all test cases does not exceed 105105.
OutputFor each test case, print "YES" (without quotes) if you can win the game, and "NO" (without quotes) otherwise.You can output the answer in any case (upper or lower). For example, the strings "yEs", "yes", "Yes", and "YES" will be recognized as positive responses.
InputCopy621102011411010016111110100006010010110108100100100010010
InputCopy
Copy
6
2
11
0
2
01
1
4
1101
001
6
111110
10000
6
010010
11010
8
10010010
0010010
OutputCopyNO
YES
YES
NO
YES
NO

OutputCopy
Copy


[Problem C - contest/2029]
Hello, Codeforces Forcescode! Kevin used to be a participant of Codeforces. Recently, the KDOI Team has developed a new Online Judge called Forcescode. Kevin has participated in nn contests on Forcescode. In the ii-th contest, his performance rating is aiai.Now he has hacked into the backend of Forcescode and will select an interval [l,r][l,r] (1≤l≤r≤n1≤l≤r≤n), then skip all of the contests in this interval. After that, his rating will be recalculated in the following way:  Initially, his rating is x=0x=0;  For each 1≤i≤n1≤i≤n, after the ii-th contest,   If l≤i≤rl≤i≤r, this contest will be skipped, and the rating will remain unchanged;  Otherwise, his rating will be updated according to the following rules:   If ai>xai>x, his rating xx will increase by 11;  If ai=xai=x, his rating xx will remain unchanged;  If ai<xai<x, his rating xx will decrease by 11.   You have to help Kevin to find his maximum possible rating after the recalculation if he chooses the interval [l,r][l,r] optimally. Note that Kevin has to skip at least one contest.
InputEach test contains multiple test cases. The first line of the input contains a single integer tt (1≤t≤5⋅1041≤t≤5⋅104) — the number of test cases. The description of test cases follows.The first line of each test case contains a single integer nn (1≤n≤3⋅1051≤n≤3⋅105) — the number of contests.The second line contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤n1≤ai≤n) — the performance ratings in the contests.It is guaranteed that the sum of nn over all test cases does not exceed 3⋅1053⋅105.
OutputFor each test case, output a single integer — the maximum possible rating after the recalculation if Kevin chooses the interval optimally.
InputCopy561 2 3 4 5 671 2 1 1 1 3 41199 9 8 2 4 4 3 5 3101 2 3 4 1 3 2 1 1 10
InputCopy
Copy
5
6
1 2 3 4 5 6
7
1 2 1 1 1 3 4
1
1
9
9 9 8 2 4 4 3 5 3
10
1 2 3 4 1 3 2 1 1 10
OutputCopy5
4
0
4
5

OutputCopy
Copy


[Problem D - contest/2029]
You are given an undirected graph with nn vertices and mm edges.You can perform the following operation at most 2⋅max(n,m)2⋅max(n,m) times:  Choose three distinct vertices aa, bb, and cc, then for each of the edges (a,b)(a,b), (b,c)(b,c), and (c,a)(c,a), do the following:   If the edge does not exist, add it. On the contrary, if it exists, remove it.  A graph is called cool if and only if one of the following holds:  The graph has no edges, or  The graph is a tree. You have to make the graph cool by performing the above operations. Note that you can use at most 2⋅max(n,m)2⋅max(n,m) operations.It can be shown that there always exists at least one solution.
InputEach test contains multiple test cases. The first line of input contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases. The description of test cases follows.The first line of each test case contains two integers nn and mm (3≤n≤1053≤n≤105, 0≤m≤min(n(n−1)2,2⋅105)0≤m≤min(n(n−1)2,2⋅105)) — the number of vertices and the number of edges.Then mm lines follow, the ii-th line contains two integers uiui and vivi (1≤ui,vi≤n1≤ui,vi≤n) — the two nodes that the ii-th edge connects.It is guaranteed that the sum of nn over all test cases does not exceed 105105, and the sum of mm over all test cases does not exceed 2⋅1052⋅105.It is guaranteed that there are no self-loops or multiple-edges in the given graph.
OutputFor each test case, in the first line output an integer kk (0≤k≤2⋅max(n,m)0≤k≤2⋅max(n,m)) — the number of operations.Then output kk lines, the ii-th line containing three distinct integers aa, bb, and cc (1≤a,b,c≤n1≤a,b,c≤n) — the three integers you choose in the ii-th operation.If there are multiple solutions, you can output any of them.
InputCopy53 03 11 23 21 22 33 31 22 33 16 61 21 64 53 44 63 6
InputCopy
Copy
5
3 0
3 1
1 2
3 2
1 2
2 3
3 3
1 2
2 3
3 1
6 6
1 2
1 6
4 5
3 4
4 6
3 6
OutputCopy0
1
1 2 3
0
1
1 2 3
3
1 3 6
2 4 5
3 4 6

OutputCopy
Copy


[Problem E - contest/2029]
For two integers xx and yy (x,y≥2x,y≥2), we will say that xx is a generator of yy if and only if xx can be transformed to yy by performing the following operation some number of times (possibly zero):  Choose a divisor dd (d≥2d≥2) of xx, then increase xx by dd. For example,   33 is a generator of 88 since we can perform the following operations: 3−→−d=36−→−d=283→d=36→d=28;  44 is a generator of 1010 since we can perform the following operations: 4−→−d=48−→−d=2104→d=48→d=210;  55 is not a generator of 66 since we cannot transform 55 into 66 with the operation above. Now, Kevin gives you an array aa consisting of nn pairwise distinct integers (ai≥2ai≥2).You have to find an integer x≥2x≥2 such that for each 1≤i≤n1≤i≤n, xx is a generator of aiai, or determine that such an integer does not exist.
InputEach test contains multiple test cases. The first line of the input contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases. The description of test cases follows.The first line of each test case contains a single integer nn (1≤n≤1051≤n≤105) — the length of the array aa.The second line contains nn integers a1,a2,…,ana1,a2,…,an (2≤ai≤4⋅1052≤ai≤4⋅105) — the elements in the array aa. It is guaranteed that the elements are pairwise distinct.It is guaranteed that the sum of nn over all test cases does not exceed 105105.
OutputFor each test case, output a single integer xx — the integer you found. Print −1−1 if there does not exist a valid xx.If there are multiple answers, you may output any of them.
InputCopy438 9 1042 3 4 52147 15453 6 8 25 100000
InputCopy
Copy
4
3
8 9 10
4
2 3 4 5
2
147 154
5
3 6 8 25 100000
OutputCopy2
-1
7
3

OutputCopy
Copy


[Problem F - contest/2029]
You are given a cycle with nn vertices numbered from 00 to n−1n−1. For each 0≤i≤n−10≤i≤n−1, there is an undirected edge between vertex ii and vertex ((i+1)modn)((i+1)modn) with the color cici (ci=Rci=R or BB).Determine whether the following condition holds for every pair of vertices (i,j)(i,j) (0≤i<j≤n−10≤i<j≤n−1): There exists a palindrome route between vertex ii and vertex jj. Note that the route may not be simple. Formally, there must exist a sequence p=[p0,p1,p2,…,pm]p=[p0,p1,p2,…,pm] such that: p0=ip0=i, pm=jpm=j;  For each 0≤x≤m−10≤x≤m−1, either px+1=(px+1)modnpx+1=(px+1)modn or px+1=(px−1)modnpx+1=(px−1)modn;  For each 0≤x≤y≤m−10≤x≤y≤m−1 satisfying x+y=m−1x+y=m−1, the edge between pxpx and px+1px+1 has the same color as the edge between pypy and py+1py+1.
InputEach test contains multiple test cases. The first line contains the number of test cases tt (1≤t≤1051≤t≤105) — the number of test cases. The description of the test cases follows.The first line of each test case contains an integer nn (3≤n≤1063≤n≤106) — the number of vertices in the cycle.The second line contains a string cc of length nn (ci=Rci=R or BB) — the color of each edge.It is guaranteed that the sum of nn over all test cases does not exceed 106106.
OutputFor each test case, print "YES" (without quotes) if there is a palindrome route between any pair of nodes, and "NO" (without quotes) otherwise.You can output the answer in any case (upper or lower). For example, the strings "yEs", "yes", "Yes", and "YES" will be recognized as positive responses.
InputCopy75RRRRR5RRRRB5RBBRB6RBRBRB6RRBBRB5RBRBR12RRBRRBRRBRRB
InputCopy
Copy
7
5
RRRRR
5
RRRRB
5
RBBRB
6
RBRBRB
6
RRBBRB
5
RBRBR
12
RRBRRBRRBRRB
OutputCopyYES
YES
YES
NO
NO
YES
NO

OutputCopy
Copy


[Problem G - contest/2029]
There is an array a consisting of n integers. Initially, all elements of a are equal to 0.Kevin can perform several operations on the array. Each operation is one of the following two types: Prefix addition — Kevin first selects an index x (1≤x≤n), and then for each 1≤j≤x, increases aj by 1;  Suffix addition — Kevin first selects an index x (1≤x≤n), and then for each x≤j≤n, increases aj by 1.In the country of KDOI, people think that the integer v is balanced. Thus, Iris gives Kevin an array c consisting of n integers and defines the beauty of the array a as follows: Initially, set b=0;  For each 1≤i≤n, if ai=v, add ci to b;  The beauty of a is the final value of b.Kevin wants to maximize the beauty of a after all the operations. However, he had already performed m operations when he was sleepy. Now, he can perform an arbitrary number (possibly zero) of new operations.You have to help Kevin find the maximum possible beauty if he optimally performs the new operations.However, to make sure that you are not just rolling the dice, Kevin gives you an integer V, and you need to solve the problem for each 1≤v≤V.
InputEach test contains multiple test cases. The first line of the input contains a single integer t (1≤t≤1000) — the number of test cases. The description of test cases follows.The first line of each test case contains three integers n, m, and V (1≤n,m≤2⋅105, 1≤V≤2000) — the length of the array a, the number of initial operations, and the number that Kevin gives you.The second line contains n integers c1,c2,…,cn (1≤ci≤109) — the elements in the array c.Then m lines follow, the i-th line containing a character op and an integer x (op=L or R, 1≤x≤n) — the type of the i-th operation and the selected index.  If op=L, this operation is a prefix addition on index x;  If op=R, this operation is a suffix addition on index x. It is guaranteed that:  the sum of n over all test cases does not exceed 2⋅105;  the sum of m over all test cases does not exceed 2⋅105;  the sum of V2 over all test cases does not exceed 4⋅106. 
OutputFor each test case, output V integers in a single line, the i-th integer denoting the maximum possible beauty after Kevin performs some new operations when v=i.
InputCopy53 3 21 2 4L 3R 3L 13 3 25 1 4L 3R 3L 15 4 51 1 1 1 1L 3R 2L 5L 410 12 910 9 8 7 6 5 4 3 2 1L 2L 4R 4R 4L 6R 8L 3L 2R 1R 10L 8L 11 1 41000000000L 1
InputCopy
Copy
5
3 3 2
1 2 4
L 3
R 3
L 1
3 3 2
5 1 4
L 3
R 3
L 1
5 4 5
1 1 1 1 1
L 3
R 2
L 5
L 4
10 12 9
10 9 8 7 6 5 4 3 2 1
L 2
L 4
R 4
R 4
L 6
R 8
L 3
L 2
R 1
R 10
L 8
L 1
1 1 4
1000000000
L 1
OutputCopy2 6
1 9
0 1 3 5 5
0 0 0 6 25 32 35 44 51
1000000000 1000000000 1000000000 1000000000

OutputCopy
Copy


[Problem H - contest/2029]
Given is an undirected graph with nn vertices and mm edges. Each edge connects two vertices (u,v)(u,v) and has a probability of pqpq of appearing each day.Initially, vertex 11 has a message. At the end of the day, a vertex has a message if and only if itself or at least one of the vertices adjacent to it had the message the day before. Note that each day, each edge chooses its appearance independently.Calculate the expected number of days before all the vertices have the message, modulo 998244353998244353.
InputThe first line contains two integers nn and mm (1≤n≤211≤n≤21, n−1≤m≤n(n−1)2n−1≤m≤n(n−1)2).Then mm lines follow, each containing four integers uu, vv, pp, and qq (1≤u≠v≤n1≤u≠v≤n, 1≤p<q<9982443531≤p<q<998244353, gcd(p,q)=1gcd(p,q)=1) — there is an undirected edge between uu and vv, and it has a probability of appearance of pqpq each day. It is guaranteed that there are no self-loops or multiple-edges in the graph and that the graph is connected if all of the edges appear.Additional constraint in the input: Let gi,jgi,j be the probability of appearance of the edge between ii and jj (gi,j=0gi,j=0 if there is no edge between ii and jj). It is guaranteed that for any S⊆{1,2,…,n}S⊆{1,2,…,n} (|S|≥1|S|≥1), ∏i∈S(∏j∈{1,2,…,n}∖S(1−gi,j))≢1(mod998244353).
OutputPrint a single integer in the only line of the output — the expected number of days, modulo 998244353.Formally, let M=998244353. It can be shown that the exact answer can be expressed as an irreducible fraction pq, where p and q are integers and q≢0(modM). Output the integer equal to p⋅q−1modM. In other words, output such an integer x that 0≤x<M and x⋅q≡p(modM). 
InputCopy2 11 2 1 10
InputCopy
Copy
2 1
1 2 1 10
OutputCopy10
OutputCopy
Copy
InputCopy3 31 2 1 21 3 1 22 3 1 2
InputCopy
Copy
3 3
1 2 1 2
1 3 1 2
2 3 1 2
OutputCopy887328316
OutputCopy
Copy
InputCopy1 0
InputCopy
Copy
1 0
OutputCopy0
OutputCopy
Copy
InputCopy5 81 2 1 111 3 2 111 4 3 111 5 4 112 4 5 112 5 6 113 4 7 114 5 8 11
InputCopy
Copy
5 8
1 2 1 11
1 3 2 11
1 4 3 11
1 5 4 11
2 4 5 11
2 5 6 11
3 4 7 11
4 5 8 11
OutputCopy469993557
OutputCopy
Copy
InputCopy21 221 2 3 42 3 4 53 4 5 65 6 7 86 7 8 97 8 9 108 9 2 39 10 3 410 11 4 511 12 5 612 13 6 713 14 7 814 15 8 915 16 9 1016 17 2 317 18 3 418 19 4 519 20 5 620 21 6 71 10 100 100115 4 147 2204 11 1 998244352
InputCopy
Copy
21 22
1 2 3 4
2 3 4 5
3 4 5 6
5 6 7 8
6 7 8 9
7 8 9 10
8 9 2 3
9 10 3 4
10 11 4 5
11 12 5 6
12 13 6 7
13 14 7 8
14 15 8 9
15 16 9 10
16 17 2 3
17 18 3 4
18 19 4 5
19 20 5 6
20 21 6 7
1 10 100 1001
15 4 147 220
4 11 1 998244352
OutputCopy299529765
OutputCopy
Copy


[Problem I - contest/2029]
Kevin has recently learned the definition of variance. For an array aa of length nn, the variance of aa is defined as follows:  Let x=1n∑i=1naix=1n∑i=1nai, i.e., xx is the mean of the array aa;  Then, the variance of aa is V(a)=1n∑i=1n(ai−x)2.V(a)=1n∑i=1n(ai−x)2. Now, Kevin gives you an array aa consisting of nn integers, as well as an integer kk. You can perform the following operation on aa:  Select an interval [l,r][l,r] (1≤l≤r≤n1≤l≤r≤n), then for each l≤i≤rl≤i≤r, increase aiai by kk. For each 1≤p≤m1≤p≤m, you have to find the minimum possible variance of aa after exactly pp operations are performed, independently for each pp.For simplicity, you only need to output the answers multiplied by n2n2. It can be proven that the results are always integers.
InputEach test contains multiple test cases. The first line of the input contains a single integer tt (1≤t≤1001≤t≤100) — the number of test cases. The description of test cases follows.The first line of each test case contains three integers nn, mm, and kk (1≤n,m≤50001≤n,m≤5000, n⋅m≤2⋅104n⋅m≤2⋅104, 1≤k≤1051≤k≤105) — the length of the array aa, the maximum number of operations, and the number you add to aiai each time, respectively.The second line contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤1051≤ai≤105) — the elements of the array aa.It is guaranteed that the sum of n⋅mn⋅m over all tests does not exceed 2⋅1042⋅104.
OutputFor each test case, output mm integers in a single line, the pp-th integer denoting the minimum possible variance of aa when exactly pp operations are performed, multiplied by n2n2.
InputCopy93 2 11 2 23 2 21 2 210 2 110 1 1 1 1 10 1 1 1 16 8 21 1 4 5 1 38 8 720 43 24 2 4 3 20 438 8 320 43 24 2 4 3 20 4310 12 15 3 3 5 4 1 8 1 1 113 10 1000001 2 3 4 5 6 7 8 9 10 11 5 410 5 100002308 9982 4435 3310 100000 9 7 8100 1919 100000
InputCopy
Copy
9
3 2 1
1 2 2
3 2 2
1 2 2
10 2 1
10 1 1 1 1 10 1 1 1 1
6 8 2
1 1 4 5 1 3
8 8 7
20 43 24 2 4 3 20 43
8 8 3
20 43 24 2 4 3 20 43
10 12 1
5 3 3 5 4 1 8 1 1 1
13 10 100000
1 2 3 4 5 6 7 8 9 10 11 5 4
10 5 10000
2308 9982 4435 3310 100000 9 7 8100 1919 100000
OutputCopy0 0
2 2
1161 1024
53 21 21 5 5 5 5 5
10608 6912 4448 3104 1991 1312 535 304
13248 11184 9375 7815 6447 5319 4383 3687
385 316 269 224 181 156 124 101 80 56 41 29
1486 1486 1486 1486 1486 1486 1486 1486 1486 1486
134618047140 119919447140 107020847140 93922247140 82623647140

OutputCopy
Copy

