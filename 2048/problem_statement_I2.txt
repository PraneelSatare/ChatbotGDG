Problem Statement
This is the hard version of the problem. The difference between the versions is that in this version, you need to count the number of good arrays. You can hack only if you solved all versions of this problem.
Kevin is visiting the Red Church, and he found a puzzle on the wall.
For an array a , let c(l,r) indicate how many distinct numbers are among a l , a l+1 ,…, a r . In particular, if l>r , define c(l,r)=0 .
You are given a string s of length n consisting of letters L and R only. Let a non-negative array a be called good, if the following conditions hold for 1≤i≤n :
- if s i =L , then c(1,i−1)= a i ;
- if s i =R , then c(i+1,n)= a i .
You need to count the number of good arrays a . Since the answer may be large, you only need to output the answer modulo 998244353 .

No Footnote present

Input
Input
Each test contains multiple test cases. The first line contains a single integer t ( 1≤t≤ 10 4 ) — the number of test cases. The description of the test cases follows.
The first line of each test case contains a single integer n ( 2≤n≤2⋅ 10 5 ) — the length of string s .
The second line of each test case contains a string s with a length n , containing only English uppercase letters L and R .
It is guaranteed that the sum of n over all test cases does not exceed 2⋅ 10 5 .

Output
Output
For each test case, output the number of good arrays modulo 998244353 .

Example
[{'input': ['3', 'LLR'], 'output': '1'}, {'input': ['3', 'RRL'], 'output': '2'}, {'input': ['4', 'RRLR'], 'output': '0'}, {'input': ['5', 'LLRLR'], 'output': '1'}]

Note
Note
All arrays satisfying the conditions can be found in the easy version of this problem.